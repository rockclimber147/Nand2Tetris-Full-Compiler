   ROM    | Address  |  Source
    0     |   256    |  @256
    1     |          |  D=A
    2     |    0     |  @0
    3     |          |  M=D
    4     |    1     |  @1
    5     |          |  MD=-1
    6     |    2     |  @2
    7     |          |  MD=D-1
    8     |    3     |  @3
    9     |          |  MD=D-1
    10    |    4     |  @4
    11    |          |  MD=D-1
    12    | RAM[60]  |  @Sys.init$ret.0
    13    |          |  D=A
    14    |    0     |  @0
    15    |          |  A=M
    16    |          |  M=D
    17    |    0     |  @0
    18    |          |  M=M+1
    19    |    1     |  @1
    20    |          |  D=M
    21    |    0     |  @0
    22    |          |  A=M
    23    |          |  M=D
    24    |    0     |  @0
    25    |          |  M=M+1
    26    |    2     |  @2
    27    |          |  D=M
    28    |    0     |  @0
    29    |          |  A=M
    30    |          |  M=D
    31    |    0     |  @0
    32    |          |  M=M+1
    33    |    3     |  @3
    34    |          |  D=M
    35    |    0     |  @0
    36    |          |  A=M
    37    |          |  M=D
    38    |    0     |  @0
    39    |          |  M=M+1
    40    |    4     |  @4
    41    |          |  D=M
    42    |    0     |  @0
    43    |          |  A=M
    44    |          |  M=D
    45    |    0     |  @0
    46    |          |  M=M+1
    47    |    0     |  @0
    48    |          |  D=M
    49    |    2     |  @2
    50    |          |  M=D
    51    |    5     |  @5
    52    |          |  D=A
    53    |    2     |  @2
    54    |          |  M=M-D
    55    |    0     |  @0
    56    |          |  D=M
    57    |    1     |  @1
    58    |          |  M=D
    59    | RAM[16]  |  @Sys.init
    60    |          |  0;JMP
    61    | ROM[60]  |  (Sys.init$ret.0)
          |          |        // /* Declare field variables */
          |          |        // /*
          |          |        // FIELD  int x -> this     0
          |          |        // FIELD  int y -> this     1
          |          |        // */
          |          |        // /* set x to an arbitrary expression */
          |          |        // 
          |          |        // function Test.new 0
    61    | ROM[60]  |  (Test.new)
    61    |    0     |  @0
    62    |          |  D=M
    63    |    1     |  @1
    64    |          |  M=D
          |          |        // /*
          |          |        // ARG    int Ax -> argument 0
          |          |        // ARG    int Ay -> argument 1
          |          |        // ARG    int Az -> argument 2
          |          |        // */
          |          |        // push constant 2
    65    |    2     |  @2
    66    |          |  D=A
    67    |    0     |  @0
    68    |          |  A=M
    69    |          |  M=D
    70    |    0     |  @0
    71    |          |  M=M+1
          |          |        // call Memory.alloc 1
    72    | RAM[120] |  @Memory.alloc$ret.1
    73    |          |  D=A
    74    |    0     |  @0
    75    |          |  A=M
    76    |          |  M=D
    77    |    0     |  @0
    78    |          |  M=M+1
    79    |    1     |  @1
    80    |          |  D=M
    81    |    0     |  @0
    82    |          |  A=M
    83    |          |  M=D
    84    |    0     |  @0
    85    |          |  M=M+1
    86    |    2     |  @2
    87    |          |  D=M
    88    |    0     |  @0
    89    |          |  A=M
    90    |          |  M=D
    91    |    0     |  @0
    92    |          |  M=M+1
    93    |    3     |  @3
    94    |          |  D=M
    95    |    0     |  @0
    96    |          |  A=M
    97    |          |  M=D
    98    |    0     |  @0
    99    |          |  M=M+1
   100    |    4     |  @4
   101    |          |  D=M
   102    |    0     |  @0
   103    |          |  A=M
   104    |          |  M=D
   105    |    0     |  @0
   106    |          |  M=M+1
   107    |    0     |  @0
   108    |          |  D=M
   109    |    2     |  @2
   110    |          |  M=D
   111    |    6     |  @6
   112    |          |  D=A
   113    |    2     |  @2
   114    |          |  M=M-D
   115    |    0     |  @0
   116    |          |  D=M
   117    |    1     |  @1
   118    |          |  M=D
   119    | RAM[17]  |  @Memory.alloc
   120    |          |  0;JMP
   121    | ROM[120] |  (Memory.alloc$ret.1)
          |          |        // pop pointer 0
   121    |    0     |  @0
   122    |          |  AM=M-1
   123    |          |  D=M
   124    |    3     |  @3
   125    |          |  M=D
          |          |        // push constant 3
   126    |    3     |  @3
   127    |          |  D=A
   128    |    0     |  @0
   129    |          |  A=M
   130    |          |  M=D
   131    |    0     |  @0
   132    |          |  M=M+1
          |          |        // push constant 2
   133    |    2     |  @2
   134    |          |  D=A
   135    |    0     |  @0
   136    |          |  A=M
   137    |          |  M=D
   138    |    0     |  @0
   139    |          |  M=M+1
          |          |        // push argument 0
   140    |    0     |  @0
   141    |          |  D=A
   142    |    2     |  @2
   143    |          |  A=M
   144    |          |  A=A+D
   145    |          |  D=M
   146    |    0     |  @0
   147    |          |  A=M
   148    |          |  M=D
   149    |    0     |  @0
   150    |          |  M=M+1
          |          |        // sub
   151    |    0     |  @0
   152    |          |  AM=M-1
   153    |          |  D=M
   154    |          |  A=A-1
   155    |          |  M=M-D
          |          |        // call Math.multiply 2
   156    | RAM[204] |  @Math.multiply$ret.2
   157    |          |  D=A
   158    |    0     |  @0
   159    |          |  A=M
   160    |          |  M=D
   161    |    0     |  @0
   162    |          |  M=M+1
   163    |    1     |  @1
   164    |          |  D=M
   165    |    0     |  @0
   166    |          |  A=M
   167    |          |  M=D
   168    |    0     |  @0
   169    |          |  M=M+1
   170    |    2     |  @2
   171    |          |  D=M
   172    |    0     |  @0
   173    |          |  A=M
   174    |          |  M=D
   175    |    0     |  @0
   176    |          |  M=M+1
   177    |    3     |  @3
   178    |          |  D=M
   179    |    0     |  @0
   180    |          |  A=M
   181    |          |  M=D
   182    |    0     |  @0
   183    |          |  M=M+1
   184    |    4     |  @4
   185    |          |  D=M
   186    |    0     |  @0
   187    |          |  A=M
   188    |          |  M=D
   189    |    0     |  @0
   190    |          |  M=M+1
   191    |    0     |  @0
   192    |          |  D=M
   193    |    2     |  @2
   194    |          |  M=D
   195    |    7     |  @7
   196    |          |  D=A
   197    |    2     |  @2
   198    |          |  M=M-D
   199    |    0     |  @0
   200    |          |  D=M
   201    |    1     |  @1
   202    |          |  M=D
   203    | RAM[18]  |  @Math.multiply
   204    |          |  0;JMP
   205    | ROM[204] |  (Math.multiply$ret.2)
          |          |        // push argument 2
   205    |    2     |  @2
   206    |          |  D=A
   207    |    2     |  @2
   208    |          |  A=M
   209    |          |  A=A+D
   210    |          |  D=M
   211    |    0     |  @0
   212    |          |  A=M
   213    |          |  M=D
   214    |    0     |  @0
   215    |          |  M=M+1
          |          |        // add
   216    |    0     |  @0
   217    |          |  AM=M-1
   218    |          |  D=M
   219    |          |  A=A-1
   220    |          |  M=M+D
          |          |        // pop this 0
   221    |    0     |  @0
   222    |          |  D=A
   223    |    3     |  @3
   224    |          |  D=D+M
   225    | RAM[13]  |  @R13
   226    |          |  M=D
   227    |    0     |  @0
   228    |          |  AM=M-1
   229    |          |  D=M
   230    | RAM[13]  |  @R13
   231    |          |  A=M
   232    |          |  M=D
          |          |        // /* set y to the second argument */
          |          |        // push argument 1
   233    |    1     |  @1
   234    |          |  D=A
   235    |    2     |  @2
   236    |          |  A=M
   237    |          |  A=A+D
   238    |          |  D=M
   239    |    0     |  @0
   240    |          |  A=M
   241    |          |  M=D
   242    |    0     |  @0
   243    |          |  M=M+1
          |          |        // pop this 1
   244    |    1     |  @1
   245    |          |  D=A
   246    |    3     |  @3
   247    |          |  D=D+M
   248    | RAM[13]  |  @R13
   249    |          |  M=D
   250    |    0     |  @0
   251    |          |  AM=M-1
   252    |          |  D=M
   253    | RAM[13]  |  @R13
   254    |          |  A=M
   255    |          |  M=D
          |          |        // /* constructors must return the instance they constructed */
          |          |        // push pointer 0
   256    |    3     |  @3
   257    |          |  D=M
   258    |    0     |  @0
   259    |          |  A=M
   260    |          |  M=D
   261    |    0     |  @0
   262    |          |  M=M+1
          |          |        // return
   263    |    1     |  @1
   264    |          |  D=M
   265    |    13    |  @13
   266    |          |  M=D
   267    |    5     |  @5
   268    |          |  D=A
   269    |    13    |  @13
   270    |          |  D=M-D
   271    |          |  A=D
   272    |          |  D=M
   273    |    14    |  @14
   274    |          |  M=D
   275    |    0     |  @0
   276    |          |  AM=M-1
   277    |          |  D=M
   278    |    2     |  @2
   279    |          |  A=M
   280    |          |  M=D
   281    |    2     |  @2
   282    |          |  D=M+1
   283    |    0     |  @0
   284    |          |  M=D
   285    |    13    |  @13
   286    |          |  M=M-1
   287    |          |  A=M
   288    |          |  D=M
   289    |    4     |  @4
   290    |          |  M=D
   291    |    13    |  @13
   292    |          |  M=M-1
   293    |          |  A=M
   294    |          |  D=M
   295    |    3     |  @3
   296    |          |  M=D
   297    |    13    |  @13
   298    |          |  M=M-1
   299    |          |  A=M
   300    |          |  D=M
   301    |    2     |  @2
   302    |          |  M=D
   303    |    13    |  @13
   304    |          |  M=M-1
   305    |          |  A=M
   306    |          |  D=M
   307    |    1     |  @1
   308    |          |  M=D
   309    |    14    |  @14
   310    |          |  A=M
   311    |          |  0;JMP
          |          |        // /* returns the sum of the field variables */
          |          |        // 
          |          |        // function Test.getSum 0
   312    | ROM[311] |  (Test.getSum)
   312    |    0     |  @0
   313    |          |  D=M
   314    |    1     |  @1
   315    |          |  M=D
          |          |        // /*
          |          |        // ARG    Test this -> argument 0
          |          |        // */
          |          |        // push argument 0
   316    |    0     |  @0
   317    |          |  D=A
   318    |    2     |  @2
   319    |          |  A=M
   320    |          |  A=A+D
   321    |          |  D=M
   322    |    0     |  @0
   323    |          |  A=M
   324    |          |  M=D
   325    |    0     |  @0
   326    |          |  M=M+1
          |          |        // pop pointer 0
   327    |    0     |  @0
   328    |          |  AM=M-1
   329    |          |  D=M
   330    |    3     |  @3
   331    |          |  M=D
          |          |        // push this 0
   332    |    0     |  @0
   333    |          |  D=A
   334    |    3     |  @3
   335    |          |  A=M
   336    |          |  A=A+D
   337    |          |  D=M
   338    |    0     |  @0
   339    |          |  A=M
   340    |          |  M=D
   341    |    0     |  @0
   342    |          |  M=M+1
          |          |        // push this 1
   343    |    1     |  @1
   344    |          |  D=A
   345    |    3     |  @3
   346    |          |  A=M
   347    |          |  A=A+D
   348    |          |  D=M
   349    |    0     |  @0
   350    |          |  A=M
   351    |          |  M=D
   352    |    0     |  @0
   353    |          |  M=M+1
          |          |        // add
   354    |    0     |  @0
   355    |          |  AM=M-1
   356    |          |  D=M
   357    |          |  A=A-1
   358    |          |  M=M+D
          |          |        // return
   359    |    1     |  @1
   360    |          |  D=M
   361    |    13    |  @13
   362    |          |  M=D
   363    |    5     |  @5
   364    |          |  D=A
   365    |    13    |  @13
   366    |          |  D=M-D
   367    |          |  A=D
   368    |          |  D=M
   369    |    14    |  @14
   370    |          |  M=D
   371    |    0     |  @0
   372    |          |  AM=M-1
   373    |          |  D=M
   374    |    2     |  @2
   375    |          |  A=M
   376    |          |  M=D
   377    |    2     |  @2
   378    |          |  D=M+1
   379    |    0     |  @0
   380    |          |  M=D
   381    |    13    |  @13
   382    |          |  M=M-1
   383    |          |  A=M
   384    |          |  D=M
   385    |    4     |  @4
   386    |          |  M=D
   387    |    13    |  @13
   388    |          |  M=M-1
   389    |          |  A=M
   390    |          |  D=M
   391    |    3     |  @3
   392    |          |  M=D
   393    |    13    |  @13
   394    |          |  M=M-1
   395    |          |  A=M
   396    |          |  D=M
   397    |    2     |  @2
   398    |          |  M=D
   399    |    13    |  @13
   400    |          |  M=M-1
   401    |          |  A=M
   402    |          |  D=M
   403    |    1     |  @1
   404    |          |  M=D
   405    |    14    |  @14
   406    |          |  A=M
   407    |          |  0;JMP
          |          |        // /* Sets the x field variable */
          |          |        // 
          |          |        // function Test.setX 0
   408    | ROM[407] |  (Test.setX)
   408    |    0     |  @0
   409    |          |  D=M
   410    |    1     |  @1
   411    |          |  M=D
          |          |        // /*
          |          |        // ARG    Test this -> argument 0
          |          |        // ARG    int  newX -> argument 1
          |          |        // */
          |          |        // push argument 0
   412    |    0     |  @0
   413    |          |  D=A
   414    |    2     |  @2
   415    |          |  A=M
   416    |          |  A=A+D
   417    |          |  D=M
   418    |    0     |  @0
   419    |          |  A=M
   420    |          |  M=D
   421    |    0     |  @0
   422    |          |  M=M+1
          |          |        // pop pointer 0
   423    |    0     |  @0
   424    |          |  AM=M-1
   425    |          |  D=M
   426    |    3     |  @3
   427    |          |  M=D
          |          |        // push argument 1
   428    |    1     |  @1
   429    |          |  D=A
   430    |    2     |  @2
   431    |          |  A=M
   432    |          |  A=A+D
   433    |          |  D=M
   434    |    0     |  @0
   435    |          |  A=M
   436    |          |  M=D
   437    |    0     |  @0
   438    |          |  M=M+1
          |          |        // pop this 0
   439    |    0     |  @0
   440    |          |  D=A
   441    |    3     |  @3
   442    |          |  D=D+M
   443    | RAM[13]  |  @R13
   444    |          |  M=D
   445    |    0     |  @0
   446    |          |  AM=M-1
   447    |          |  D=M
   448    | RAM[13]  |  @R13
   449    |          |  A=M
   450    |          |  M=D
          |          |        // push constant 0
   451    |    0     |  @0
   452    |          |  D=A
   453    |    0     |  @0
   454    |          |  A=M
   455    |          |  M=D
   456    |    0     |  @0
   457    |          |  M=M+1
          |          |        // return
   458    |    1     |  @1
   459    |          |  D=M
   460    |    13    |  @13
   461    |          |  M=D
   462    |    5     |  @5
   463    |          |  D=A
   464    |    13    |  @13
   465    |          |  D=M-D
   466    |          |  A=D
   467    |          |  D=M
   468    |    14    |  @14
   469    |          |  M=D
   470    |    0     |  @0
   471    |          |  AM=M-1
   472    |          |  D=M
   473    |    2     |  @2
   474    |          |  A=M
   475    |          |  M=D
   476    |    2     |  @2
   477    |          |  D=M+1
   478    |    0     |  @0
   479    |          |  M=D
   480    |    13    |  @13
   481    |          |  M=M-1
   482    |          |  A=M
   483    |          |  D=M
   484    |    4     |  @4
   485    |          |  M=D
   486    |    13    |  @13
   487    |          |  M=M-1
   488    |          |  A=M
   489    |          |  D=M
   490    |    3     |  @3
   491    |          |  M=D
   492    |    13    |  @13
   493    |          |  M=M-1
   494    |          |  A=M
   495    |          |  D=M
   496    |    2     |  @2
   497    |          |  M=D
   498    |    13    |  @13
   499    |          |  M=M-1
   500    |          |  A=M
   501    |          |  D=M
   502    |    1     |  @1
   503    |          |  M=D
   504    |    14    |  @14
   505    |          |  A=M
   506    |          |  0;JMP
