   ROM    | Address  |  Source
    0     |   256    |  @256
    1     |          |  D=A
    2     |    0     |  @0
    3     |          |  M=D
    4     |    1     |  @1
    5     |          |  MD=-1
    6     |    2     |  @2
    7     |          |  MD=D-1
    8     |    3     |  @3
    9     |          |  MD=D-1
    10    |    4     |  @4
    11    |          |  MD=D-1
    12    | RAM[60]  |  @Sys.init$ret.0
    13    |          |  D=A
    14    |    0     |  @0
    15    |          |  A=M
    16    |          |  M=D
    17    |    0     |  @0
    18    |          |  M=M+1
    19    |    1     |  @1
    20    |          |  D=M
    21    |    0     |  @0
    22    |          |  A=M
    23    |          |  M=D
    24    |    0     |  @0
    25    |          |  M=M+1
    26    |    2     |  @2
    27    |          |  D=M
    28    |    0     |  @0
    29    |          |  A=M
    30    |          |  M=D
    31    |    0     |  @0
    32    |          |  M=M+1
    33    |    3     |  @3
    34    |          |  D=M
    35    |    0     |  @0
    36    |          |  A=M
    37    |          |  M=D
    38    |    0     |  @0
    39    |          |  M=M+1
    40    |    4     |  @4
    41    |          |  D=M
    42    |    0     |  @0
    43    |          |  A=M
    44    |          |  M=D
    45    |    0     |  @0
    46    |          |  M=M+1
    47    |    0     |  @0
    48    |          |  D=M
    49    |    2     |  @2
    50    |          |  M=D
    51    |    5     |  @5
    52    |          |  D=A
    53    |    2     |  @2
    54    |          |  M=M-D
    55    |    0     |  @0
    56    |          |  D=M
    57    |    1     |  @1
    58    |          |  M=D
    59    | RAM[16]  |  @Sys.init
    60    |          |  0;JMP
    61    | ROM[60]  |  (Sys.init$ret.0)
          |          |        // /** Initializes a new Square Dance game and starts running it. *//*
          |          |        // STATIC boolean test -> static   0
          |          |        // */
          |          |        // 
          |          |        // function Main.main 1
    61    | ROM[60]  |  (Main.main)
    61    |    0     |  @0
    62    |          |  D=M
    63    |    1     |  @1
    64    |          |  M=D
    65    |    0     |  @0
    66    |          |  A=M
    67    |          |  M=0
    68    |    0     |  @0
    69    |          |  M=M+1
          |          |        // /*
          |          |        // VAR    SquareGame game -> local    0
          |          |        // */
          |          |        // call SquareGame.new 0
    70    | RAM[118] |  @SquareGame.new$ret.1
    71    |          |  D=A
    72    |    0     |  @0
    73    |          |  A=M
    74    |          |  M=D
    75    |    0     |  @0
    76    |          |  M=M+1
    77    |    1     |  @1
    78    |          |  D=M
    79    |    0     |  @0
    80    |          |  A=M
    81    |          |  M=D
    82    |    0     |  @0
    83    |          |  M=M+1
    84    |    2     |  @2
    85    |          |  D=M
    86    |    0     |  @0
    87    |          |  A=M
    88    |          |  M=D
    89    |    0     |  @0
    90    |          |  M=M+1
    91    |    3     |  @3
    92    |          |  D=M
    93    |    0     |  @0
    94    |          |  A=M
    95    |          |  M=D
    96    |    0     |  @0
    97    |          |  M=M+1
    98    |    4     |  @4
    99    |          |  D=M
   100    |    0     |  @0
   101    |          |  A=M
   102    |          |  M=D
   103    |    0     |  @0
   104    |          |  M=M+1
   105    |    0     |  @0
   106    |          |  D=M
   107    |    2     |  @2
   108    |          |  M=D
   109    |    5     |  @5
   110    |          |  D=A
   111    |    2     |  @2
   112    |          |  M=M-D
   113    |    0     |  @0
   114    |          |  D=M
   115    |    1     |  @1
   116    |          |  M=D
   117    |RAM[5549] |  @SquareGame.new
   118    |          |  0;JMP
   119    | ROM[118] |  (SquareGame.new$ret.1)
          |          |        // pop local 0
   119    |    0     |  @0
   120    |          |  D=A
   121    |    1     |  @1
   122    |          |  D=D+M
   123    | RAM[13]  |  @R13
   124    |          |  M=D
   125    |    0     |  @0
   126    |          |  AM=M-1
   127    |          |  D=M
   128    | RAM[13]  |  @R13
   129    |          |  A=M
   130    |          |  M=D
          |          |        // push local 0
   131    |    0     |  @0
   132    |          |  D=A
   133    |    1     |  @1
   134    |          |  A=M
   135    |          |  A=A+D
   136    |          |  D=M
   137    |    0     |  @0
   138    |          |  A=M
   139    |          |  M=D
   140    |    0     |  @0
   141    |          |  M=M+1
          |          |        // call SquareGame.run 1
   142    | RAM[190] |  @SquareGame.run$ret.2
   143    |          |  D=A
   144    |    0     |  @0
   145    |          |  A=M
   146    |          |  M=D
   147    |    0     |  @0
   148    |          |  M=M+1
   149    |    1     |  @1
   150    |          |  D=M
   151    |    0     |  @0
   152    |          |  A=M
   153    |          |  M=D
   154    |    0     |  @0
   155    |          |  M=M+1
   156    |    2     |  @2
   157    |          |  D=M
   158    |    0     |  @0
   159    |          |  A=M
   160    |          |  M=D
   161    |    0     |  @0
   162    |          |  M=M+1
   163    |    3     |  @3
   164    |          |  D=M
   165    |    0     |  @0
   166    |          |  A=M
   167    |          |  M=D
   168    |    0     |  @0
   169    |          |  M=M+1
   170    |    4     |  @4
   171    |          |  D=M
   172    |    0     |  @0
   173    |          |  A=M
   174    |          |  M=D
   175    |    0     |  @0
   176    |          |  M=M+1
   177    |    0     |  @0
   178    |          |  D=M
   179    |    2     |  @2
   180    |          |  M=D
   181    |    6     |  @6
   182    |          |  D=A
   183    |    2     |  @2
   184    |          |  M=M-D
   185    |    0     |  @0
   186    |          |  D=M
   187    |    1     |  @1
   188    |          |  M=D
   189    |RAM[6575] |  @SquareGame.run
   190    |          |  0;JMP
   191    | ROM[190] |  (SquareGame.run$ret.2)
          |          |        // pop temp 0
   191    |    0     |  @0
   192    |          |  D=A
   193    |    5     |  @5
   194    |          |  D=D+A
   195    | RAM[13]  |  @R13
   196    |          |  M=D
   197    |    0     |  @0
   198    |          |  AM=M-1
   199    |          |  D=M
   200    | RAM[13]  |  @R13
   201    |          |  A=M
   202    |          |  M=D
          |          |        // push local 0
   203    |    0     |  @0
   204    |          |  D=A
   205    |    1     |  @1
   206    |          |  A=M
   207    |          |  A=A+D
   208    |          |  D=M
   209    |    0     |  @0
   210    |          |  A=M
   211    |          |  M=D
   212    |    0     |  @0
   213    |          |  M=M+1
          |          |        // call SquareGame.dispose 1
   214    | RAM[262] |  @SquareGame.dispose$ret.3
   215    |          |  D=A
   216    |    0     |  @0
   217    |          |  A=M
   218    |          |  M=D
   219    |    0     |  @0
   220    |          |  M=M+1
   221    |    1     |  @1
   222    |          |  D=M
   223    |    0     |  @0
   224    |          |  A=M
   225    |          |  M=D
   226    |    0     |  @0
   227    |          |  M=M+1
   228    |    2     |  @2
   229    |          |  D=M
   230    |    0     |  @0
   231    |          |  A=M
   232    |          |  M=D
   233    |    0     |  @0
   234    |          |  M=M+1
   235    |    3     |  @3
   236    |          |  D=M
   237    |    0     |  @0
   238    |          |  A=M
   239    |          |  M=D
   240    |    0     |  @0
   241    |          |  M=M+1
   242    |    4     |  @4
   243    |          |  D=M
   244    |    0     |  @0
   245    |          |  A=M
   246    |          |  M=D
   247    |    0     |  @0
   248    |          |  M=M+1
   249    |    0     |  @0
   250    |          |  D=M
   251    |    2     |  @2
   252    |          |  M=D
   253    |    6     |  @6
   254    |          |  D=A
   255    |    2     |  @2
   256    |          |  M=M-D
   257    |    0     |  @0
   258    |          |  D=M
   259    |    1     |  @1
   260    |          |  M=D
   261    |RAM[5771] |  @SquareGame.dispose
   262    |          |  0;JMP
   263    | ROM[262] |  (SquareGame.dispose$ret.3)
          |          |        // pop temp 0
   263    |    0     |  @0
   264    |          |  D=A
   265    |    5     |  @5
   266    |          |  D=D+A
   267    | RAM[13]  |  @R13
   268    |          |  M=D
   269    |    0     |  @0
   270    |          |  AM=M-1
   271    |          |  D=M
   272    | RAM[13]  |  @R13
   273    |          |  A=M
   274    |          |  M=D
          |          |        // push constant 0
   275    |    0     |  @0
   276    |          |  D=A
   277    |    0     |  @0
   278    |          |  A=M
   279    |          |  M=D
   280    |    0     |  @0
   281    |          |  M=M+1
          |          |        // return
   282    |    1     |  @1
   283    |          |  D=M
   284    |    13    |  @13
   285    |          |  M=D
   286    |    5     |  @5
   287    |          |  D=A
   288    |    13    |  @13
   289    |          |  D=M-D
   290    |          |  A=D
   291    |          |  D=M
   292    |    14    |  @14
   293    |          |  M=D
   294    |    0     |  @0
   295    |          |  AM=M-1
   296    |          |  D=M
   297    |    2     |  @2
   298    |          |  A=M
   299    |          |  M=D
   300    |    2     |  @2
   301    |          |  D=M+1
   302    |    0     |  @0
   303    |          |  M=D
   304    |    13    |  @13
   305    |          |  M=M-1
   306    |          |  A=M
   307    |          |  D=M
   308    |    4     |  @4
   309    |          |  M=D
   310    |    13    |  @13
   311    |          |  M=M-1
   312    |          |  A=M
   313    |          |  D=M
   314    |    3     |  @3
   315    |          |  M=D
   316    |    13    |  @13
   317    |          |  M=M-1
   318    |          |  A=M
   319    |          |  D=M
   320    |    2     |  @2
   321    |          |  M=D
   322    |    13    |  @13
   323    |          |  M=M-1
   324    |          |  A=M
   325    |          |  D=M
   326    |    1     |  @1
   327    |          |  M=D
   328    |    14    |  @14
   329    |          |  A=M
   330    |          |  0;JMP
          |          |        // 
          |          |        // function Main.more 4
   331    | ROM[330] |  (Main.more)
   331    |    0     |  @0
   332    |          |  D=M
   333    |    1     |  @1
   334    |          |  M=D
   335    |    0     |  @0
   336    |          |  A=M
   337    |          |  M=0
   338    |    0     |  @0
   339    |          |  M=M+1
   340    |    0     |  @0
   341    |          |  A=M
   342    |          |  M=0
   343    |    0     |  @0
   344    |          |  M=M+1
   345    |    0     |  @0
   346    |          |  A=M
   347    |          |  M=0
   348    |    0     |  @0
   349    |          |  M=M+1
   350    |    0     |  @0
   351    |          |  A=M
   352    |          |  M=0
   353    |    0     |  @0
   354    |          |  M=M+1
          |          |        // /*
          |          |        // VAR    int    i -> local    0
          |          |        // VAR    int    j -> local    1
          |          |        // VAR    String s -> local    2
          |          |        // VAR    Array  a -> local    3
          |          |        // */
          |          |        // push constant 0
   355    |    0     |  @0
   356    |          |  D=A
   357    |    0     |  @0
   358    |          |  A=M
   359    |          |  M=D
   360    |    0     |  @0
   361    |          |  M=M+1
          |          |        // not
   362    |    0     |  @0
   363    |          |  A=M-1
   364    |          |  M=!M
          |          |        // if-goto Main.more_FALSE_0
   365    |    0     |  @0
   366    |          |  AM=M-1
   367    |          |  D=M
   368    |RAM[1399] |  @Main.more_FALSE_0
   369    |          |  D;JNE
          |          |        // push constant 15
   370    |    15    |  @15
   371    |          |  D=A
   372    |    0     |  @0
   373    |          |  A=M
   374    |          |  M=D
   375    |    0     |  @0
   376    |          |  M=M+1
          |          |        // call String.new 1
   377    | RAM[425] |  @String.new$ret.4
   378    |          |  D=A
   379    |    0     |  @0
   380    |          |  A=M
   381    |          |  M=D
   382    |    0     |  @0
   383    |          |  M=M+1
   384    |    1     |  @1
   385    |          |  D=M
   386    |    0     |  @0
   387    |          |  A=M
   388    |          |  M=D
   389    |    0     |  @0
   390    |          |  M=M+1
   391    |    2     |  @2
   392    |          |  D=M
   393    |    0     |  @0
   394    |          |  A=M
   395    |          |  M=D
   396    |    0     |  @0
   397    |          |  M=M+1
   398    |    3     |  @3
   399    |          |  D=M
   400    |    0     |  @0
   401    |          |  A=M
   402    |          |  M=D
   403    |    0     |  @0
   404    |          |  M=M+1
   405    |    4     |  @4
   406    |          |  D=M
   407    |    0     |  @0
   408    |          |  A=M
   409    |          |  M=D
   410    |    0     |  @0
   411    |          |  M=M+1
   412    |    0     |  @0
   413    |          |  D=M
   414    |    2     |  @2
   415    |          |  M=D
   416    |    6     |  @6
   417    |          |  D=A
   418    |    2     |  @2
   419    |          |  M=M-D
   420    |    0     |  @0
   421    |          |  D=M
   422    |    1     |  @1
   423    |          |  M=D
   424    | RAM[17]  |  @String.new
   425    |          |  0;JMP
   426    | ROM[425] |  (String.new$ret.4)
          |          |        // push constant 115
   426    |   115    |  @115
   427    |          |  D=A
   428    |    0     |  @0
   429    |          |  A=M
   430    |          |  M=D
   431    |    0     |  @0
   432    |          |  M=M+1
          |          |        // call String.appendChar 2
   433    | RAM[481] |  @String.appendChar$ret.5
   434    |          |  D=A
   435    |    0     |  @0
   436    |          |  A=M
   437    |          |  M=D
   438    |    0     |  @0
   439    |          |  M=M+1
   440    |    1     |  @1
   441    |          |  D=M
   442    |    0     |  @0
   443    |          |  A=M
   444    |          |  M=D
   445    |    0     |  @0
   446    |          |  M=M+1
   447    |    2     |  @2
   448    |          |  D=M
   449    |    0     |  @0
   450    |          |  A=M
   451    |          |  M=D
   452    |    0     |  @0
   453    |          |  M=M+1
   454    |    3     |  @3
   455    |          |  D=M
   456    |    0     |  @0
   457    |          |  A=M
   458    |          |  M=D
   459    |    0     |  @0
   460    |          |  M=M+1
   461    |    4     |  @4
   462    |          |  D=M
   463    |    0     |  @0
   464    |          |  A=M
   465    |          |  M=D
   466    |    0     |  @0
   467    |          |  M=M+1
   468    |    0     |  @0
   469    |          |  D=M
   470    |    2     |  @2
   471    |          |  M=D
   472    |    7     |  @7
   473    |          |  D=A
   474    |    2     |  @2
   475    |          |  M=M-D
   476    |    0     |  @0
   477    |          |  D=M
   478    |    1     |  @1
   479    |          |  M=D
   480    | RAM[18]  |  @String.appendChar
   481    |          |  0;JMP
   482    | ROM[481] |  (String.appendChar$ret.5)
          |          |        // push constant 116
   482    |   116    |  @116
   483    |          |  D=A
   484    |    0     |  @0
   485    |          |  A=M
   486    |          |  M=D
   487    |    0     |  @0
   488    |          |  M=M+1
          |          |        // call String.appendChar 2
   489    | RAM[537] |  @String.appendChar$ret.6
   490    |          |  D=A
   491    |    0     |  @0
   492    |          |  A=M
   493    |          |  M=D
   494    |    0     |  @0
   495    |          |  M=M+1
   496    |    1     |  @1
   497    |          |  D=M
   498    |    0     |  @0
   499    |          |  A=M
   500    |          |  M=D
   501    |    0     |  @0
   502    |          |  M=M+1
   503    |    2     |  @2
   504    |          |  D=M
   505    |    0     |  @0
   506    |          |  A=M
   507    |          |  M=D
   508    |    0     |  @0
   509    |          |  M=M+1
   510    |    3     |  @3
   511    |          |  D=M
   512    |    0     |  @0
   513    |          |  A=M
   514    |          |  M=D
   515    |    0     |  @0
   516    |          |  M=M+1
   517    |    4     |  @4
   518    |          |  D=M
   519    |    0     |  @0
   520    |          |  A=M
   521    |          |  M=D
   522    |    0     |  @0
   523    |          |  M=M+1
   524    |    0     |  @0
   525    |          |  D=M
   526    |    2     |  @2
   527    |          |  M=D
   528    |    7     |  @7
   529    |          |  D=A
   530    |    2     |  @2
   531    |          |  M=M-D
   532    |    0     |  @0
   533    |          |  D=M
   534    |    1     |  @1
   535    |          |  M=D
   536    | RAM[18]  |  @String.appendChar
   537    |          |  0;JMP
   538    | ROM[537] |  (String.appendChar$ret.6)
          |          |        // push constant 114
   538    |   114    |  @114
   539    |          |  D=A
   540    |    0     |  @0
   541    |          |  A=M
   542    |          |  M=D
   543    |    0     |  @0
   544    |          |  M=M+1
          |          |        // call String.appendChar 2
   545    | RAM[593] |  @String.appendChar$ret.7
   546    |          |  D=A
   547    |    0     |  @0
   548    |          |  A=M
   549    |          |  M=D
   550    |    0     |  @0
   551    |          |  M=M+1
   552    |    1     |  @1
   553    |          |  D=M
   554    |    0     |  @0
   555    |          |  A=M
   556    |          |  M=D
   557    |    0     |  @0
   558    |          |  M=M+1
   559    |    2     |  @2
   560    |          |  D=M
   561    |    0     |  @0
   562    |          |  A=M
   563    |          |  M=D
   564    |    0     |  @0
   565    |          |  M=M+1
   566    |    3     |  @3
   567    |          |  D=M
   568    |    0     |  @0
   569    |          |  A=M
   570    |          |  M=D
   571    |    0     |  @0
   572    |          |  M=M+1
   573    |    4     |  @4
   574    |          |  D=M
   575    |    0     |  @0
   576    |          |  A=M
   577    |          |  M=D
   578    |    0     |  @0
   579    |          |  M=M+1
   580    |    0     |  @0
   581    |          |  D=M
   582    |    2     |  @2
   583    |          |  M=D
   584    |    7     |  @7
   585    |          |  D=A
   586    |    2     |  @2
   587    |          |  M=M-D
   588    |    0     |  @0
   589    |          |  D=M
   590    |    1     |  @1
   591    |          |  M=D
   592    | RAM[18]  |  @String.appendChar
   593    |          |  0;JMP
   594    | ROM[593] |  (String.appendChar$ret.7)
          |          |        // push constant 105
   594    |   105    |  @105
   595    |          |  D=A
   596    |    0     |  @0
   597    |          |  A=M
   598    |          |  M=D
   599    |    0     |  @0
   600    |          |  M=M+1
          |          |        // call String.appendChar 2
   601    | RAM[649] |  @String.appendChar$ret.8
   602    |          |  D=A
   603    |    0     |  @0
   604    |          |  A=M
   605    |          |  M=D
   606    |    0     |  @0
   607    |          |  M=M+1
   608    |    1     |  @1
   609    |          |  D=M
   610    |    0     |  @0
   611    |          |  A=M
   612    |          |  M=D
   613    |    0     |  @0
   614    |          |  M=M+1
   615    |    2     |  @2
   616    |          |  D=M
   617    |    0     |  @0
   618    |          |  A=M
   619    |          |  M=D
   620    |    0     |  @0
   621    |          |  M=M+1
   622    |    3     |  @3
   623    |          |  D=M
   624    |    0     |  @0
   625    |          |  A=M
   626    |          |  M=D
   627    |    0     |  @0
   628    |          |  M=M+1
   629    |    4     |  @4
   630    |          |  D=M
   631    |    0     |  @0
   632    |          |  A=M
   633    |          |  M=D
   634    |    0     |  @0
   635    |          |  M=M+1
   636    |    0     |  @0
   637    |          |  D=M
   638    |    2     |  @2
   639    |          |  M=D
   640    |    7     |  @7
   641    |          |  D=A
   642    |    2     |  @2
   643    |          |  M=M-D
   644    |    0     |  @0
   645    |          |  D=M
   646    |    1     |  @1
   647    |          |  M=D
   648    | RAM[18]  |  @String.appendChar
   649    |          |  0;JMP
   650    | ROM[649] |  (String.appendChar$ret.8)
          |          |        // push constant 110
   650    |   110    |  @110
   651    |          |  D=A
   652    |    0     |  @0
   653    |          |  A=M
   654    |          |  M=D
   655    |    0     |  @0
   656    |          |  M=M+1
          |          |        // call String.appendChar 2
   657    | RAM[705] |  @String.appendChar$ret.9
   658    |          |  D=A
   659    |    0     |  @0
   660    |          |  A=M
   661    |          |  M=D
   662    |    0     |  @0
   663    |          |  M=M+1
   664    |    1     |  @1
   665    |          |  D=M
   666    |    0     |  @0
   667    |          |  A=M
   668    |          |  M=D
   669    |    0     |  @0
   670    |          |  M=M+1
   671    |    2     |  @2
   672    |          |  D=M
   673    |    0     |  @0
   674    |          |  A=M
   675    |          |  M=D
   676    |    0     |  @0
   677    |          |  M=M+1
   678    |    3     |  @3
   679    |          |  D=M
   680    |    0     |  @0
   681    |          |  A=M
   682    |          |  M=D
   683    |    0     |  @0
   684    |          |  M=M+1
   685    |    4     |  @4
   686    |          |  D=M
   687    |    0     |  @0
   688    |          |  A=M
   689    |          |  M=D
   690    |    0     |  @0
   691    |          |  M=M+1
   692    |    0     |  @0
   693    |          |  D=M
   694    |    2     |  @2
   695    |          |  M=D
   696    |    7     |  @7
   697    |          |  D=A
   698    |    2     |  @2
   699    |          |  M=M-D
   700    |    0     |  @0
   701    |          |  D=M
   702    |    1     |  @1
   703    |          |  M=D
   704    | RAM[18]  |  @String.appendChar
   705    |          |  0;JMP
   706    | ROM[705] |  (String.appendChar$ret.9)
          |          |        // push constant 103
   706    |   103    |  @103
   707    |          |  D=A
   708    |    0     |  @0
   709    |          |  A=M
   710    |          |  M=D
   711    |    0     |  @0
   712    |          |  M=M+1
          |          |        // call String.appendChar 2
   713    | RAM[761] |  @String.appendChar$ret.10
   714    |          |  D=A
   715    |    0     |  @0
   716    |          |  A=M
   717    |          |  M=D
   718    |    0     |  @0
   719    |          |  M=M+1
   720    |    1     |  @1
   721    |          |  D=M
   722    |    0     |  @0
   723    |          |  A=M
   724    |          |  M=D
   725    |    0     |  @0
   726    |          |  M=M+1
   727    |    2     |  @2
   728    |          |  D=M
   729    |    0     |  @0
   730    |          |  A=M
   731    |          |  M=D
   732    |    0     |  @0
   733    |          |  M=M+1
   734    |    3     |  @3
   735    |          |  D=M
   736    |    0     |  @0
   737    |          |  A=M
   738    |          |  M=D
   739    |    0     |  @0
   740    |          |  M=M+1
   741    |    4     |  @4
   742    |          |  D=M
   743    |    0     |  @0
   744    |          |  A=M
   745    |          |  M=D
   746    |    0     |  @0
   747    |          |  M=M+1
   748    |    0     |  @0
   749    |          |  D=M
   750    |    2     |  @2
   751    |          |  M=D
   752    |    7     |  @7
   753    |          |  D=A
   754    |    2     |  @2
   755    |          |  M=M-D
   756    |    0     |  @0
   757    |          |  D=M
   758    |    1     |  @1
   759    |          |  M=D
   760    | RAM[18]  |  @String.appendChar
   761    |          |  0;JMP
   762    | ROM[761] |  (String.appendChar$ret.10)
          |          |        // push constant 32
   762    |    32    |  @32
   763    |          |  D=A
   764    |    0     |  @0
   765    |          |  A=M
   766    |          |  M=D
   767    |    0     |  @0
   768    |          |  M=M+1
          |          |        // call String.appendChar 2
   769    | RAM[817] |  @String.appendChar$ret.11
   770    |          |  D=A
   771    |    0     |  @0
   772    |          |  A=M
   773    |          |  M=D
   774    |    0     |  @0
   775    |          |  M=M+1
   776    |    1     |  @1
   777    |          |  D=M
   778    |    0     |  @0
   779    |          |  A=M
   780    |          |  M=D
   781    |    0     |  @0
   782    |          |  M=M+1
   783    |    2     |  @2
   784    |          |  D=M
   785    |    0     |  @0
   786    |          |  A=M
   787    |          |  M=D
   788    |    0     |  @0
   789    |          |  M=M+1
   790    |    3     |  @3
   791    |          |  D=M
   792    |    0     |  @0
   793    |          |  A=M
   794    |          |  M=D
   795    |    0     |  @0
   796    |          |  M=M+1
   797    |    4     |  @4
   798    |          |  D=M
   799    |    0     |  @0
   800    |          |  A=M
   801    |          |  M=D
   802    |    0     |  @0
   803    |          |  M=M+1
   804    |    0     |  @0
   805    |          |  D=M
   806    |    2     |  @2
   807    |          |  M=D
   808    |    7     |  @7
   809    |          |  D=A
   810    |    2     |  @2
   811    |          |  M=M-D
   812    |    0     |  @0
   813    |          |  D=M
   814    |    1     |  @1
   815    |          |  M=D
   816    | RAM[18]  |  @String.appendChar
   817    |          |  0;JMP
   818    | ROM[817] |  (String.appendChar$ret.11)
          |          |        // push constant 99
   818    |    99    |  @99
   819    |          |  D=A
   820    |    0     |  @0
   821    |          |  A=M
   822    |          |  M=D
   823    |    0     |  @0
   824    |          |  M=M+1
          |          |        // call String.appendChar 2
   825    | RAM[873] |  @String.appendChar$ret.12
   826    |          |  D=A
   827    |    0     |  @0
   828    |          |  A=M
   829    |          |  M=D
   830    |    0     |  @0
   831    |          |  M=M+1
   832    |    1     |  @1
   833    |          |  D=M
   834    |    0     |  @0
   835    |          |  A=M
   836    |          |  M=D
   837    |    0     |  @0
   838    |          |  M=M+1
   839    |    2     |  @2
   840    |          |  D=M
   841    |    0     |  @0
   842    |          |  A=M
   843    |          |  M=D
   844    |    0     |  @0
   845    |          |  M=M+1
   846    |    3     |  @3
   847    |          |  D=M
   848    |    0     |  @0
   849    |          |  A=M
   850    |          |  M=D
   851    |    0     |  @0
   852    |          |  M=M+1
   853    |    4     |  @4
   854    |          |  D=M
   855    |    0     |  @0
   856    |          |  A=M
   857    |          |  M=D
   858    |    0     |  @0
   859    |          |  M=M+1
   860    |    0     |  @0
   861    |          |  D=M
   862    |    2     |  @2
   863    |          |  M=D
   864    |    7     |  @7
   865    |          |  D=A
   866    |    2     |  @2
   867    |          |  M=M-D
   868    |    0     |  @0
   869    |          |  D=M
   870    |    1     |  @1
   871    |          |  M=D
   872    | RAM[18]  |  @String.appendChar
   873    |          |  0;JMP
   874    | ROM[873] |  (String.appendChar$ret.12)
          |          |        // push constant 111
   874    |   111    |  @111
   875    |          |  D=A
   876    |    0     |  @0
   877    |          |  A=M
   878    |          |  M=D
   879    |    0     |  @0
   880    |          |  M=M+1
          |          |        // call String.appendChar 2
   881    | RAM[929] |  @String.appendChar$ret.13
   882    |          |  D=A
   883    |    0     |  @0
   884    |          |  A=M
   885    |          |  M=D
   886    |    0     |  @0
   887    |          |  M=M+1
   888    |    1     |  @1
   889    |          |  D=M
   890    |    0     |  @0
   891    |          |  A=M
   892    |          |  M=D
   893    |    0     |  @0
   894    |          |  M=M+1
   895    |    2     |  @2
   896    |          |  D=M
   897    |    0     |  @0
   898    |          |  A=M
   899    |          |  M=D
   900    |    0     |  @0
   901    |          |  M=M+1
   902    |    3     |  @3
   903    |          |  D=M
   904    |    0     |  @0
   905    |          |  A=M
   906    |          |  M=D
   907    |    0     |  @0
   908    |          |  M=M+1
   909    |    4     |  @4
   910    |          |  D=M
   911    |    0     |  @0
   912    |          |  A=M
   913    |          |  M=D
   914    |    0     |  @0
   915    |          |  M=M+1
   916    |    0     |  @0
   917    |          |  D=M
   918    |    2     |  @2
   919    |          |  M=D
   920    |    7     |  @7
   921    |          |  D=A
   922    |    2     |  @2
   923    |          |  M=M-D
   924    |    0     |  @0
   925    |          |  D=M
   926    |    1     |  @1
   927    |          |  M=D
   928    | RAM[18]  |  @String.appendChar
   929    |          |  0;JMP
   930    | ROM[929] |  (String.appendChar$ret.13)
          |          |        // push constant 110
   930    |   110    |  @110
   931    |          |  D=A
   932    |    0     |  @0
   933    |          |  A=M
   934    |          |  M=D
   935    |    0     |  @0
   936    |          |  M=M+1
          |          |        // call String.appendChar 2
   937    | RAM[985] |  @String.appendChar$ret.14
   938    |          |  D=A
   939    |    0     |  @0
   940    |          |  A=M
   941    |          |  M=D
   942    |    0     |  @0
   943    |          |  M=M+1
   944    |    1     |  @1
   945    |          |  D=M
   946    |    0     |  @0
   947    |          |  A=M
   948    |          |  M=D
   949    |    0     |  @0
   950    |          |  M=M+1
   951    |    2     |  @2
   952    |          |  D=M
   953    |    0     |  @0
   954    |          |  A=M
   955    |          |  M=D
   956    |    0     |  @0
   957    |          |  M=M+1
   958    |    3     |  @3
   959    |          |  D=M
   960    |    0     |  @0
   961    |          |  A=M
   962    |          |  M=D
   963    |    0     |  @0
   964    |          |  M=M+1
   965    |    4     |  @4
   966    |          |  D=M
   967    |    0     |  @0
   968    |          |  A=M
   969    |          |  M=D
   970    |    0     |  @0
   971    |          |  M=M+1
   972    |    0     |  @0
   973    |          |  D=M
   974    |    2     |  @2
   975    |          |  M=D
   976    |    7     |  @7
   977    |          |  D=A
   978    |    2     |  @2
   979    |          |  M=M-D
   980    |    0     |  @0
   981    |          |  D=M
   982    |    1     |  @1
   983    |          |  M=D
   984    | RAM[18]  |  @String.appendChar
   985    |          |  0;JMP
   986    | ROM[985] |  (String.appendChar$ret.14)
          |          |        // push constant 115
   986    |   115    |  @115
   987    |          |  D=A
   988    |    0     |  @0
   989    |          |  A=M
   990    |          |  M=D
   991    |    0     |  @0
   992    |          |  M=M+1
          |          |        // call String.appendChar 2
   993    |RAM[1041] |  @String.appendChar$ret.15
   994    |          |  D=A
   995    |    0     |  @0
   996    |          |  A=M
   997    |          |  M=D
   998    |    0     |  @0
   999    |          |  M=M+1
   1000   |    1     |  @1
   1001   |          |  D=M
   1002   |    0     |  @0
   1003   |          |  A=M
   1004   |          |  M=D
   1005   |    0     |  @0
   1006   |          |  M=M+1
   1007   |    2     |  @2
   1008   |          |  D=M
   1009   |    0     |  @0
   1010   |          |  A=M
   1011   |          |  M=D
   1012   |    0     |  @0
   1013   |          |  M=M+1
   1014   |    3     |  @3
   1015   |          |  D=M
   1016   |    0     |  @0
   1017   |          |  A=M
   1018   |          |  M=D
   1019   |    0     |  @0
   1020   |          |  M=M+1
   1021   |    4     |  @4
   1022   |          |  D=M
   1023   |    0     |  @0
   1024   |          |  A=M
   1025   |          |  M=D
   1026   |    0     |  @0
   1027   |          |  M=M+1
   1028   |    0     |  @0
   1029   |          |  D=M
   1030   |    2     |  @2
   1031   |          |  M=D
   1032   |    7     |  @7
   1033   |          |  D=A
   1034   |    2     |  @2
   1035   |          |  M=M-D
   1036   |    0     |  @0
   1037   |          |  D=M
   1038   |    1     |  @1
   1039   |          |  M=D
   1040   | RAM[18]  |  @String.appendChar
   1041   |          |  0;JMP
   1042   |ROM[1041] |  (String.appendChar$ret.15)
          |          |        // push constant 116
   1042   |   116    |  @116
   1043   |          |  D=A
   1044   |    0     |  @0
   1045   |          |  A=M
   1046   |          |  M=D
   1047   |    0     |  @0
   1048   |          |  M=M+1
          |          |        // call String.appendChar 2
   1049   |RAM[1097] |  @String.appendChar$ret.16
   1050   |          |  D=A
   1051   |    0     |  @0
   1052   |          |  A=M
   1053   |          |  M=D
   1054   |    0     |  @0
   1055   |          |  M=M+1
   1056   |    1     |  @1
   1057   |          |  D=M
   1058   |    0     |  @0
   1059   |          |  A=M
   1060   |          |  M=D
   1061   |    0     |  @0
   1062   |          |  M=M+1
   1063   |    2     |  @2
   1064   |          |  D=M
   1065   |    0     |  @0
   1066   |          |  A=M
   1067   |          |  M=D
   1068   |    0     |  @0
   1069   |          |  M=M+1
   1070   |    3     |  @3
   1071   |          |  D=M
   1072   |    0     |  @0
   1073   |          |  A=M
   1074   |          |  M=D
   1075   |    0     |  @0
   1076   |          |  M=M+1
   1077   |    4     |  @4
   1078   |          |  D=M
   1079   |    0     |  @0
   1080   |          |  A=M
   1081   |          |  M=D
   1082   |    0     |  @0
   1083   |          |  M=M+1
   1084   |    0     |  @0
   1085   |          |  D=M
   1086   |    2     |  @2
   1087   |          |  M=D
   1088   |    7     |  @7
   1089   |          |  D=A
   1090   |    2     |  @2
   1091   |          |  M=M-D
   1092   |    0     |  @0
   1093   |          |  D=M
   1094   |    1     |  @1
   1095   |          |  M=D
   1096   | RAM[18]  |  @String.appendChar
   1097   |          |  0;JMP
   1098   |ROM[1097] |  (String.appendChar$ret.16)
          |          |        // push constant 97
   1098   |    97    |  @97
   1099   |          |  D=A
   1100   |    0     |  @0
   1101   |          |  A=M
   1102   |          |  M=D
   1103   |    0     |  @0
   1104   |          |  M=M+1
          |          |        // call String.appendChar 2
   1105   |RAM[1153] |  @String.appendChar$ret.17
   1106   |          |  D=A
   1107   |    0     |  @0
   1108   |          |  A=M
   1109   |          |  M=D
   1110   |    0     |  @0
   1111   |          |  M=M+1
   1112   |    1     |  @1
   1113   |          |  D=M
   1114   |    0     |  @0
   1115   |          |  A=M
   1116   |          |  M=D
   1117   |    0     |  @0
   1118   |          |  M=M+1
   1119   |    2     |  @2
   1120   |          |  D=M
   1121   |    0     |  @0
   1122   |          |  A=M
   1123   |          |  M=D
   1124   |    0     |  @0
   1125   |          |  M=M+1
   1126   |    3     |  @3
   1127   |          |  D=M
   1128   |    0     |  @0
   1129   |          |  A=M
   1130   |          |  M=D
   1131   |    0     |  @0
   1132   |          |  M=M+1
   1133   |    4     |  @4
   1134   |          |  D=M
   1135   |    0     |  @0
   1136   |          |  A=M
   1137   |          |  M=D
   1138   |    0     |  @0
   1139   |          |  M=M+1
   1140   |    0     |  @0
   1141   |          |  D=M
   1142   |    2     |  @2
   1143   |          |  M=D
   1144   |    7     |  @7
   1145   |          |  D=A
   1146   |    2     |  @2
   1147   |          |  M=M-D
   1148   |    0     |  @0
   1149   |          |  D=M
   1150   |    1     |  @1
   1151   |          |  M=D
   1152   | RAM[18]  |  @String.appendChar
   1153   |          |  0;JMP
   1154   |ROM[1153] |  (String.appendChar$ret.17)
          |          |        // push constant 110
   1154   |   110    |  @110
   1155   |          |  D=A
   1156   |    0     |  @0
   1157   |          |  A=M
   1158   |          |  M=D
   1159   |    0     |  @0
   1160   |          |  M=M+1
          |          |        // call String.appendChar 2
   1161   |RAM[1209] |  @String.appendChar$ret.18
   1162   |          |  D=A
   1163   |    0     |  @0
   1164   |          |  A=M
   1165   |          |  M=D
   1166   |    0     |  @0
   1167   |          |  M=M+1
   1168   |    1     |  @1
   1169   |          |  D=M
   1170   |    0     |  @0
   1171   |          |  A=M
   1172   |          |  M=D
   1173   |    0     |  @0
   1174   |          |  M=M+1
   1175   |    2     |  @2
   1176   |          |  D=M
   1177   |    0     |  @0
   1178   |          |  A=M
   1179   |          |  M=D
   1180   |    0     |  @0
   1181   |          |  M=M+1
   1182   |    3     |  @3
   1183   |          |  D=M
   1184   |    0     |  @0
   1185   |          |  A=M
   1186   |          |  M=D
   1187   |    0     |  @0
   1188   |          |  M=M+1
   1189   |    4     |  @4
   1190   |          |  D=M
   1191   |    0     |  @0
   1192   |          |  A=M
   1193   |          |  M=D
   1194   |    0     |  @0
   1195   |          |  M=M+1
   1196   |    0     |  @0
   1197   |          |  D=M
   1198   |    2     |  @2
   1199   |          |  M=D
   1200   |    7     |  @7
   1201   |          |  D=A
   1202   |    2     |  @2
   1203   |          |  M=M-D
   1204   |    0     |  @0
   1205   |          |  D=M
   1206   |    1     |  @1
   1207   |          |  M=D
   1208   | RAM[18]  |  @String.appendChar
   1209   |          |  0;JMP
   1210   |ROM[1209] |  (String.appendChar$ret.18)
          |          |        // push constant 116
   1210   |   116    |  @116
   1211   |          |  D=A
   1212   |    0     |  @0
   1213   |          |  A=M
   1214   |          |  M=D
   1215   |    0     |  @0
   1216   |          |  M=M+1
          |          |        // call String.appendChar 2
   1217   |RAM[1265] |  @String.appendChar$ret.19
   1218   |          |  D=A
   1219   |    0     |  @0
   1220   |          |  A=M
   1221   |          |  M=D
   1222   |    0     |  @0
   1223   |          |  M=M+1
   1224   |    1     |  @1
   1225   |          |  D=M
   1226   |    0     |  @0
   1227   |          |  A=M
   1228   |          |  M=D
   1229   |    0     |  @0
   1230   |          |  M=M+1
   1231   |    2     |  @2
   1232   |          |  D=M
   1233   |    0     |  @0
   1234   |          |  A=M
   1235   |          |  M=D
   1236   |    0     |  @0
   1237   |          |  M=M+1
   1238   |    3     |  @3
   1239   |          |  D=M
   1240   |    0     |  @0
   1241   |          |  A=M
   1242   |          |  M=D
   1243   |    0     |  @0
   1244   |          |  M=M+1
   1245   |    4     |  @4
   1246   |          |  D=M
   1247   |    0     |  @0
   1248   |          |  A=M
   1249   |          |  M=D
   1250   |    0     |  @0
   1251   |          |  M=M+1
   1252   |    0     |  @0
   1253   |          |  D=M
   1254   |    2     |  @2
   1255   |          |  M=D
   1256   |    7     |  @7
   1257   |          |  D=A
   1258   |    2     |  @2
   1259   |          |  M=M-D
   1260   |    0     |  @0
   1261   |          |  D=M
   1262   |    1     |  @1
   1263   |          |  M=D
   1264   | RAM[18]  |  @String.appendChar
   1265   |          |  0;JMP
   1266   |ROM[1265] |  (String.appendChar$ret.19)
          |          |        // pop local 2
   1266   |    2     |  @2
   1267   |          |  D=A
   1268   |    1     |  @1
   1269   |          |  D=D+M
   1270   | RAM[13]  |  @R13
   1271   |          |  M=D
   1272   |    0     |  @0
   1273   |          |  AM=M-1
   1274   |          |  D=M
   1275   | RAM[13]  |  @R13
   1276   |          |  A=M
   1277   |          |  M=D
          |          |        // push constant 0
   1278   |    0     |  @0
   1279   |          |  D=A
   1280   |    0     |  @0
   1281   |          |  A=M
   1282   |          |  M=D
   1283   |    0     |  @0
   1284   |          |  M=M+1
          |          |        // pop local 2
   1285   |    2     |  @2
   1286   |          |  D=A
   1287   |    1     |  @1
   1288   |          |  D=D+M
   1289   | RAM[13]  |  @R13
   1290   |          |  M=D
   1291   |    0     |  @0
   1292   |          |  AM=M-1
   1293   |          |  D=M
   1294   | RAM[13]  |  @R13
   1295   |          |  A=M
   1296   |          |  M=D
          |          |        // push local 3
   1297   |    3     |  @3
   1298   |          |  D=A
   1299   |    1     |  @1
   1300   |          |  A=M
   1301   |          |  A=A+D
   1302   |          |  D=M
   1303   |    0     |  @0
   1304   |          |  A=M
   1305   |          |  M=D
   1306   |    0     |  @0
   1307   |          |  M=M+1
          |          |        // push constant 1
   1308   |    1     |  @1
   1309   |          |  D=A
   1310   |    0     |  @0
   1311   |          |  A=M
   1312   |          |  M=D
   1313   |    0     |  @0
   1314   |          |  M=M+1
          |          |        // add
   1315   |    0     |  @0
   1316   |          |  AM=M-1
   1317   |          |  D=M
   1318   |          |  A=A-1
   1319   |          |  M=M+D
          |          |        // push local 3
   1320   |    3     |  @3
   1321   |          |  D=A
   1322   |    1     |  @1
   1323   |          |  A=M
   1324   |          |  A=A+D
   1325   |          |  D=M
   1326   |    0     |  @0
   1327   |          |  A=M
   1328   |          |  M=D
   1329   |    0     |  @0
   1330   |          |  M=M+1
          |          |        // push constant 2
   1331   |    2     |  @2
   1332   |          |  D=A
   1333   |    0     |  @0
   1334   |          |  A=M
   1335   |          |  M=D
   1336   |    0     |  @0
   1337   |          |  M=M+1
          |          |        // add
   1338   |    0     |  @0
   1339   |          |  AM=M-1
   1340   |          |  D=M
   1341   |          |  A=A-1
   1342   |          |  M=M+D
          |          |        // pop pointer 1
   1343   |    0     |  @0
   1344   |          |  AM=M-1
   1345   |          |  D=M
   1346   |    4     |  @4
   1347   |          |  M=D
          |          |        // push that 0
   1348   |    0     |  @0
   1349   |          |  D=A
   1350   |    4     |  @4
   1351   |          |  A=M
   1352   |          |  A=A+D
   1353   |          |  D=M
   1354   |    0     |  @0
   1355   |          |  A=M
   1356   |          |  M=D
   1357   |    0     |  @0
   1358   |          |  M=M+1
          |          |        // pop temp 0
   1359   |    0     |  @0
   1360   |          |  D=A
   1361   |    5     |  @5
   1362   |          |  D=D+A
   1363   | RAM[13]  |  @R13
   1364   |          |  M=D
   1365   |    0     |  @0
   1366   |          |  AM=M-1
   1367   |          |  D=M
   1368   | RAM[13]  |  @R13
   1369   |          |  A=M
   1370   |          |  M=D
          |          |        // pop pointer 1
   1371   |    0     |  @0
   1372   |          |  AM=M-1
   1373   |          |  D=M
   1374   |    4     |  @4
   1375   |          |  M=D
          |          |        // push temp 0
   1376   |    0     |  @0
   1377   |          |  D=A
   1378   |    5     |  @5
   1379   |          |  A=A+D
   1380   |          |  D=M
   1381   |    0     |  @0
   1382   |          |  A=M
   1383   |          |  M=D
   1384   |    0     |  @0
   1385   |          |  M=M+1
          |          |        // pop that 0
   1386   |    0     |  @0
   1387   |          |  D=A
   1388   |    4     |  @4
   1389   |          |  D=D+M
   1390   | RAM[13]  |  @R13
   1391   |          |  M=D
   1392   |    0     |  @0
   1393   |          |  AM=M-1
   1394   |          |  D=M
   1395   | RAM[13]  |  @R13
   1396   |          |  A=M
   1397   |          |  M=D
          |          |        // goto Main.more_TRUE_0
   1398   |RAM[1606] |  @Main.more_TRUE_0
   1399   |          |  0;JMP
          |          |        // label Main.more_FALSE_0
   1400   |ROM[1399] |  (Main.more_FALSE_0)
          |          |        // push local 0
   1400   |    0     |  @0
   1401   |          |  D=A
   1402   |    1     |  @1
   1403   |          |  A=M
   1404   |          |  A=A+D
   1405   |          |  D=M
   1406   |    0     |  @0
   1407   |          |  A=M
   1408   |          |  M=D
   1409   |    0     |  @0
   1410   |          |  M=M+1
          |          |        // push local 1
   1411   |    1     |  @1
   1412   |          |  D=A
   1413   |    1     |  @1
   1414   |          |  A=M
   1415   |          |  A=A+D
   1416   |          |  D=M
   1417   |    0     |  @0
   1418   |          |  A=M
   1419   |          |  M=D
   1420   |    0     |  @0
   1421   |          |  M=M+1
          |          |        // neg
   1422   |    0     |  @0
   1423   |          |  A=M-1
   1424   |          |  M=-M
          |          |        // call Math.multiply 2
   1425   |RAM[1473] |  @Math.multiply$ret.20
   1426   |          |  D=A
   1427   |    0     |  @0
   1428   |          |  A=M
   1429   |          |  M=D
   1430   |    0     |  @0
   1431   |          |  M=M+1
   1432   |    1     |  @1
   1433   |          |  D=M
   1434   |    0     |  @0
   1435   |          |  A=M
   1436   |          |  M=D
   1437   |    0     |  @0
   1438   |          |  M=M+1
   1439   |    2     |  @2
   1440   |          |  D=M
   1441   |    0     |  @0
   1442   |          |  A=M
   1443   |          |  M=D
   1444   |    0     |  @0
   1445   |          |  M=M+1
   1446   |    3     |  @3
   1447   |          |  D=M
   1448   |    0     |  @0
   1449   |          |  A=M
   1450   |          |  M=D
   1451   |    0     |  @0
   1452   |          |  M=M+1
   1453   |    4     |  @4
   1454   |          |  D=M
   1455   |    0     |  @0
   1456   |          |  A=M
   1457   |          |  M=D
   1458   |    0     |  @0
   1459   |          |  M=M+1
   1460   |    0     |  @0
   1461   |          |  D=M
   1462   |    2     |  @2
   1463   |          |  M=D
   1464   |    7     |  @7
   1465   |          |  D=A
   1466   |    2     |  @2
   1467   |          |  M=M-D
   1468   |    0     |  @0
   1469   |          |  D=M
   1470   |    1     |  @1
   1471   |          |  M=D
   1472   | RAM[19]  |  @Math.multiply
   1473   |          |  0;JMP
   1474   |ROM[1473] |  (Math.multiply$ret.20)
          |          |        // pop local 0
   1474   |    0     |  @0
   1475   |          |  D=A
   1476   |    1     |  @1
   1477   |          |  D=D+M
   1478   | RAM[13]  |  @R13
   1479   |          |  M=D
   1480   |    0     |  @0
   1481   |          |  AM=M-1
   1482   |          |  D=M
   1483   | RAM[13]  |  @R13
   1484   |          |  A=M
   1485   |          |  M=D
          |          |        // push local 1
   1486   |    1     |  @1
   1487   |          |  D=A
   1488   |    1     |  @1
   1489   |          |  A=M
   1490   |          |  A=A+D
   1491   |          |  D=M
   1492   |    0     |  @0
   1493   |          |  A=M
   1494   |          |  M=D
   1495   |    0     |  @0
   1496   |          |  M=M+1
          |          |        // push constant 2
   1497   |    2     |  @2
   1498   |          |  D=A
   1499   |    0     |  @0
   1500   |          |  A=M
   1501   |          |  M=D
   1502   |    0     |  @0
   1503   |          |  M=M+1
          |          |        // neg
   1504   |    0     |  @0
   1505   |          |  A=M-1
   1506   |          |  M=-M
          |          |        // call Math.divide 2
   1507   |RAM[1555] |  @Math.divide$ret.21
   1508   |          |  D=A
   1509   |    0     |  @0
   1510   |          |  A=M
   1511   |          |  M=D
   1512   |    0     |  @0
   1513   |          |  M=M+1
   1514   |    1     |  @1
   1515   |          |  D=M
   1516   |    0     |  @0
   1517   |          |  A=M
   1518   |          |  M=D
   1519   |    0     |  @0
   1520   |          |  M=M+1
   1521   |    2     |  @2
   1522   |          |  D=M
   1523   |    0     |  @0
   1524   |          |  A=M
   1525   |          |  M=D
   1526   |    0     |  @0
   1527   |          |  M=M+1
   1528   |    3     |  @3
   1529   |          |  D=M
   1530   |    0     |  @0
   1531   |          |  A=M
   1532   |          |  M=D
   1533   |    0     |  @0
   1534   |          |  M=M+1
   1535   |    4     |  @4
   1536   |          |  D=M
   1537   |    0     |  @0
   1538   |          |  A=M
   1539   |          |  M=D
   1540   |    0     |  @0
   1541   |          |  M=M+1
   1542   |    0     |  @0
   1543   |          |  D=M
   1544   |    2     |  @2
   1545   |          |  M=D
   1546   |    7     |  @7
   1547   |          |  D=A
   1548   |    2     |  @2
   1549   |          |  M=M-D
   1550   |    0     |  @0
   1551   |          |  D=M
   1552   |    1     |  @1
   1553   |          |  M=D
   1554   | RAM[20]  |  @Math.divide
   1555   |          |  0;JMP
   1556   |ROM[1555] |  (Math.divide$ret.21)
          |          |        // pop local 1
   1556   |    1     |  @1
   1557   |          |  D=A
   1558   |    1     |  @1
   1559   |          |  D=D+M
   1560   | RAM[13]  |  @R13
   1561   |          |  M=D
   1562   |    0     |  @0
   1563   |          |  AM=M-1
   1564   |          |  D=M
   1565   | RAM[13]  |  @R13
   1566   |          |  A=M
   1567   |          |  M=D
          |          |        // push local 0
   1568   |    0     |  @0
   1569   |          |  D=A
   1570   |    1     |  @1
   1571   |          |  A=M
   1572   |          |  A=A+D
   1573   |          |  D=M
   1574   |    0     |  @0
   1575   |          |  A=M
   1576   |          |  M=D
   1577   |    0     |  @0
   1578   |          |  M=M+1
          |          |        // push local 1
   1579   |    1     |  @1
   1580   |          |  D=A
   1581   |    1     |  @1
   1582   |          |  A=M
   1583   |          |  A=A+D
   1584   |          |  D=M
   1585   |    0     |  @0
   1586   |          |  A=M
   1587   |          |  M=D
   1588   |    0     |  @0
   1589   |          |  M=M+1
          |          |        // or
   1590   |    0     |  @0
   1591   |          |  AM=M-1
   1592   |          |  D=M
   1593   |          |  A=A-1
   1594   |          |  M=M|D
          |          |        // pop local 0
   1595   |    0     |  @0
   1596   |          |  D=A
   1597   |    1     |  @1
   1598   |          |  D=D+M
   1599   | RAM[13]  |  @R13
   1600   |          |  M=D
   1601   |    0     |  @0
   1602   |          |  AM=M-1
   1603   |          |  D=M
   1604   | RAM[13]  |  @R13
   1605   |          |  A=M
   1606   |          |  M=D
          |          |        // label Main.more_TRUE_0
   1607   |ROM[1606] |  (Main.more_TRUE_0)
          |          |        // push constant 0
   1607   |    0     |  @0
   1608   |          |  D=A
   1609   |    0     |  @0
   1610   |          |  A=M
   1611   |          |  M=D
   1612   |    0     |  @0
   1613   |          |  M=M+1
          |          |  
          |          |  
          |          |  
          |          |  
          |          |  
          |          |        // /** Implements a graphical square. *//** Constructs a new square with a given location and size. *//*
          |          |        // FIELD  int x    -> this     0
          |          |        // FIELD  int y    -> this     1
          |          |        // FIELD  int size -> this     2
          |          |        // */
          |          |        // 
          |          |        // function Square.new 0
   1614   |ROM[1613] |  (Square.new)
   1614   |    0     |  @0
   1615   |          |  D=M
   1616   |    1     |  @1
   1617   |          |  M=D
          |          |        // /*
          |          |        // ARG    int Ax    -> argument 0
          |          |        // ARG    int Ay    -> argument 1
          |          |        // ARG    int Asize -> argument 2
          |          |        // */
          |          |        // push constant 3
   1618   |    3     |  @3
   1619   |          |  D=A
   1620   |    0     |  @0
   1621   |          |  A=M
   1622   |          |  M=D
   1623   |    0     |  @0
   1624   |          |  M=M+1
          |          |        // call Memory.alloc 1
   1625   |RAM[1673] |  @Memory.alloc$ret.22
   1626   |          |  D=A
   1627   |    0     |  @0
   1628   |          |  A=M
   1629   |          |  M=D
   1630   |    0     |  @0
   1631   |          |  M=M+1
   1632   |    1     |  @1
   1633   |          |  D=M
   1634   |    0     |  @0
   1635   |          |  A=M
   1636   |          |  M=D
   1637   |    0     |  @0
   1638   |          |  M=M+1
   1639   |    2     |  @2
   1640   |          |  D=M
   1641   |    0     |  @0
   1642   |          |  A=M
   1643   |          |  M=D
   1644   |    0     |  @0
   1645   |          |  M=M+1
   1646   |    3     |  @3
   1647   |          |  D=M
   1648   |    0     |  @0
   1649   |          |  A=M
   1650   |          |  M=D
   1651   |    0     |  @0
   1652   |          |  M=M+1
   1653   |    4     |  @4
   1654   |          |  D=M
   1655   |    0     |  @0
   1656   |          |  A=M
   1657   |          |  M=D
   1658   |    0     |  @0
   1659   |          |  M=M+1
   1660   |    0     |  @0
   1661   |          |  D=M
   1662   |    2     |  @2
   1663   |          |  M=D
   1664   |    6     |  @6
   1665   |          |  D=A
   1666   |    2     |  @2
   1667   |          |  M=M-D
   1668   |    0     |  @0
   1669   |          |  D=M
   1670   |    1     |  @1
   1671   |          |  M=D
   1672   | RAM[21]  |  @Memory.alloc
   1673   |          |  0;JMP
   1674   |ROM[1673] |  (Memory.alloc$ret.22)
          |          |        // pop pointer 0
   1674   |    0     |  @0
   1675   |          |  AM=M-1
   1676   |          |  D=M
   1677   |    3     |  @3
   1678   |          |  M=D
          |          |        // push argument 0
   1679   |    0     |  @0
   1680   |          |  D=A
   1681   |    2     |  @2
   1682   |          |  A=M
   1683   |          |  A=A+D
   1684   |          |  D=M
   1685   |    0     |  @0
   1686   |          |  A=M
   1687   |          |  M=D
   1688   |    0     |  @0
   1689   |          |  M=M+1
          |          |        // pop this 0
   1690   |    0     |  @0
   1691   |          |  D=A
   1692   |    3     |  @3
   1693   |          |  D=D+M
   1694   | RAM[13]  |  @R13
   1695   |          |  M=D
   1696   |    0     |  @0
   1697   |          |  AM=M-1
   1698   |          |  D=M
   1699   | RAM[13]  |  @R13
   1700   |          |  A=M
   1701   |          |  M=D
          |          |        // push argument 1
   1702   |    1     |  @1
   1703   |          |  D=A
   1704   |    2     |  @2
   1705   |          |  A=M
   1706   |          |  A=A+D
   1707   |          |  D=M
   1708   |    0     |  @0
   1709   |          |  A=M
   1710   |          |  M=D
   1711   |    0     |  @0
   1712   |          |  M=M+1
          |          |        // pop this 1
   1713   |    1     |  @1
   1714   |          |  D=A
   1715   |    3     |  @3
   1716   |          |  D=D+M
   1717   | RAM[13]  |  @R13
   1718   |          |  M=D
   1719   |    0     |  @0
   1720   |          |  AM=M-1
   1721   |          |  D=M
   1722   | RAM[13]  |  @R13
   1723   |          |  A=M
   1724   |          |  M=D
          |          |        // push argument 2
   1725   |    2     |  @2
   1726   |          |  D=A
   1727   |    2     |  @2
   1728   |          |  A=M
   1729   |          |  A=A+D
   1730   |          |  D=M
   1731   |    0     |  @0
   1732   |          |  A=M
   1733   |          |  M=D
   1734   |    0     |  @0
   1735   |          |  M=M+1
          |          |        // pop this 2
   1736   |    2     |  @2
   1737   |          |  D=A
   1738   |    3     |  @3
   1739   |          |  D=D+M
   1740   | RAM[13]  |  @R13
   1741   |          |  M=D
   1742   |    0     |  @0
   1743   |          |  AM=M-1
   1744   |          |  D=M
   1745   | RAM[13]  |  @R13
   1746   |          |  A=M
   1747   |          |  M=D
          |          |        // push pointer 0
   1748   |    3     |  @3
   1749   |          |  D=M
   1750   |    0     |  @0
   1751   |          |  A=M
   1752   |          |  M=D
   1753   |    0     |  @0
   1754   |          |  M=M+1
          |          |        // call Square.draw 1
   1755   |RAM[1803] |  @Square.draw$ret.23
   1756   |          |  D=A
   1757   |    0     |  @0
   1758   |          |  A=M
   1759   |          |  M=D
   1760   |    0     |  @0
   1761   |          |  M=M+1
   1762   |    1     |  @1
   1763   |          |  D=M
   1764   |    0     |  @0
   1765   |          |  A=M
   1766   |          |  M=D
   1767   |    0     |  @0
   1768   |          |  M=M+1
   1769   |    2     |  @2
   1770   |          |  D=M
   1771   |    0     |  @0
   1772   |          |  A=M
   1773   |          |  M=D
   1774   |    0     |  @0
   1775   |          |  M=M+1
   1776   |    3     |  @3
   1777   |          |  D=M
   1778   |    0     |  @0
   1779   |          |  A=M
   1780   |          |  M=D
   1781   |    0     |  @0
   1782   |          |  M=M+1
   1783   |    4     |  @4
   1784   |          |  D=M
   1785   |    0     |  @0
   1786   |          |  A=M
   1787   |          |  M=D
   1788   |    0     |  @0
   1789   |          |  M=M+1
   1790   |    0     |  @0
   1791   |          |  D=M
   1792   |    2     |  @2
   1793   |          |  M=D
   1794   |    6     |  @6
   1795   |          |  D=A
   1796   |    2     |  @2
   1797   |          |  M=M-D
   1798   |    0     |  @0
   1799   |          |  D=M
   1800   |    1     |  @1
   1801   |          |  M=D
   1802   |RAM[2015] |  @Square.draw
   1803   |          |  0;JMP
   1804   |ROM[1803] |  (Square.draw$ret.23)
          |          |        // pop temp 0
   1804   |    0     |  @0
   1805   |          |  D=A
   1806   |    5     |  @5
   1807   |          |  D=D+A
   1808   | RAM[13]  |  @R13
   1809   |          |  M=D
   1810   |    0     |  @0
   1811   |          |  AM=M-1
   1812   |          |  D=M
   1813   | RAM[13]  |  @R13
   1814   |          |  A=M
   1815   |          |  M=D
          |          |        // push pointer 0
   1816   |    3     |  @3
   1817   |          |  D=M
   1818   |    0     |  @0
   1819   |          |  A=M
   1820   |          |  M=D
   1821   |    0     |  @0
   1822   |          |  M=M+1
          |          |        // return
   1823   |    1     |  @1
   1824   |          |  D=M
   1825   |    13    |  @13
   1826   |          |  M=D
   1827   |    5     |  @5
   1828   |          |  D=A
   1829   |    13    |  @13
   1830   |          |  D=M-D
   1831   |          |  A=D
   1832   |          |  D=M
   1833   |    14    |  @14
   1834   |          |  M=D
   1835   |    0     |  @0
   1836   |          |  AM=M-1
   1837   |          |  D=M
   1838   |    2     |  @2
   1839   |          |  A=M
   1840   |          |  M=D
   1841   |    2     |  @2
   1842   |          |  D=M+1
   1843   |    0     |  @0
   1844   |          |  M=D
   1845   |    13    |  @13
   1846   |          |  M=M-1
   1847   |          |  A=M
   1848   |          |  D=M
   1849   |    4     |  @4
   1850   |          |  M=D
   1851   |    13    |  @13
   1852   |          |  M=M-1
   1853   |          |  A=M
   1854   |          |  D=M
   1855   |    3     |  @3
   1856   |          |  M=D
   1857   |    13    |  @13
   1858   |          |  M=M-1
   1859   |          |  A=M
   1860   |          |  D=M
   1861   |    2     |  @2
   1862   |          |  M=D
   1863   |    13    |  @13
   1864   |          |  M=M-1
   1865   |          |  A=M
   1866   |          |  D=M
   1867   |    1     |  @1
   1868   |          |  M=D
   1869   |    14    |  @14
   1870   |          |  A=M
   1871   |          |  0;JMP
          |          |        // /** Disposes this square. */
          |          |        // function Square.dispose 0
   1872   |ROM[1871] |  (Square.dispose)
   1872   |    0     |  @0
   1873   |          |  D=M
   1874   |    1     |  @1
   1875   |          |  M=D
          |          |        // /*
          |          |        // ARG    Square this -> argument 0
          |          |        // */
          |          |        // push argument 0
   1876   |    0     |  @0
   1877   |          |  D=A
   1878   |    2     |  @2
   1879   |          |  A=M
   1880   |          |  A=A+D
   1881   |          |  D=M
   1882   |    0     |  @0
   1883   |          |  A=M
   1884   |          |  M=D
   1885   |    0     |  @0
   1886   |          |  M=M+1
          |          |        // pop pointer 0
   1887   |    0     |  @0
   1888   |          |  AM=M-1
   1889   |          |  D=M
   1890   |    3     |  @3
   1891   |          |  M=D
          |          |        // push pointer 0
   1892   |    3     |  @3
   1893   |          |  D=M
   1894   |    0     |  @0
   1895   |          |  A=M
   1896   |          |  M=D
   1897   |    0     |  @0
   1898   |          |  M=M+1
          |          |        // call Memory.deAlloc 1
   1899   |RAM[1947] |  @Memory.deAlloc$ret.24
   1900   |          |  D=A
   1901   |    0     |  @0
   1902   |          |  A=M
   1903   |          |  M=D
   1904   |    0     |  @0
   1905   |          |  M=M+1
   1906   |    1     |  @1
   1907   |          |  D=M
   1908   |    0     |  @0
   1909   |          |  A=M
   1910   |          |  M=D
   1911   |    0     |  @0
   1912   |          |  M=M+1
   1913   |    2     |  @2
   1914   |          |  D=M
   1915   |    0     |  @0
   1916   |          |  A=M
   1917   |          |  M=D
   1918   |    0     |  @0
   1919   |          |  M=M+1
   1920   |    3     |  @3
   1921   |          |  D=M
   1922   |    0     |  @0
   1923   |          |  A=M
   1924   |          |  M=D
   1925   |    0     |  @0
   1926   |          |  M=M+1
   1927   |    4     |  @4
   1928   |          |  D=M
   1929   |    0     |  @0
   1930   |          |  A=M
   1931   |          |  M=D
   1932   |    0     |  @0
   1933   |          |  M=M+1
   1934   |    0     |  @0
   1935   |          |  D=M
   1936   |    2     |  @2
   1937   |          |  M=D
   1938   |    6     |  @6
   1939   |          |  D=A
   1940   |    2     |  @2
   1941   |          |  M=M-D
   1942   |    0     |  @0
   1943   |          |  D=M
   1944   |    1     |  @1
   1945   |          |  M=D
   1946   | RAM[22]  |  @Memory.deAlloc
   1947   |          |  0;JMP
   1948   |ROM[1947] |  (Memory.deAlloc$ret.24)
          |          |        // pop temp 0
   1948   |    0     |  @0
   1949   |          |  D=A
   1950   |    5     |  @5
   1951   |          |  D=D+A
   1952   | RAM[13]  |  @R13
   1953   |          |  M=D
   1954   |    0     |  @0
   1955   |          |  AM=M-1
   1956   |          |  D=M
   1957   | RAM[13]  |  @R13
   1958   |          |  A=M
   1959   |          |  M=D
          |          |        // push constant 0
   1960   |    0     |  @0
   1961   |          |  D=A
   1962   |    0     |  @0
   1963   |          |  A=M
   1964   |          |  M=D
   1965   |    0     |  @0
   1966   |          |  M=M+1
          |          |        // return
   1967   |    1     |  @1
   1968   |          |  D=M
   1969   |    13    |  @13
   1970   |          |  M=D
   1971   |    5     |  @5
   1972   |          |  D=A
   1973   |    13    |  @13
   1974   |          |  D=M-D
   1975   |          |  A=D
   1976   |          |  D=M
   1977   |    14    |  @14
   1978   |          |  M=D
   1979   |    0     |  @0
   1980   |          |  AM=M-1
   1981   |          |  D=M
   1982   |    2     |  @2
   1983   |          |  A=M
   1984   |          |  M=D
   1985   |    2     |  @2
   1986   |          |  D=M+1
   1987   |    0     |  @0
   1988   |          |  M=D
   1989   |    13    |  @13
   1990   |          |  M=M-1
   1991   |          |  A=M
   1992   |          |  D=M
   1993   |    4     |  @4
   1994   |          |  M=D
   1995   |    13    |  @13
   1996   |          |  M=M-1
   1997   |          |  A=M
   1998   |          |  D=M
   1999   |    3     |  @3
   2000   |          |  M=D
   2001   |    13    |  @13
   2002   |          |  M=M-1
   2003   |          |  A=M
   2004   |          |  D=M
   2005   |    2     |  @2
   2006   |          |  M=D
   2007   |    13    |  @13
   2008   |          |  M=M-1
   2009   |          |  A=M
   2010   |          |  D=M
   2011   |    1     |  @1
   2012   |          |  M=D
   2013   |    14    |  @14
   2014   |          |  A=M
   2015   |          |  0;JMP
          |          |        // /** Draws the square on the screen. */
          |          |        // function Square.draw 0
   2016   |ROM[2015] |  (Square.draw)
   2016   |    0     |  @0
   2017   |          |  D=M
   2018   |    1     |  @1
   2019   |          |  M=D
          |          |        // /*
          |          |        // ARG    Square this -> argument 0
          |          |        // */
          |          |        // push argument 0
   2020   |    0     |  @0
   2021   |          |  D=A
   2022   |    2     |  @2
   2023   |          |  A=M
   2024   |          |  A=A+D
   2025   |          |  D=M
   2026   |    0     |  @0
   2027   |          |  A=M
   2028   |          |  M=D
   2029   |    0     |  @0
   2030   |          |  M=M+1
          |          |        // pop pointer 0
   2031   |    0     |  @0
   2032   |          |  AM=M-1
   2033   |          |  D=M
   2034   |    3     |  @3
   2035   |          |  M=D
          |          |        // push constant 1
   2036   |    1     |  @1
   2037   |          |  D=A
   2038   |    0     |  @0
   2039   |          |  A=M
   2040   |          |  M=D
   2041   |    0     |  @0
   2042   |          |  M=M+1
          |          |        // neg
   2043   |    0     |  @0
   2044   |          |  A=M-1
   2045   |          |  M=-M
          |          |        // call Screen.setColor 1
   2046   |RAM[2094] |  @Screen.setColor$ret.25
   2047   |          |  D=A
   2048   |    0     |  @0
   2049   |          |  A=M
   2050   |          |  M=D
   2051   |    0     |  @0
   2052   |          |  M=M+1
   2053   |    1     |  @1
   2054   |          |  D=M
   2055   |    0     |  @0
   2056   |          |  A=M
   2057   |          |  M=D
   2058   |    0     |  @0
   2059   |          |  M=M+1
   2060   |    2     |  @2
   2061   |          |  D=M
   2062   |    0     |  @0
   2063   |          |  A=M
   2064   |          |  M=D
   2065   |    0     |  @0
   2066   |          |  M=M+1
   2067   |    3     |  @3
   2068   |          |  D=M
   2069   |    0     |  @0
   2070   |          |  A=M
   2071   |          |  M=D
   2072   |    0     |  @0
   2073   |          |  M=M+1
   2074   |    4     |  @4
   2075   |          |  D=M
   2076   |    0     |  @0
   2077   |          |  A=M
   2078   |          |  M=D
   2079   |    0     |  @0
   2080   |          |  M=M+1
   2081   |    0     |  @0
   2082   |          |  D=M
   2083   |    2     |  @2
   2084   |          |  M=D
   2085   |    6     |  @6
   2086   |          |  D=A
   2087   |    2     |  @2
   2088   |          |  M=M-D
   2089   |    0     |  @0
   2090   |          |  D=M
   2091   |    1     |  @1
   2092   |          |  M=D
   2093   | RAM[23]  |  @Screen.setColor
   2094   |          |  0;JMP
   2095   |ROM[2094] |  (Screen.setColor$ret.25)
          |          |        // pop temp 0
   2095   |    0     |  @0
   2096   |          |  D=A
   2097   |    5     |  @5
   2098   |          |  D=D+A
   2099   | RAM[13]  |  @R13
   2100   |          |  M=D
   2101   |    0     |  @0
   2102   |          |  AM=M-1
   2103   |          |  D=M
   2104   | RAM[13]  |  @R13
   2105   |          |  A=M
   2106   |          |  M=D
          |          |        // push this 0
   2107   |    0     |  @0
   2108   |          |  D=A
   2109   |    3     |  @3
   2110   |          |  A=M
   2111   |          |  A=A+D
   2112   |          |  D=M
   2113   |    0     |  @0
   2114   |          |  A=M
   2115   |          |  M=D
   2116   |    0     |  @0
   2117   |          |  M=M+1
          |          |        // push this 1
   2118   |    1     |  @1
   2119   |          |  D=A
   2120   |    3     |  @3
   2121   |          |  A=M
   2122   |          |  A=A+D
   2123   |          |  D=M
   2124   |    0     |  @0
   2125   |          |  A=M
   2126   |          |  M=D
   2127   |    0     |  @0
   2128   |          |  M=M+1
          |          |        // push this 0
   2129   |    0     |  @0
   2130   |          |  D=A
   2131   |    3     |  @3
   2132   |          |  A=M
   2133   |          |  A=A+D
   2134   |          |  D=M
   2135   |    0     |  @0
   2136   |          |  A=M
   2137   |          |  M=D
   2138   |    0     |  @0
   2139   |          |  M=M+1
          |          |        // push this 2
   2140   |    2     |  @2
   2141   |          |  D=A
   2142   |    3     |  @3
   2143   |          |  A=M
   2144   |          |  A=A+D
   2145   |          |  D=M
   2146   |    0     |  @0
   2147   |          |  A=M
   2148   |          |  M=D
   2149   |    0     |  @0
   2150   |          |  M=M+1
          |          |        // add
   2151   |    0     |  @0
   2152   |          |  AM=M-1
   2153   |          |  D=M
   2154   |          |  A=A-1
   2155   |          |  M=M+D
          |          |        // push this 1
   2156   |    1     |  @1
   2157   |          |  D=A
   2158   |    3     |  @3
   2159   |          |  A=M
   2160   |          |  A=A+D
   2161   |          |  D=M
   2162   |    0     |  @0
   2163   |          |  A=M
   2164   |          |  M=D
   2165   |    0     |  @0
   2166   |          |  M=M+1
          |          |        // push this 2
   2167   |    2     |  @2
   2168   |          |  D=A
   2169   |    3     |  @3
   2170   |          |  A=M
   2171   |          |  A=A+D
   2172   |          |  D=M
   2173   |    0     |  @0
   2174   |          |  A=M
   2175   |          |  M=D
   2176   |    0     |  @0
   2177   |          |  M=M+1
          |          |        // add
   2178   |    0     |  @0
   2179   |          |  AM=M-1
   2180   |          |  D=M
   2181   |          |  A=A-1
   2182   |          |  M=M+D
          |          |        // call Screen.drawRectangle 4
   2183   |RAM[2231] |  @Screen.drawRectangle$ret.26
   2184   |          |  D=A
   2185   |    0     |  @0
   2186   |          |  A=M
   2187   |          |  M=D
   2188   |    0     |  @0
   2189   |          |  M=M+1
   2190   |    1     |  @1
   2191   |          |  D=M
   2192   |    0     |  @0
   2193   |          |  A=M
   2194   |          |  M=D
   2195   |    0     |  @0
   2196   |          |  M=M+1
   2197   |    2     |  @2
   2198   |          |  D=M
   2199   |    0     |  @0
   2200   |          |  A=M
   2201   |          |  M=D
   2202   |    0     |  @0
   2203   |          |  M=M+1
   2204   |    3     |  @3
   2205   |          |  D=M
   2206   |    0     |  @0
   2207   |          |  A=M
   2208   |          |  M=D
   2209   |    0     |  @0
   2210   |          |  M=M+1
   2211   |    4     |  @4
   2212   |          |  D=M
   2213   |    0     |  @0
   2214   |          |  A=M
   2215   |          |  M=D
   2216   |    0     |  @0
   2217   |          |  M=M+1
   2218   |    0     |  @0
   2219   |          |  D=M
   2220   |    2     |  @2
   2221   |          |  M=D
   2222   |    9     |  @9
   2223   |          |  D=A
   2224   |    2     |  @2
   2225   |          |  M=M-D
   2226   |    0     |  @0
   2227   |          |  D=M
   2228   |    1     |  @1
   2229   |          |  M=D
   2230   | RAM[24]  |  @Screen.drawRectangle
   2231   |          |  0;JMP
   2232   |ROM[2231] |  (Screen.drawRectangle$ret.26)
          |          |        // pop temp 0
   2232   |    0     |  @0
   2233   |          |  D=A
   2234   |    5     |  @5
   2235   |          |  D=D+A
   2236   | RAM[13]  |  @R13
   2237   |          |  M=D
   2238   |    0     |  @0
   2239   |          |  AM=M-1
   2240   |          |  D=M
   2241   | RAM[13]  |  @R13
   2242   |          |  A=M
   2243   |          |  M=D
          |          |        // push constant 0
   2244   |    0     |  @0
   2245   |          |  D=A
   2246   |    0     |  @0
   2247   |          |  A=M
   2248   |          |  M=D
   2249   |    0     |  @0
   2250   |          |  M=M+1
          |          |        // return
   2251   |    1     |  @1
   2252   |          |  D=M
   2253   |    13    |  @13
   2254   |          |  M=D
   2255   |    5     |  @5
   2256   |          |  D=A
   2257   |    13    |  @13
   2258   |          |  D=M-D
   2259   |          |  A=D
   2260   |          |  D=M
   2261   |    14    |  @14
   2262   |          |  M=D
   2263   |    0     |  @0
   2264   |          |  AM=M-1
   2265   |          |  D=M
   2266   |    2     |  @2
   2267   |          |  A=M
   2268   |          |  M=D
   2269   |    2     |  @2
   2270   |          |  D=M+1
   2271   |    0     |  @0
   2272   |          |  M=D
   2273   |    13    |  @13
   2274   |          |  M=M-1
   2275   |          |  A=M
   2276   |          |  D=M
   2277   |    4     |  @4
   2278   |          |  M=D
   2279   |    13    |  @13
   2280   |          |  M=M-1
   2281   |          |  A=M
   2282   |          |  D=M
   2283   |    3     |  @3
   2284   |          |  M=D
   2285   |    13    |  @13
   2286   |          |  M=M-1
   2287   |          |  A=M
   2288   |          |  D=M
   2289   |    2     |  @2
   2290   |          |  M=D
   2291   |    13    |  @13
   2292   |          |  M=M-1
   2293   |          |  A=M
   2294   |          |  D=M
   2295   |    1     |  @1
   2296   |          |  M=D
   2297   |    14    |  @14
   2298   |          |  A=M
   2299   |          |  0;JMP
          |          |        // /** Erases the square from the screen. */
          |          |        // function Square.erase 0
   2300   |ROM[2299] |  (Square.erase)
   2300   |    0     |  @0
   2301   |          |  D=M
   2302   |    1     |  @1
   2303   |          |  M=D
          |          |        // /*
          |          |        // ARG    Square this -> argument 0
          |          |        // */
          |          |        // push argument 0
   2304   |    0     |  @0
   2305   |          |  D=A
   2306   |    2     |  @2
   2307   |          |  A=M
   2308   |          |  A=A+D
   2309   |          |  D=M
   2310   |    0     |  @0
   2311   |          |  A=M
   2312   |          |  M=D
   2313   |    0     |  @0
   2314   |          |  M=M+1
          |          |        // pop pointer 0
   2315   |    0     |  @0
   2316   |          |  AM=M-1
   2317   |          |  D=M
   2318   |    3     |  @3
   2319   |          |  M=D
          |          |        // push constant 0
   2320   |    0     |  @0
   2321   |          |  D=A
   2322   |    0     |  @0
   2323   |          |  A=M
   2324   |          |  M=D
   2325   |    0     |  @0
   2326   |          |  M=M+1
          |          |        // call Screen.setColor 1
   2327   |RAM[2375] |  @Screen.setColor$ret.27
   2328   |          |  D=A
   2329   |    0     |  @0
   2330   |          |  A=M
   2331   |          |  M=D
   2332   |    0     |  @0
   2333   |          |  M=M+1
   2334   |    1     |  @1
   2335   |          |  D=M
   2336   |    0     |  @0
   2337   |          |  A=M
   2338   |          |  M=D
   2339   |    0     |  @0
   2340   |          |  M=M+1
   2341   |    2     |  @2
   2342   |          |  D=M
   2343   |    0     |  @0
   2344   |          |  A=M
   2345   |          |  M=D
   2346   |    0     |  @0
   2347   |          |  M=M+1
   2348   |    3     |  @3
   2349   |          |  D=M
   2350   |    0     |  @0
   2351   |          |  A=M
   2352   |          |  M=D
   2353   |    0     |  @0
   2354   |          |  M=M+1
   2355   |    4     |  @4
   2356   |          |  D=M
   2357   |    0     |  @0
   2358   |          |  A=M
   2359   |          |  M=D
   2360   |    0     |  @0
   2361   |          |  M=M+1
   2362   |    0     |  @0
   2363   |          |  D=M
   2364   |    2     |  @2
   2365   |          |  M=D
   2366   |    6     |  @6
   2367   |          |  D=A
   2368   |    2     |  @2
   2369   |          |  M=M-D
   2370   |    0     |  @0
   2371   |          |  D=M
   2372   |    1     |  @1
   2373   |          |  M=D
   2374   | RAM[23]  |  @Screen.setColor
   2375   |          |  0;JMP
   2376   |ROM[2375] |  (Screen.setColor$ret.27)
          |          |        // pop temp 0
   2376   |    0     |  @0
   2377   |          |  D=A
   2378   |    5     |  @5
   2379   |          |  D=D+A
   2380   | RAM[13]  |  @R13
   2381   |          |  M=D
   2382   |    0     |  @0
   2383   |          |  AM=M-1
   2384   |          |  D=M
   2385   | RAM[13]  |  @R13
   2386   |          |  A=M
   2387   |          |  M=D
          |          |        // push this 0
   2388   |    0     |  @0
   2389   |          |  D=A
   2390   |    3     |  @3
   2391   |          |  A=M
   2392   |          |  A=A+D
   2393   |          |  D=M
   2394   |    0     |  @0
   2395   |          |  A=M
   2396   |          |  M=D
   2397   |    0     |  @0
   2398   |          |  M=M+1
          |          |        // push this 1
   2399   |    1     |  @1
   2400   |          |  D=A
   2401   |    3     |  @3
   2402   |          |  A=M
   2403   |          |  A=A+D
   2404   |          |  D=M
   2405   |    0     |  @0
   2406   |          |  A=M
   2407   |          |  M=D
   2408   |    0     |  @0
   2409   |          |  M=M+1
          |          |        // push this 0
   2410   |    0     |  @0
   2411   |          |  D=A
   2412   |    3     |  @3
   2413   |          |  A=M
   2414   |          |  A=A+D
   2415   |          |  D=M
   2416   |    0     |  @0
   2417   |          |  A=M
   2418   |          |  M=D
   2419   |    0     |  @0
   2420   |          |  M=M+1
          |          |        // push this 2
   2421   |    2     |  @2
   2422   |          |  D=A
   2423   |    3     |  @3
   2424   |          |  A=M
   2425   |          |  A=A+D
   2426   |          |  D=M
   2427   |    0     |  @0
   2428   |          |  A=M
   2429   |          |  M=D
   2430   |    0     |  @0
   2431   |          |  M=M+1
          |          |        // add
   2432   |    0     |  @0
   2433   |          |  AM=M-1
   2434   |          |  D=M
   2435   |          |  A=A-1
   2436   |          |  M=M+D
          |          |        // push this 1
   2437   |    1     |  @1
   2438   |          |  D=A
   2439   |    3     |  @3
   2440   |          |  A=M
   2441   |          |  A=A+D
   2442   |          |  D=M
   2443   |    0     |  @0
   2444   |          |  A=M
   2445   |          |  M=D
   2446   |    0     |  @0
   2447   |          |  M=M+1
          |          |        // push this 2
   2448   |    2     |  @2
   2449   |          |  D=A
   2450   |    3     |  @3
   2451   |          |  A=M
   2452   |          |  A=A+D
   2453   |          |  D=M
   2454   |    0     |  @0
   2455   |          |  A=M
   2456   |          |  M=D
   2457   |    0     |  @0
   2458   |          |  M=M+1
          |          |        // add
   2459   |    0     |  @0
   2460   |          |  AM=M-1
   2461   |          |  D=M
   2462   |          |  A=A-1
   2463   |          |  M=M+D
          |          |        // call Screen.drawRectangle 4
   2464   |RAM[2512] |  @Screen.drawRectangle$ret.28
   2465   |          |  D=A
   2466   |    0     |  @0
   2467   |          |  A=M
   2468   |          |  M=D
   2469   |    0     |  @0
   2470   |          |  M=M+1
   2471   |    1     |  @1
   2472   |          |  D=M
   2473   |    0     |  @0
   2474   |          |  A=M
   2475   |          |  M=D
   2476   |    0     |  @0
   2477   |          |  M=M+1
   2478   |    2     |  @2
   2479   |          |  D=M
   2480   |    0     |  @0
   2481   |          |  A=M
   2482   |          |  M=D
   2483   |    0     |  @0
   2484   |          |  M=M+1
   2485   |    3     |  @3
   2486   |          |  D=M
   2487   |    0     |  @0
   2488   |          |  A=M
   2489   |          |  M=D
   2490   |    0     |  @0
   2491   |          |  M=M+1
   2492   |    4     |  @4
   2493   |          |  D=M
   2494   |    0     |  @0
   2495   |          |  A=M
   2496   |          |  M=D
   2497   |    0     |  @0
   2498   |          |  M=M+1
   2499   |    0     |  @0
   2500   |          |  D=M
   2501   |    2     |  @2
   2502   |          |  M=D
   2503   |    9     |  @9
   2504   |          |  D=A
   2505   |    2     |  @2
   2506   |          |  M=M-D
   2507   |    0     |  @0
   2508   |          |  D=M
   2509   |    1     |  @1
   2510   |          |  M=D
   2511   | RAM[24]  |  @Screen.drawRectangle
   2512   |          |  0;JMP
   2513   |ROM[2512] |  (Screen.drawRectangle$ret.28)
          |          |        // pop temp 0
   2513   |    0     |  @0
   2514   |          |  D=A
   2515   |    5     |  @5
   2516   |          |  D=D+A
   2517   | RAM[13]  |  @R13
   2518   |          |  M=D
   2519   |    0     |  @0
   2520   |          |  AM=M-1
   2521   |          |  D=M
   2522   | RAM[13]  |  @R13
   2523   |          |  A=M
   2524   |          |  M=D
          |          |        // push constant 0
   2525   |    0     |  @0
   2526   |          |  D=A
   2527   |    0     |  @0
   2528   |          |  A=M
   2529   |          |  M=D
   2530   |    0     |  @0
   2531   |          |  M=M+1
          |          |        // return
   2532   |    1     |  @1
   2533   |          |  D=M
   2534   |    13    |  @13
   2535   |          |  M=D
   2536   |    5     |  @5
   2537   |          |  D=A
   2538   |    13    |  @13
   2539   |          |  D=M-D
   2540   |          |  A=D
   2541   |          |  D=M
   2542   |    14    |  @14
   2543   |          |  M=D
   2544   |    0     |  @0
   2545   |          |  AM=M-1
   2546   |          |  D=M
   2547   |    2     |  @2
   2548   |          |  A=M
   2549   |          |  M=D
   2550   |    2     |  @2
   2551   |          |  D=M+1
   2552   |    0     |  @0
   2553   |          |  M=D
   2554   |    13    |  @13
   2555   |          |  M=M-1
   2556   |          |  A=M
   2557   |          |  D=M
   2558   |    4     |  @4
   2559   |          |  M=D
   2560   |    13    |  @13
   2561   |          |  M=M-1
   2562   |          |  A=M
   2563   |          |  D=M
   2564   |    3     |  @3
   2565   |          |  M=D
   2566   |    13    |  @13
   2567   |          |  M=M-1
   2568   |          |  A=M
   2569   |          |  D=M
   2570   |    2     |  @2
   2571   |          |  M=D
   2572   |    13    |  @13
   2573   |          |  M=M-1
   2574   |          |  A=M
   2575   |          |  D=M
   2576   |    1     |  @1
   2577   |          |  M=D
   2578   |    14    |  @14
   2579   |          |  A=M
   2580   |          |  0;JMP
          |          |        // /** Increments the square size by 2 pixels. */
          |          |        // function Square.incSize 0
   2581   |ROM[2580] |  (Square.incSize)
   2581   |    0     |  @0
   2582   |          |  D=M
   2583   |    1     |  @1
   2584   |          |  M=D
          |          |        // /*
          |          |        // ARG    Square this -> argument 0
          |          |        // */
          |          |        // push argument 0
   2585   |    0     |  @0
   2586   |          |  D=A
   2587   |    2     |  @2
   2588   |          |  A=M
   2589   |          |  A=A+D
   2590   |          |  D=M
   2591   |    0     |  @0
   2592   |          |  A=M
   2593   |          |  M=D
   2594   |    0     |  @0
   2595   |          |  M=M+1
          |          |        // pop pointer 0
   2596   |    0     |  @0
   2597   |          |  AM=M-1
   2598   |          |  D=M
   2599   |    3     |  @3
   2600   |          |  M=D
          |          |        // push this 1
   2601   |    1     |  @1
   2602   |          |  D=A
   2603   |    3     |  @3
   2604   |          |  A=M
   2605   |          |  A=A+D
   2606   |          |  D=M
   2607   |    0     |  @0
   2608   |          |  A=M
   2609   |          |  M=D
   2610   |    0     |  @0
   2611   |          |  M=M+1
          |          |        // push this 2
   2612   |    2     |  @2
   2613   |          |  D=A
   2614   |    3     |  @3
   2615   |          |  A=M
   2616   |          |  A=A+D
   2617   |          |  D=M
   2618   |    0     |  @0
   2619   |          |  A=M
   2620   |          |  M=D
   2621   |    0     |  @0
   2622   |          |  M=M+1
          |          |        // add
   2623   |    0     |  @0
   2624   |          |  AM=M-1
   2625   |          |  D=M
   2626   |          |  A=A-1
   2627   |          |  M=M+D
          |          |        // push constant 254
   2628   |   254    |  @254
   2629   |          |  D=A
   2630   |    0     |  @0
   2631   |          |  A=M
   2632   |          |  M=D
   2633   |    0     |  @0
   2634   |          |  M=M+1
          |          |        // lt
   2635   |    0     |  @0
   2636   |          |  AM=M-1
   2637   |          |  D=M
   2638   |          |  A=A-1
   2639   |          |  D=M-D
   2640   |          |  M=-1
   2641   |RAM[2645] |  @T0
   2642   |          |  D;JLT
   2643   |    0     |  @0
   2644   |          |  A=M-1
   2645   |          |  M=0
   2646   |ROM[2645] |  (T0)
          |          |        // push this 0
   2646   |    0     |  @0
   2647   |          |  D=A
   2648   |    3     |  @3
   2649   |          |  A=M
   2650   |          |  A=A+D
   2651   |          |  D=M
   2652   |    0     |  @0
   2653   |          |  A=M
   2654   |          |  M=D
   2655   |    0     |  @0
   2656   |          |  M=M+1
          |          |        // push this 2
   2657   |    2     |  @2
   2658   |          |  D=A
   2659   |    3     |  @3
   2660   |          |  A=M
   2661   |          |  A=A+D
   2662   |          |  D=M
   2663   |    0     |  @0
   2664   |          |  A=M
   2665   |          |  M=D
   2666   |    0     |  @0
   2667   |          |  M=M+1
          |          |        // add
   2668   |    0     |  @0
   2669   |          |  AM=M-1
   2670   |          |  D=M
   2671   |          |  A=A-1
   2672   |          |  M=M+D
          |          |        // push constant 510
   2673   |   510    |  @510
   2674   |          |  D=A
   2675   |    0     |  @0
   2676   |          |  A=M
   2677   |          |  M=D
   2678   |    0     |  @0
   2679   |          |  M=M+1
          |          |        // lt
   2680   |    0     |  @0
   2681   |          |  AM=M-1
   2682   |          |  D=M
   2683   |          |  A=A-1
   2684   |          |  D=M-D
   2685   |          |  M=-1
   2686   |RAM[2690] |  @T1
   2687   |          |  D;JLT
   2688   |    0     |  @0
   2689   |          |  A=M-1
   2690   |          |  M=0
   2691   |ROM[2690] |  (T1)
          |          |        // and
   2691   |    0     |  @0
   2692   |          |  AM=M-1
   2693   |          |  D=M
   2694   |          |  A=A-1
   2695   |          |  M=M&D
          |          |        // not
   2696   |    0     |  @0
   2697   |          |  A=M-1
   2698   |          |  M=!M
          |          |        // if-goto Square.incSize_FALSE_0
   2699   |    0     |  @0
   2700   |          |  AM=M-1
   2701   |          |  D=M
   2702   |RAM[2876] |  @Square.incSize_FALSE_0
   2703   |          |  D;JNE
          |          |        // push pointer 0
   2704   |    3     |  @3
   2705   |          |  D=M
   2706   |    0     |  @0
   2707   |          |  A=M
   2708   |          |  M=D
   2709   |    0     |  @0
   2710   |          |  M=M+1
          |          |        // call Square.erase 1
   2711   |RAM[2759] |  @Square.erase$ret.29
   2712   |          |  D=A
   2713   |    0     |  @0
   2714   |          |  A=M
   2715   |          |  M=D
   2716   |    0     |  @0
   2717   |          |  M=M+1
   2718   |    1     |  @1
   2719   |          |  D=M
   2720   |    0     |  @0
   2721   |          |  A=M
   2722   |          |  M=D
   2723   |    0     |  @0
   2724   |          |  M=M+1
   2725   |    2     |  @2
   2726   |          |  D=M
   2727   |    0     |  @0
   2728   |          |  A=M
   2729   |          |  M=D
   2730   |    0     |  @0
   2731   |          |  M=M+1
   2732   |    3     |  @3
   2733   |          |  D=M
   2734   |    0     |  @0
   2735   |          |  A=M
   2736   |          |  M=D
   2737   |    0     |  @0
   2738   |          |  M=M+1
   2739   |    4     |  @4
   2740   |          |  D=M
   2741   |    0     |  @0
   2742   |          |  A=M
   2743   |          |  M=D
   2744   |    0     |  @0
   2745   |          |  M=M+1
   2746   |    0     |  @0
   2747   |          |  D=M
   2748   |    2     |  @2
   2749   |          |  M=D
   2750   |    6     |  @6
   2751   |          |  D=A
   2752   |    2     |  @2
   2753   |          |  M=M-D
   2754   |    0     |  @0
   2755   |          |  D=M
   2756   |    1     |  @1
   2757   |          |  M=D
   2758   |RAM[2299] |  @Square.erase
   2759   |          |  0;JMP
   2760   |ROM[2759] |  (Square.erase$ret.29)
          |          |        // pop temp 0
   2760   |    0     |  @0
   2761   |          |  D=A
   2762   |    5     |  @5
   2763   |          |  D=D+A
   2764   | RAM[13]  |  @R13
   2765   |          |  M=D
   2766   |    0     |  @0
   2767   |          |  AM=M-1
   2768   |          |  D=M
   2769   | RAM[13]  |  @R13
   2770   |          |  A=M
   2771   |          |  M=D
          |          |        // push this 2
   2772   |    2     |  @2
   2773   |          |  D=A
   2774   |    3     |  @3
   2775   |          |  A=M
   2776   |          |  A=A+D
   2777   |          |  D=M
   2778   |    0     |  @0
   2779   |          |  A=M
   2780   |          |  M=D
   2781   |    0     |  @0
   2782   |          |  M=M+1
          |          |        // push constant 2
   2783   |    2     |  @2
   2784   |          |  D=A
   2785   |    0     |  @0
   2786   |          |  A=M
   2787   |          |  M=D
   2788   |    0     |  @0
   2789   |          |  M=M+1
          |          |        // add
   2790   |    0     |  @0
   2791   |          |  AM=M-1
   2792   |          |  D=M
   2793   |          |  A=A-1
   2794   |          |  M=M+D
          |          |        // pop this 2
   2795   |    2     |  @2
   2796   |          |  D=A
   2797   |    3     |  @3
   2798   |          |  D=D+M
   2799   | RAM[13]  |  @R13
   2800   |          |  M=D
   2801   |    0     |  @0
   2802   |          |  AM=M-1
   2803   |          |  D=M
   2804   | RAM[13]  |  @R13
   2805   |          |  A=M
   2806   |          |  M=D
          |          |        // push pointer 0
   2807   |    3     |  @3
   2808   |          |  D=M
   2809   |    0     |  @0
   2810   |          |  A=M
   2811   |          |  M=D
   2812   |    0     |  @0
   2813   |          |  M=M+1
          |          |        // call Square.draw 1
   2814   |RAM[2862] |  @Square.draw$ret.30
   2815   |          |  D=A
   2816   |    0     |  @0
   2817   |          |  A=M
   2818   |          |  M=D
   2819   |    0     |  @0
   2820   |          |  M=M+1
   2821   |    1     |  @1
   2822   |          |  D=M
   2823   |    0     |  @0
   2824   |          |  A=M
   2825   |          |  M=D
   2826   |    0     |  @0
   2827   |          |  M=M+1
   2828   |    2     |  @2
   2829   |          |  D=M
   2830   |    0     |  @0
   2831   |          |  A=M
   2832   |          |  M=D
   2833   |    0     |  @0
   2834   |          |  M=M+1
   2835   |    3     |  @3
   2836   |          |  D=M
   2837   |    0     |  @0
   2838   |          |  A=M
   2839   |          |  M=D
   2840   |    0     |  @0
   2841   |          |  M=M+1
   2842   |    4     |  @4
   2843   |          |  D=M
   2844   |    0     |  @0
   2845   |          |  A=M
   2846   |          |  M=D
   2847   |    0     |  @0
   2848   |          |  M=M+1
   2849   |    0     |  @0
   2850   |          |  D=M
   2851   |    2     |  @2
   2852   |          |  M=D
   2853   |    6     |  @6
   2854   |          |  D=A
   2855   |    2     |  @2
   2856   |          |  M=M-D
   2857   |    0     |  @0
   2858   |          |  D=M
   2859   |    1     |  @1
   2860   |          |  M=D
   2861   |RAM[2015] |  @Square.draw
   2862   |          |  0;JMP
   2863   |ROM[2862] |  (Square.draw$ret.30)
          |          |        // pop temp 0
   2863   |    0     |  @0
   2864   |          |  D=A
   2865   |    5     |  @5
   2866   |          |  D=D+A
   2867   | RAM[13]  |  @R13
   2868   |          |  M=D
   2869   |    0     |  @0
   2870   |          |  AM=M-1
   2871   |          |  D=M
   2872   | RAM[13]  |  @R13
   2873   |          |  A=M
   2874   |          |  M=D
          |          |        // goto Square.incSize_TRUE_0
   2875   |RAM[2876] |  @Square.incSize_TRUE_0
   2876   |          |  0;JMP
          |          |        // label Square.incSize_FALSE_0
   2877   |ROM[2876] |  (Square.incSize_FALSE_0)
          |          |        // label Square.incSize_TRUE_0
   2877   |ROM[2876] |  (Square.incSize_TRUE_0)
          |          |        // push constant 0
   2877   |    0     |  @0
   2878   |          |  D=A
   2879   |    0     |  @0
   2880   |          |  A=M
   2881   |          |  M=D
   2882   |    0     |  @0
   2883   |          |  M=M+1
          |          |        // return
   2884   |    1     |  @1
   2885   |          |  D=M
   2886   |    13    |  @13
   2887   |          |  M=D
   2888   |    5     |  @5
   2889   |          |  D=A
   2890   |    13    |  @13
   2891   |          |  D=M-D
   2892   |          |  A=D
   2893   |          |  D=M
   2894   |    14    |  @14
   2895   |          |  M=D
   2896   |    0     |  @0
   2897   |          |  AM=M-1
   2898   |          |  D=M
   2899   |    2     |  @2
   2900   |          |  A=M
   2901   |          |  M=D
   2902   |    2     |  @2
   2903   |          |  D=M+1
   2904   |    0     |  @0
   2905   |          |  M=D
   2906   |    13    |  @13
   2907   |          |  M=M-1
   2908   |          |  A=M
   2909   |          |  D=M
   2910   |    4     |  @4
   2911   |          |  M=D
   2912   |    13    |  @13
   2913   |          |  M=M-1
   2914   |          |  A=M
   2915   |          |  D=M
   2916   |    3     |  @3
   2917   |          |  M=D
   2918   |    13    |  @13
   2919   |          |  M=M-1
   2920   |          |  A=M
   2921   |          |  D=M
   2922   |    2     |  @2
   2923   |          |  M=D
   2924   |    13    |  @13
   2925   |          |  M=M-1
   2926   |          |  A=M
   2927   |          |  D=M
   2928   |    1     |  @1
   2929   |          |  M=D
   2930   |    14    |  @14
   2931   |          |  A=M
   2932   |          |  0;JMP
          |          |        // /** Decrements the square size by 2 pixels. */
          |          |        // function Square.decSize 0
   2933   |ROM[2932] |  (Square.decSize)
   2933   |    0     |  @0
   2934   |          |  D=M
   2935   |    1     |  @1
   2936   |          |  M=D
          |          |        // /*
          |          |        // ARG    Square this -> argument 0
          |          |        // */
          |          |        // push argument 0
   2937   |    0     |  @0
   2938   |          |  D=A
   2939   |    2     |  @2
   2940   |          |  A=M
   2941   |          |  A=A+D
   2942   |          |  D=M
   2943   |    0     |  @0
   2944   |          |  A=M
   2945   |          |  M=D
   2946   |    0     |  @0
   2947   |          |  M=M+1
          |          |        // pop pointer 0
   2948   |    0     |  @0
   2949   |          |  AM=M-1
   2950   |          |  D=M
   2951   |    3     |  @3
   2952   |          |  M=D
          |          |        // push this 2
   2953   |    2     |  @2
   2954   |          |  D=A
   2955   |    3     |  @3
   2956   |          |  A=M
   2957   |          |  A=A+D
   2958   |          |  D=M
   2959   |    0     |  @0
   2960   |          |  A=M
   2961   |          |  M=D
   2962   |    0     |  @0
   2963   |          |  M=M+1
          |          |        // push constant 2
   2964   |    2     |  @2
   2965   |          |  D=A
   2966   |    0     |  @0
   2967   |          |  A=M
   2968   |          |  M=D
   2969   |    0     |  @0
   2970   |          |  M=M+1
          |          |        // gt
   2971   |    0     |  @0
   2972   |          |  AM=M-1
   2973   |          |  D=M
   2974   |          |  A=A-1
   2975   |          |  D=M-D
   2976   |          |  M=-1
   2977   |RAM[2981] |  @T2
   2978   |          |  D;JGT
   2979   |    0     |  @0
   2980   |          |  A=M-1
   2981   |          |  M=0
   2982   |ROM[2981] |  (T2)
          |          |        // not
   2982   |    0     |  @0
   2983   |          |  A=M-1
   2984   |          |  M=!M
          |          |        // if-goto Square.decSize_FALSE_0
   2985   |    0     |  @0
   2986   |          |  AM=M-1
   2987   |          |  D=M
   2988   |RAM[3162] |  @Square.decSize_FALSE_0
   2989   |          |  D;JNE
          |          |        // push pointer 0
   2990   |    3     |  @3
   2991   |          |  D=M
   2992   |    0     |  @0
   2993   |          |  A=M
   2994   |          |  M=D
   2995   |    0     |  @0
   2996   |          |  M=M+1
          |          |        // call Square.erase 1
   2997   |RAM[3045] |  @Square.erase$ret.31
   2998   |          |  D=A
   2999   |    0     |  @0
   3000   |          |  A=M
   3001   |          |  M=D
   3002   |    0     |  @0
   3003   |          |  M=M+1
   3004   |    1     |  @1
   3005   |          |  D=M
   3006   |    0     |  @0
   3007   |          |  A=M
   3008   |          |  M=D
   3009   |    0     |  @0
   3010   |          |  M=M+1
   3011   |    2     |  @2
   3012   |          |  D=M
   3013   |    0     |  @0
   3014   |          |  A=M
   3015   |          |  M=D
   3016   |    0     |  @0
   3017   |          |  M=M+1
   3018   |    3     |  @3
   3019   |          |  D=M
   3020   |    0     |  @0
   3021   |          |  A=M
   3022   |          |  M=D
   3023   |    0     |  @0
   3024   |          |  M=M+1
   3025   |    4     |  @4
   3026   |          |  D=M
   3027   |    0     |  @0
   3028   |          |  A=M
   3029   |          |  M=D
   3030   |    0     |  @0
   3031   |          |  M=M+1
   3032   |    0     |  @0
   3033   |          |  D=M
   3034   |    2     |  @2
   3035   |          |  M=D
   3036   |    6     |  @6
   3037   |          |  D=A
   3038   |    2     |  @2
   3039   |          |  M=M-D
   3040   |    0     |  @0
   3041   |          |  D=M
   3042   |    1     |  @1
   3043   |          |  M=D
   3044   |RAM[2299] |  @Square.erase
   3045   |          |  0;JMP
   3046   |ROM[3045] |  (Square.erase$ret.31)
          |          |        // pop temp 0
   3046   |    0     |  @0
   3047   |          |  D=A
   3048   |    5     |  @5
   3049   |          |  D=D+A
   3050   | RAM[13]  |  @R13
   3051   |          |  M=D
   3052   |    0     |  @0
   3053   |          |  AM=M-1
   3054   |          |  D=M
   3055   | RAM[13]  |  @R13
   3056   |          |  A=M
   3057   |          |  M=D
          |          |        // push this 2
   3058   |    2     |  @2
   3059   |          |  D=A
   3060   |    3     |  @3
   3061   |          |  A=M
   3062   |          |  A=A+D
   3063   |          |  D=M
   3064   |    0     |  @0
   3065   |          |  A=M
   3066   |          |  M=D
   3067   |    0     |  @0
   3068   |          |  M=M+1
          |          |        // push constant 2
   3069   |    2     |  @2
   3070   |          |  D=A
   3071   |    0     |  @0
   3072   |          |  A=M
   3073   |          |  M=D
   3074   |    0     |  @0
   3075   |          |  M=M+1
          |          |        // sub
   3076   |    0     |  @0
   3077   |          |  AM=M-1
   3078   |          |  D=M
   3079   |          |  A=A-1
   3080   |          |  M=M-D
          |          |        // pop this 2
   3081   |    2     |  @2
   3082   |          |  D=A
   3083   |    3     |  @3
   3084   |          |  D=D+M
   3085   | RAM[13]  |  @R13
   3086   |          |  M=D
   3087   |    0     |  @0
   3088   |          |  AM=M-1
   3089   |          |  D=M
   3090   | RAM[13]  |  @R13
   3091   |          |  A=M
   3092   |          |  M=D
          |          |        // push pointer 0
   3093   |    3     |  @3
   3094   |          |  D=M
   3095   |    0     |  @0
   3096   |          |  A=M
   3097   |          |  M=D
   3098   |    0     |  @0
   3099   |          |  M=M+1
          |          |        // call Square.draw 1
   3100   |RAM[3148] |  @Square.draw$ret.32
   3101   |          |  D=A
   3102   |    0     |  @0
   3103   |          |  A=M
   3104   |          |  M=D
   3105   |    0     |  @0
   3106   |          |  M=M+1
   3107   |    1     |  @1
   3108   |          |  D=M
   3109   |    0     |  @0
   3110   |          |  A=M
   3111   |          |  M=D
   3112   |    0     |  @0
   3113   |          |  M=M+1
   3114   |    2     |  @2
   3115   |          |  D=M
   3116   |    0     |  @0
   3117   |          |  A=M
   3118   |          |  M=D
   3119   |    0     |  @0
   3120   |          |  M=M+1
   3121   |    3     |  @3
   3122   |          |  D=M
   3123   |    0     |  @0
   3124   |          |  A=M
   3125   |          |  M=D
   3126   |    0     |  @0
   3127   |          |  M=M+1
   3128   |    4     |  @4
   3129   |          |  D=M
   3130   |    0     |  @0
   3131   |          |  A=M
   3132   |          |  M=D
   3133   |    0     |  @0
   3134   |          |  M=M+1
   3135   |    0     |  @0
   3136   |          |  D=M
   3137   |    2     |  @2
   3138   |          |  M=D
   3139   |    6     |  @6
   3140   |          |  D=A
   3141   |    2     |  @2
   3142   |          |  M=M-D
   3143   |    0     |  @0
   3144   |          |  D=M
   3145   |    1     |  @1
   3146   |          |  M=D
   3147   |RAM[2015] |  @Square.draw
   3148   |          |  0;JMP
   3149   |ROM[3148] |  (Square.draw$ret.32)
          |          |        // pop temp 0
   3149   |    0     |  @0
   3150   |          |  D=A
   3151   |    5     |  @5
   3152   |          |  D=D+A
   3153   | RAM[13]  |  @R13
   3154   |          |  M=D
   3155   |    0     |  @0
   3156   |          |  AM=M-1
   3157   |          |  D=M
   3158   | RAM[13]  |  @R13
   3159   |          |  A=M
   3160   |          |  M=D
          |          |        // goto Square.decSize_TRUE_0
   3161   |RAM[3162] |  @Square.decSize_TRUE_0
   3162   |          |  0;JMP
          |          |        // label Square.decSize_FALSE_0
   3163   |ROM[3162] |  (Square.decSize_FALSE_0)
          |          |        // label Square.decSize_TRUE_0
   3163   |ROM[3162] |  (Square.decSize_TRUE_0)
          |          |        // push constant 0
   3163   |    0     |  @0
   3164   |          |  D=A
   3165   |    0     |  @0
   3166   |          |  A=M
   3167   |          |  M=D
   3168   |    0     |  @0
   3169   |          |  M=M+1
          |          |        // return
   3170   |    1     |  @1
   3171   |          |  D=M
   3172   |    13    |  @13
   3173   |          |  M=D
   3174   |    5     |  @5
   3175   |          |  D=A
   3176   |    13    |  @13
   3177   |          |  D=M-D
   3178   |          |  A=D
   3179   |          |  D=M
   3180   |    14    |  @14
   3181   |          |  M=D
   3182   |    0     |  @0
   3183   |          |  AM=M-1
   3184   |          |  D=M
   3185   |    2     |  @2
   3186   |          |  A=M
   3187   |          |  M=D
   3188   |    2     |  @2
   3189   |          |  D=M+1
   3190   |    0     |  @0
   3191   |          |  M=D
   3192   |    13    |  @13
   3193   |          |  M=M-1
   3194   |          |  A=M
   3195   |          |  D=M
   3196   |    4     |  @4
   3197   |          |  M=D
   3198   |    13    |  @13
   3199   |          |  M=M-1
   3200   |          |  A=M
   3201   |          |  D=M
   3202   |    3     |  @3
   3203   |          |  M=D
   3204   |    13    |  @13
   3205   |          |  M=M-1
   3206   |          |  A=M
   3207   |          |  D=M
   3208   |    2     |  @2
   3209   |          |  M=D
   3210   |    13    |  @13
   3211   |          |  M=M-1
   3212   |          |  A=M
   3213   |          |  D=M
   3214   |    1     |  @1
   3215   |          |  M=D
   3216   |    14    |  @14
   3217   |          |  A=M
   3218   |          |  0;JMP
          |          |        // /** Moves the square up by 2 pixels. */
          |          |        // function Square.moveUp 0
   3219   |ROM[3218] |  (Square.moveUp)
   3219   |    0     |  @0
   3220   |          |  D=M
   3221   |    1     |  @1
   3222   |          |  M=D
          |          |        // /*
          |          |        // ARG    Square this -> argument 0
          |          |        // */
          |          |        // push argument 0
   3223   |    0     |  @0
   3224   |          |  D=A
   3225   |    2     |  @2
   3226   |          |  A=M
   3227   |          |  A=A+D
   3228   |          |  D=M
   3229   |    0     |  @0
   3230   |          |  A=M
   3231   |          |  M=D
   3232   |    0     |  @0
   3233   |          |  M=M+1
          |          |        // pop pointer 0
   3234   |    0     |  @0
   3235   |          |  AM=M-1
   3236   |          |  D=M
   3237   |    3     |  @3
   3238   |          |  M=D
          |          |        // push this 1
   3239   |    1     |  @1
   3240   |          |  D=A
   3241   |    3     |  @3
   3242   |          |  A=M
   3243   |          |  A=A+D
   3244   |          |  D=M
   3245   |    0     |  @0
   3246   |          |  A=M
   3247   |          |  M=D
   3248   |    0     |  @0
   3249   |          |  M=M+1
          |          |        // push constant 1
   3250   |    1     |  @1
   3251   |          |  D=A
   3252   |    0     |  @0
   3253   |          |  A=M
   3254   |          |  M=D
   3255   |    0     |  @0
   3256   |          |  M=M+1
          |          |        // gt
   3257   |    0     |  @0
   3258   |          |  AM=M-1
   3259   |          |  D=M
   3260   |          |  A=A-1
   3261   |          |  D=M-D
   3262   |          |  M=-1
   3263   |RAM[3267] |  @T3
   3264   |          |  D;JGT
   3265   |    0     |  @0
   3266   |          |  A=M-1
   3267   |          |  M=0
   3268   |ROM[3267] |  (T3)
          |          |        // not
   3268   |    0     |  @0
   3269   |          |  A=M-1
   3270   |          |  M=!M
          |          |        // if-goto Square.moveUp_FALSE_0
   3271   |    0     |  @0
   3272   |          |  AM=M-1
   3273   |          |  D=M
   3274   |RAM[3749] |  @Square.moveUp_FALSE_0
   3275   |          |  D;JNE
          |          |        // push constant 0
   3276   |    0     |  @0
   3277   |          |  D=A
   3278   |    0     |  @0
   3279   |          |  A=M
   3280   |          |  M=D
   3281   |    0     |  @0
   3282   |          |  M=M+1
          |          |        // call Screen.setColor 1
   3283   |RAM[3331] |  @Screen.setColor$ret.33
   3284   |          |  D=A
   3285   |    0     |  @0
   3286   |          |  A=M
   3287   |          |  M=D
   3288   |    0     |  @0
   3289   |          |  M=M+1
   3290   |    1     |  @1
   3291   |          |  D=M
   3292   |    0     |  @0
   3293   |          |  A=M
   3294   |          |  M=D
   3295   |    0     |  @0
   3296   |          |  M=M+1
   3297   |    2     |  @2
   3298   |          |  D=M
   3299   |    0     |  @0
   3300   |          |  A=M
   3301   |          |  M=D
   3302   |    0     |  @0
   3303   |          |  M=M+1
   3304   |    3     |  @3
   3305   |          |  D=M
   3306   |    0     |  @0
   3307   |          |  A=M
   3308   |          |  M=D
   3309   |    0     |  @0
   3310   |          |  M=M+1
   3311   |    4     |  @4
   3312   |          |  D=M
   3313   |    0     |  @0
   3314   |          |  A=M
   3315   |          |  M=D
   3316   |    0     |  @0
   3317   |          |  M=M+1
   3318   |    0     |  @0
   3319   |          |  D=M
   3320   |    2     |  @2
   3321   |          |  M=D
   3322   |    6     |  @6
   3323   |          |  D=A
   3324   |    2     |  @2
   3325   |          |  M=M-D
   3326   |    0     |  @0
   3327   |          |  D=M
   3328   |    1     |  @1
   3329   |          |  M=D
   3330   | RAM[23]  |  @Screen.setColor
   3331   |          |  0;JMP
   3332   |ROM[3331] |  (Screen.setColor$ret.33)
          |          |        // pop temp 0
   3332   |    0     |  @0
   3333   |          |  D=A
   3334   |    5     |  @5
   3335   |          |  D=D+A
   3336   | RAM[13]  |  @R13
   3337   |          |  M=D
   3338   |    0     |  @0
   3339   |          |  AM=M-1
   3340   |          |  D=M
   3341   | RAM[13]  |  @R13
   3342   |          |  A=M
   3343   |          |  M=D
          |          |        // push this 0
   3344   |    0     |  @0
   3345   |          |  D=A
   3346   |    3     |  @3
   3347   |          |  A=M
   3348   |          |  A=A+D
   3349   |          |  D=M
   3350   |    0     |  @0
   3351   |          |  A=M
   3352   |          |  M=D
   3353   |    0     |  @0
   3354   |          |  M=M+1
          |          |        // push this 1
   3355   |    1     |  @1
   3356   |          |  D=A
   3357   |    3     |  @3
   3358   |          |  A=M
   3359   |          |  A=A+D
   3360   |          |  D=M
   3361   |    0     |  @0
   3362   |          |  A=M
   3363   |          |  M=D
   3364   |    0     |  @0
   3365   |          |  M=M+1
          |          |        // push this 2
   3366   |    2     |  @2
   3367   |          |  D=A
   3368   |    3     |  @3
   3369   |          |  A=M
   3370   |          |  A=A+D
   3371   |          |  D=M
   3372   |    0     |  @0
   3373   |          |  A=M
   3374   |          |  M=D
   3375   |    0     |  @0
   3376   |          |  M=M+1
          |          |        // add
   3377   |    0     |  @0
   3378   |          |  AM=M-1
   3379   |          |  D=M
   3380   |          |  A=A-1
   3381   |          |  M=M+D
          |          |        // push constant 1
   3382   |    1     |  @1
   3383   |          |  D=A
   3384   |    0     |  @0
   3385   |          |  A=M
   3386   |          |  M=D
   3387   |    0     |  @0
   3388   |          |  M=M+1
          |          |        // sub
   3389   |    0     |  @0
   3390   |          |  AM=M-1
   3391   |          |  D=M
   3392   |          |  A=A-1
   3393   |          |  M=M-D
          |          |        // push this 0
   3394   |    0     |  @0
   3395   |          |  D=A
   3396   |    3     |  @3
   3397   |          |  A=M
   3398   |          |  A=A+D
   3399   |          |  D=M
   3400   |    0     |  @0
   3401   |          |  A=M
   3402   |          |  M=D
   3403   |    0     |  @0
   3404   |          |  M=M+1
          |          |        // push this 2
   3405   |    2     |  @2
   3406   |          |  D=A
   3407   |    3     |  @3
   3408   |          |  A=M
   3409   |          |  A=A+D
   3410   |          |  D=M
   3411   |    0     |  @0
   3412   |          |  A=M
   3413   |          |  M=D
   3414   |    0     |  @0
   3415   |          |  M=M+1
          |          |        // add
   3416   |    0     |  @0
   3417   |          |  AM=M-1
   3418   |          |  D=M
   3419   |          |  A=A-1
   3420   |          |  M=M+D
          |          |        // push this 1
   3421   |    1     |  @1
   3422   |          |  D=A
   3423   |    3     |  @3
   3424   |          |  A=M
   3425   |          |  A=A+D
   3426   |          |  D=M
   3427   |    0     |  @0
   3428   |          |  A=M
   3429   |          |  M=D
   3430   |    0     |  @0
   3431   |          |  M=M+1
          |          |        // push this 2
   3432   |    2     |  @2
   3433   |          |  D=A
   3434   |    3     |  @3
   3435   |          |  A=M
   3436   |          |  A=A+D
   3437   |          |  D=M
   3438   |    0     |  @0
   3439   |          |  A=M
   3440   |          |  M=D
   3441   |    0     |  @0
   3442   |          |  M=M+1
          |          |        // add
   3443   |    0     |  @0
   3444   |          |  AM=M-1
   3445   |          |  D=M
   3446   |          |  A=A-1
   3447   |          |  M=M+D
          |          |        // call Screen.drawRectangle 4
   3448   |RAM[3496] |  @Screen.drawRectangle$ret.34
   3449   |          |  D=A
   3450   |    0     |  @0
   3451   |          |  A=M
   3452   |          |  M=D
   3453   |    0     |  @0
   3454   |          |  M=M+1
   3455   |    1     |  @1
   3456   |          |  D=M
   3457   |    0     |  @0
   3458   |          |  A=M
   3459   |          |  M=D
   3460   |    0     |  @0
   3461   |          |  M=M+1
   3462   |    2     |  @2
   3463   |          |  D=M
   3464   |    0     |  @0
   3465   |          |  A=M
   3466   |          |  M=D
   3467   |    0     |  @0
   3468   |          |  M=M+1
   3469   |    3     |  @3
   3470   |          |  D=M
   3471   |    0     |  @0
   3472   |          |  A=M
   3473   |          |  M=D
   3474   |    0     |  @0
   3475   |          |  M=M+1
   3476   |    4     |  @4
   3477   |          |  D=M
   3478   |    0     |  @0
   3479   |          |  A=M
   3480   |          |  M=D
   3481   |    0     |  @0
   3482   |          |  M=M+1
   3483   |    0     |  @0
   3484   |          |  D=M
   3485   |    2     |  @2
   3486   |          |  M=D
   3487   |    9     |  @9
   3488   |          |  D=A
   3489   |    2     |  @2
   3490   |          |  M=M-D
   3491   |    0     |  @0
   3492   |          |  D=M
   3493   |    1     |  @1
   3494   |          |  M=D
   3495   | RAM[24]  |  @Screen.drawRectangle
   3496   |          |  0;JMP
   3497   |ROM[3496] |  (Screen.drawRectangle$ret.34)
          |          |        // pop temp 0
   3497   |    0     |  @0
   3498   |          |  D=A
   3499   |    5     |  @5
   3500   |          |  D=D+A
   3501   | RAM[13]  |  @R13
   3502   |          |  M=D
   3503   |    0     |  @0
   3504   |          |  AM=M-1
   3505   |          |  D=M
   3506   | RAM[13]  |  @R13
   3507   |          |  A=M
   3508   |          |  M=D
          |          |        // push this 1
   3509   |    1     |  @1
   3510   |          |  D=A
   3511   |    3     |  @3
   3512   |          |  A=M
   3513   |          |  A=A+D
   3514   |          |  D=M
   3515   |    0     |  @0
   3516   |          |  A=M
   3517   |          |  M=D
   3518   |    0     |  @0
   3519   |          |  M=M+1
          |          |        // push constant 2
   3520   |    2     |  @2
   3521   |          |  D=A
   3522   |    0     |  @0
   3523   |          |  A=M
   3524   |          |  M=D
   3525   |    0     |  @0
   3526   |          |  M=M+1
          |          |        // sub
   3527   |    0     |  @0
   3528   |          |  AM=M-1
   3529   |          |  D=M
   3530   |          |  A=A-1
   3531   |          |  M=M-D
          |          |        // pop this 1
   3532   |    1     |  @1
   3533   |          |  D=A
   3534   |    3     |  @3
   3535   |          |  D=D+M
   3536   | RAM[13]  |  @R13
   3537   |          |  M=D
   3538   |    0     |  @0
   3539   |          |  AM=M-1
   3540   |          |  D=M
   3541   | RAM[13]  |  @R13
   3542   |          |  A=M
   3543   |          |  M=D
          |          |        // push constant 1
   3544   |    1     |  @1
   3545   |          |  D=A
   3546   |    0     |  @0
   3547   |          |  A=M
   3548   |          |  M=D
   3549   |    0     |  @0
   3550   |          |  M=M+1
          |          |        // neg
   3551   |    0     |  @0
   3552   |          |  A=M-1
   3553   |          |  M=-M
          |          |        // call Screen.setColor 1
   3554   |RAM[3602] |  @Screen.setColor$ret.35
   3555   |          |  D=A
   3556   |    0     |  @0
   3557   |          |  A=M
   3558   |          |  M=D
   3559   |    0     |  @0
   3560   |          |  M=M+1
   3561   |    1     |  @1
   3562   |          |  D=M
   3563   |    0     |  @0
   3564   |          |  A=M
   3565   |          |  M=D
   3566   |    0     |  @0
   3567   |          |  M=M+1
   3568   |    2     |  @2
   3569   |          |  D=M
   3570   |    0     |  @0
   3571   |          |  A=M
   3572   |          |  M=D
   3573   |    0     |  @0
   3574   |          |  M=M+1
   3575   |    3     |  @3
   3576   |          |  D=M
   3577   |    0     |  @0
   3578   |          |  A=M
   3579   |          |  M=D
   3580   |    0     |  @0
   3581   |          |  M=M+1
   3582   |    4     |  @4
   3583   |          |  D=M
   3584   |    0     |  @0
   3585   |          |  A=M
   3586   |          |  M=D
   3587   |    0     |  @0
   3588   |          |  M=M+1
   3589   |    0     |  @0
   3590   |          |  D=M
   3591   |    2     |  @2
   3592   |          |  M=D
   3593   |    6     |  @6
   3594   |          |  D=A
   3595   |    2     |  @2
   3596   |          |  M=M-D
   3597   |    0     |  @0
   3598   |          |  D=M
   3599   |    1     |  @1
   3600   |          |  M=D
   3601   | RAM[23]  |  @Screen.setColor
   3602   |          |  0;JMP
   3603   |ROM[3602] |  (Screen.setColor$ret.35)
          |          |        // pop temp 0
   3603   |    0     |  @0
   3604   |          |  D=A
   3605   |    5     |  @5
   3606   |          |  D=D+A
   3607   | RAM[13]  |  @R13
   3608   |          |  M=D
   3609   |    0     |  @0
   3610   |          |  AM=M-1
   3611   |          |  D=M
   3612   | RAM[13]  |  @R13
   3613   |          |  A=M
   3614   |          |  M=D
          |          |        // push this 0
   3615   |    0     |  @0
   3616   |          |  D=A
   3617   |    3     |  @3
   3618   |          |  A=M
   3619   |          |  A=A+D
   3620   |          |  D=M
   3621   |    0     |  @0
   3622   |          |  A=M
   3623   |          |  M=D
   3624   |    0     |  @0
   3625   |          |  M=M+1
          |          |        // push this 1
   3626   |    1     |  @1
   3627   |          |  D=A
   3628   |    3     |  @3
   3629   |          |  A=M
   3630   |          |  A=A+D
   3631   |          |  D=M
   3632   |    0     |  @0
   3633   |          |  A=M
   3634   |          |  M=D
   3635   |    0     |  @0
   3636   |          |  M=M+1
          |          |        // push this 0
   3637   |    0     |  @0
   3638   |          |  D=A
   3639   |    3     |  @3
   3640   |          |  A=M
   3641   |          |  A=A+D
   3642   |          |  D=M
   3643   |    0     |  @0
   3644   |          |  A=M
   3645   |          |  M=D
   3646   |    0     |  @0
   3647   |          |  M=M+1
          |          |        // push this 2
   3648   |    2     |  @2
   3649   |          |  D=A
   3650   |    3     |  @3
   3651   |          |  A=M
   3652   |          |  A=A+D
   3653   |          |  D=M
   3654   |    0     |  @0
   3655   |          |  A=M
   3656   |          |  M=D
   3657   |    0     |  @0
   3658   |          |  M=M+1
          |          |        // add
   3659   |    0     |  @0
   3660   |          |  AM=M-1
   3661   |          |  D=M
   3662   |          |  A=A-1
   3663   |          |  M=M+D
          |          |        // push this 1
   3664   |    1     |  @1
   3665   |          |  D=A
   3666   |    3     |  @3
   3667   |          |  A=M
   3668   |          |  A=A+D
   3669   |          |  D=M
   3670   |    0     |  @0
   3671   |          |  A=M
   3672   |          |  M=D
   3673   |    0     |  @0
   3674   |          |  M=M+1
          |          |        // push constant 1
   3675   |    1     |  @1
   3676   |          |  D=A
   3677   |    0     |  @0
   3678   |          |  A=M
   3679   |          |  M=D
   3680   |    0     |  @0
   3681   |          |  M=M+1
          |          |        // add
   3682   |    0     |  @0
   3683   |          |  AM=M-1
   3684   |          |  D=M
   3685   |          |  A=A-1
   3686   |          |  M=M+D
          |          |        // call Screen.drawRectangle 4
   3687   |RAM[3735] |  @Screen.drawRectangle$ret.36
   3688   |          |  D=A
   3689   |    0     |  @0
   3690   |          |  A=M
   3691   |          |  M=D
   3692   |    0     |  @0
   3693   |          |  M=M+1
   3694   |    1     |  @1
   3695   |          |  D=M
   3696   |    0     |  @0
   3697   |          |  A=M
   3698   |          |  M=D
   3699   |    0     |  @0
   3700   |          |  M=M+1
   3701   |    2     |  @2
   3702   |          |  D=M
   3703   |    0     |  @0
   3704   |          |  A=M
   3705   |          |  M=D
   3706   |    0     |  @0
   3707   |          |  M=M+1
   3708   |    3     |  @3
   3709   |          |  D=M
   3710   |    0     |  @0
   3711   |          |  A=M
   3712   |          |  M=D
   3713   |    0     |  @0
   3714   |          |  M=M+1
   3715   |    4     |  @4
   3716   |          |  D=M
   3717   |    0     |  @0
   3718   |          |  A=M
   3719   |          |  M=D
   3720   |    0     |  @0
   3721   |          |  M=M+1
   3722   |    0     |  @0
   3723   |          |  D=M
   3724   |    2     |  @2
   3725   |          |  M=D
   3726   |    9     |  @9
   3727   |          |  D=A
   3728   |    2     |  @2
   3729   |          |  M=M-D
   3730   |    0     |  @0
   3731   |          |  D=M
   3732   |    1     |  @1
   3733   |          |  M=D
   3734   | RAM[24]  |  @Screen.drawRectangle
   3735   |          |  0;JMP
   3736   |ROM[3735] |  (Screen.drawRectangle$ret.36)
          |          |        // pop temp 0
   3736   |    0     |  @0
   3737   |          |  D=A
   3738   |    5     |  @5
   3739   |          |  D=D+A
   3740   | RAM[13]  |  @R13
   3741   |          |  M=D
   3742   |    0     |  @0
   3743   |          |  AM=M-1
   3744   |          |  D=M
   3745   | RAM[13]  |  @R13
   3746   |          |  A=M
   3747   |          |  M=D
          |          |        // goto Square.moveUp_TRUE_0
   3748   |RAM[3749] |  @Square.moveUp_TRUE_0
   3749   |          |  0;JMP
          |          |        // label Square.moveUp_FALSE_0
   3750   |ROM[3749] |  (Square.moveUp_FALSE_0)
          |          |        // label Square.moveUp_TRUE_0
   3750   |ROM[3749] |  (Square.moveUp_TRUE_0)
          |          |        // push constant 0
   3750   |    0     |  @0
   3751   |          |  D=A
   3752   |    0     |  @0
   3753   |          |  A=M
   3754   |          |  M=D
   3755   |    0     |  @0
   3756   |          |  M=M+1
          |          |        // return
   3757   |    1     |  @1
   3758   |          |  D=M
   3759   |    13    |  @13
   3760   |          |  M=D
   3761   |    5     |  @5
   3762   |          |  D=A
   3763   |    13    |  @13
   3764   |          |  D=M-D
   3765   |          |  A=D
   3766   |          |  D=M
   3767   |    14    |  @14
   3768   |          |  M=D
   3769   |    0     |  @0
   3770   |          |  AM=M-1
   3771   |          |  D=M
   3772   |    2     |  @2
   3773   |          |  A=M
   3774   |          |  M=D
   3775   |    2     |  @2
   3776   |          |  D=M+1
   3777   |    0     |  @0
   3778   |          |  M=D
   3779   |    13    |  @13
   3780   |          |  M=M-1
   3781   |          |  A=M
   3782   |          |  D=M
   3783   |    4     |  @4
   3784   |          |  M=D
   3785   |    13    |  @13
   3786   |          |  M=M-1
   3787   |          |  A=M
   3788   |          |  D=M
   3789   |    3     |  @3
   3790   |          |  M=D
   3791   |    13    |  @13
   3792   |          |  M=M-1
   3793   |          |  A=M
   3794   |          |  D=M
   3795   |    2     |  @2
   3796   |          |  M=D
   3797   |    13    |  @13
   3798   |          |  M=M-1
   3799   |          |  A=M
   3800   |          |  D=M
   3801   |    1     |  @1
   3802   |          |  M=D
   3803   |    14    |  @14
   3804   |          |  A=M
   3805   |          |  0;JMP
          |          |        // /** Moves the square down by 2 pixels. */
          |          |        // function Square.moveDown 0
   3806   |ROM[3805] |  (Square.moveDown)
   3806   |    0     |  @0
   3807   |          |  D=M
   3808   |    1     |  @1
   3809   |          |  M=D
          |          |        // /*
          |          |        // ARG    Square this -> argument 0
          |          |        // */
          |          |        // push argument 0
   3810   |    0     |  @0
   3811   |          |  D=A
   3812   |    2     |  @2
   3813   |          |  A=M
   3814   |          |  A=A+D
   3815   |          |  D=M
   3816   |    0     |  @0
   3817   |          |  A=M
   3818   |          |  M=D
   3819   |    0     |  @0
   3820   |          |  M=M+1
          |          |        // pop pointer 0
   3821   |    0     |  @0
   3822   |          |  AM=M-1
   3823   |          |  D=M
   3824   |    3     |  @3
   3825   |          |  M=D
          |          |        // push this 1
   3826   |    1     |  @1
   3827   |          |  D=A
   3828   |    3     |  @3
   3829   |          |  A=M
   3830   |          |  A=A+D
   3831   |          |  D=M
   3832   |    0     |  @0
   3833   |          |  A=M
   3834   |          |  M=D
   3835   |    0     |  @0
   3836   |          |  M=M+1
          |          |        // push this 2
   3837   |    2     |  @2
   3838   |          |  D=A
   3839   |    3     |  @3
   3840   |          |  A=M
   3841   |          |  A=A+D
   3842   |          |  D=M
   3843   |    0     |  @0
   3844   |          |  A=M
   3845   |          |  M=D
   3846   |    0     |  @0
   3847   |          |  M=M+1
          |          |        // add
   3848   |    0     |  @0
   3849   |          |  AM=M-1
   3850   |          |  D=M
   3851   |          |  A=A-1
   3852   |          |  M=M+D
          |          |        // push constant 254
   3853   |   254    |  @254
   3854   |          |  D=A
   3855   |    0     |  @0
   3856   |          |  A=M
   3857   |          |  M=D
   3858   |    0     |  @0
   3859   |          |  M=M+1
          |          |        // lt
   3860   |    0     |  @0
   3861   |          |  AM=M-1
   3862   |          |  D=M
   3863   |          |  A=A-1
   3864   |          |  D=M-D
   3865   |          |  M=-1
   3866   |RAM[3870] |  @T4
   3867   |          |  D;JLT
   3868   |    0     |  @0
   3869   |          |  A=M-1
   3870   |          |  M=0
   3871   |ROM[3870] |  (T4)
          |          |        // not
   3871   |    0     |  @0
   3872   |          |  A=M-1
   3873   |          |  M=!M
          |          |        // if-goto Square.moveDown_FALSE_0
   3874   |    0     |  @0
   3875   |          |  AM=M-1
   3876   |          |  D=M
   3877   |RAM[4352] |  @Square.moveDown_FALSE_0
   3878   |          |  D;JNE
          |          |        // push constant 0
   3879   |    0     |  @0
   3880   |          |  D=A
   3881   |    0     |  @0
   3882   |          |  A=M
   3883   |          |  M=D
   3884   |    0     |  @0
   3885   |          |  M=M+1
          |          |        // call Screen.setColor 1
   3886   |RAM[3934] |  @Screen.setColor$ret.37
   3887   |          |  D=A
   3888   |    0     |  @0
   3889   |          |  A=M
   3890   |          |  M=D
   3891   |    0     |  @0
   3892   |          |  M=M+1
   3893   |    1     |  @1
   3894   |          |  D=M
   3895   |    0     |  @0
   3896   |          |  A=M
   3897   |          |  M=D
   3898   |    0     |  @0
   3899   |          |  M=M+1
   3900   |    2     |  @2
   3901   |          |  D=M
   3902   |    0     |  @0
   3903   |          |  A=M
   3904   |          |  M=D
   3905   |    0     |  @0
   3906   |          |  M=M+1
   3907   |    3     |  @3
   3908   |          |  D=M
   3909   |    0     |  @0
   3910   |          |  A=M
   3911   |          |  M=D
   3912   |    0     |  @0
   3913   |          |  M=M+1
   3914   |    4     |  @4
   3915   |          |  D=M
   3916   |    0     |  @0
   3917   |          |  A=M
   3918   |          |  M=D
   3919   |    0     |  @0
   3920   |          |  M=M+1
   3921   |    0     |  @0
   3922   |          |  D=M
   3923   |    2     |  @2
   3924   |          |  M=D
   3925   |    6     |  @6
   3926   |          |  D=A
   3927   |    2     |  @2
   3928   |          |  M=M-D
   3929   |    0     |  @0
   3930   |          |  D=M
   3931   |    1     |  @1
   3932   |          |  M=D
   3933   | RAM[23]  |  @Screen.setColor
   3934   |          |  0;JMP
   3935   |ROM[3934] |  (Screen.setColor$ret.37)
          |          |        // pop temp 0
   3935   |    0     |  @0
   3936   |          |  D=A
   3937   |    5     |  @5
   3938   |          |  D=D+A
   3939   | RAM[13]  |  @R13
   3940   |          |  M=D
   3941   |    0     |  @0
   3942   |          |  AM=M-1
   3943   |          |  D=M
   3944   | RAM[13]  |  @R13
   3945   |          |  A=M
   3946   |          |  M=D
          |          |        // push this 0
   3947   |    0     |  @0
   3948   |          |  D=A
   3949   |    3     |  @3
   3950   |          |  A=M
   3951   |          |  A=A+D
   3952   |          |  D=M
   3953   |    0     |  @0
   3954   |          |  A=M
   3955   |          |  M=D
   3956   |    0     |  @0
   3957   |          |  M=M+1
          |          |        // push this 1
   3958   |    1     |  @1
   3959   |          |  D=A
   3960   |    3     |  @3
   3961   |          |  A=M
   3962   |          |  A=A+D
   3963   |          |  D=M
   3964   |    0     |  @0
   3965   |          |  A=M
   3966   |          |  M=D
   3967   |    0     |  @0
   3968   |          |  M=M+1
          |          |        // push this 0
   3969   |    0     |  @0
   3970   |          |  D=A
   3971   |    3     |  @3
   3972   |          |  A=M
   3973   |          |  A=A+D
   3974   |          |  D=M
   3975   |    0     |  @0
   3976   |          |  A=M
   3977   |          |  M=D
   3978   |    0     |  @0
   3979   |          |  M=M+1
          |          |        // push this 2
   3980   |    2     |  @2
   3981   |          |  D=A
   3982   |    3     |  @3
   3983   |          |  A=M
   3984   |          |  A=A+D
   3985   |          |  D=M
   3986   |    0     |  @0
   3987   |          |  A=M
   3988   |          |  M=D
   3989   |    0     |  @0
   3990   |          |  M=M+1
          |          |        // add
   3991   |    0     |  @0
   3992   |          |  AM=M-1
   3993   |          |  D=M
   3994   |          |  A=A-1
   3995   |          |  M=M+D
          |          |        // push this 1
   3996   |    1     |  @1
   3997   |          |  D=A
   3998   |    3     |  @3
   3999   |          |  A=M
   4000   |          |  A=A+D
   4001   |          |  D=M
   4002   |    0     |  @0
   4003   |          |  A=M
   4004   |          |  M=D
   4005   |    0     |  @0
   4006   |          |  M=M+1
          |          |        // push constant 1
   4007   |    1     |  @1
   4008   |          |  D=A
   4009   |    0     |  @0
   4010   |          |  A=M
   4011   |          |  M=D
   4012   |    0     |  @0
   4013   |          |  M=M+1
          |          |        // add
   4014   |    0     |  @0
   4015   |          |  AM=M-1
   4016   |          |  D=M
   4017   |          |  A=A-1
   4018   |          |  M=M+D
          |          |        // call Screen.drawRectangle 4
   4019   |RAM[4067] |  @Screen.drawRectangle$ret.38
   4020   |          |  D=A
   4021   |    0     |  @0
   4022   |          |  A=M
   4023   |          |  M=D
   4024   |    0     |  @0
   4025   |          |  M=M+1
   4026   |    1     |  @1
   4027   |          |  D=M
   4028   |    0     |  @0
   4029   |          |  A=M
   4030   |          |  M=D
   4031   |    0     |  @0
   4032   |          |  M=M+1
   4033   |    2     |  @2
   4034   |          |  D=M
   4035   |    0     |  @0
   4036   |          |  A=M
   4037   |          |  M=D
   4038   |    0     |  @0
   4039   |          |  M=M+1
   4040   |    3     |  @3
   4041   |          |  D=M
   4042   |    0     |  @0
   4043   |          |  A=M
   4044   |          |  M=D
   4045   |    0     |  @0
   4046   |          |  M=M+1
   4047   |    4     |  @4
   4048   |          |  D=M
   4049   |    0     |  @0
   4050   |          |  A=M
   4051   |          |  M=D
   4052   |    0     |  @0
   4053   |          |  M=M+1
   4054   |    0     |  @0
   4055   |          |  D=M
   4056   |    2     |  @2
   4057   |          |  M=D
   4058   |    9     |  @9
   4059   |          |  D=A
   4060   |    2     |  @2
   4061   |          |  M=M-D
   4062   |    0     |  @0
   4063   |          |  D=M
   4064   |    1     |  @1
   4065   |          |  M=D
   4066   | RAM[24]  |  @Screen.drawRectangle
   4067   |          |  0;JMP
   4068   |ROM[4067] |  (Screen.drawRectangle$ret.38)
          |          |        // pop temp 0
   4068   |    0     |  @0
   4069   |          |  D=A
   4070   |    5     |  @5
   4071   |          |  D=D+A
   4072   | RAM[13]  |  @R13
   4073   |          |  M=D
   4074   |    0     |  @0
   4075   |          |  AM=M-1
   4076   |          |  D=M
   4077   | RAM[13]  |  @R13
   4078   |          |  A=M
   4079   |          |  M=D
          |          |        // push this 1
   4080   |    1     |  @1
   4081   |          |  D=A
   4082   |    3     |  @3
   4083   |          |  A=M
   4084   |          |  A=A+D
   4085   |          |  D=M
   4086   |    0     |  @0
   4087   |          |  A=M
   4088   |          |  M=D
   4089   |    0     |  @0
   4090   |          |  M=M+1
          |          |        // push constant 2
   4091   |    2     |  @2
   4092   |          |  D=A
   4093   |    0     |  @0
   4094   |          |  A=M
   4095   |          |  M=D
   4096   |    0     |  @0
   4097   |          |  M=M+1
          |          |        // add
   4098   |    0     |  @0
   4099   |          |  AM=M-1
   4100   |          |  D=M
   4101   |          |  A=A-1
   4102   |          |  M=M+D
          |          |        // pop this 1
   4103   |    1     |  @1
   4104   |          |  D=A
   4105   |    3     |  @3
   4106   |          |  D=D+M
   4107   | RAM[13]  |  @R13
   4108   |          |  M=D
   4109   |    0     |  @0
   4110   |          |  AM=M-1
   4111   |          |  D=M
   4112   | RAM[13]  |  @R13
   4113   |          |  A=M
   4114   |          |  M=D
          |          |        // push constant 1
   4115   |    1     |  @1
   4116   |          |  D=A
   4117   |    0     |  @0
   4118   |          |  A=M
   4119   |          |  M=D
   4120   |    0     |  @0
   4121   |          |  M=M+1
          |          |        // neg
   4122   |    0     |  @0
   4123   |          |  A=M-1
   4124   |          |  M=-M
          |          |        // call Screen.setColor 1
   4125   |RAM[4173] |  @Screen.setColor$ret.39
   4126   |          |  D=A
   4127   |    0     |  @0
   4128   |          |  A=M
   4129   |          |  M=D
   4130   |    0     |  @0
   4131   |          |  M=M+1
   4132   |    1     |  @1
   4133   |          |  D=M
   4134   |    0     |  @0
   4135   |          |  A=M
   4136   |          |  M=D
   4137   |    0     |  @0
   4138   |          |  M=M+1
   4139   |    2     |  @2
   4140   |          |  D=M
   4141   |    0     |  @0
   4142   |          |  A=M
   4143   |          |  M=D
   4144   |    0     |  @0
   4145   |          |  M=M+1
   4146   |    3     |  @3
   4147   |          |  D=M
   4148   |    0     |  @0
   4149   |          |  A=M
   4150   |          |  M=D
   4151   |    0     |  @0
   4152   |          |  M=M+1
   4153   |    4     |  @4
   4154   |          |  D=M
   4155   |    0     |  @0
   4156   |          |  A=M
   4157   |          |  M=D
   4158   |    0     |  @0
   4159   |          |  M=M+1
   4160   |    0     |  @0
   4161   |          |  D=M
   4162   |    2     |  @2
   4163   |          |  M=D
   4164   |    6     |  @6
   4165   |          |  D=A
   4166   |    2     |  @2
   4167   |          |  M=M-D
   4168   |    0     |  @0
   4169   |          |  D=M
   4170   |    1     |  @1
   4171   |          |  M=D
   4172   | RAM[23]  |  @Screen.setColor
   4173   |          |  0;JMP
   4174   |ROM[4173] |  (Screen.setColor$ret.39)
          |          |        // pop temp 0
   4174   |    0     |  @0
   4175   |          |  D=A
   4176   |    5     |  @5
   4177   |          |  D=D+A
   4178   | RAM[13]  |  @R13
   4179   |          |  M=D
   4180   |    0     |  @0
   4181   |          |  AM=M-1
   4182   |          |  D=M
   4183   | RAM[13]  |  @R13
   4184   |          |  A=M
   4185   |          |  M=D
          |          |        // push this 0
   4186   |    0     |  @0
   4187   |          |  D=A
   4188   |    3     |  @3
   4189   |          |  A=M
   4190   |          |  A=A+D
   4191   |          |  D=M
   4192   |    0     |  @0
   4193   |          |  A=M
   4194   |          |  M=D
   4195   |    0     |  @0
   4196   |          |  M=M+1
          |          |        // push this 1
   4197   |    1     |  @1
   4198   |          |  D=A
   4199   |    3     |  @3
   4200   |          |  A=M
   4201   |          |  A=A+D
   4202   |          |  D=M
   4203   |    0     |  @0
   4204   |          |  A=M
   4205   |          |  M=D
   4206   |    0     |  @0
   4207   |          |  M=M+1
          |          |        // push this 2
   4208   |    2     |  @2
   4209   |          |  D=A
   4210   |    3     |  @3
   4211   |          |  A=M
   4212   |          |  A=A+D
   4213   |          |  D=M
   4214   |    0     |  @0
   4215   |          |  A=M
   4216   |          |  M=D
   4217   |    0     |  @0
   4218   |          |  M=M+1
          |          |        // add
   4219   |    0     |  @0
   4220   |          |  AM=M-1
   4221   |          |  D=M
   4222   |          |  A=A-1
   4223   |          |  M=M+D
          |          |        // push constant 1
   4224   |    1     |  @1
   4225   |          |  D=A
   4226   |    0     |  @0
   4227   |          |  A=M
   4228   |          |  M=D
   4229   |    0     |  @0
   4230   |          |  M=M+1
          |          |        // sub
   4231   |    0     |  @0
   4232   |          |  AM=M-1
   4233   |          |  D=M
   4234   |          |  A=A-1
   4235   |          |  M=M-D
          |          |        // push this 0
   4236   |    0     |  @0
   4237   |          |  D=A
   4238   |    3     |  @3
   4239   |          |  A=M
   4240   |          |  A=A+D
   4241   |          |  D=M
   4242   |    0     |  @0
   4243   |          |  A=M
   4244   |          |  M=D
   4245   |    0     |  @0
   4246   |          |  M=M+1
          |          |        // push this 2
   4247   |    2     |  @2
   4248   |          |  D=A
   4249   |    3     |  @3
   4250   |          |  A=M
   4251   |          |  A=A+D
   4252   |          |  D=M
   4253   |    0     |  @0
   4254   |          |  A=M
   4255   |          |  M=D
   4256   |    0     |  @0
   4257   |          |  M=M+1
          |          |        // add
   4258   |    0     |  @0
   4259   |          |  AM=M-1
   4260   |          |  D=M
   4261   |          |  A=A-1
   4262   |          |  M=M+D
          |          |        // push this 1
   4263   |    1     |  @1
   4264   |          |  D=A
   4265   |    3     |  @3
   4266   |          |  A=M
   4267   |          |  A=A+D
   4268   |          |  D=M
   4269   |    0     |  @0
   4270   |          |  A=M
   4271   |          |  M=D
   4272   |    0     |  @0
   4273   |          |  M=M+1
          |          |        // push this 2
   4274   |    2     |  @2
   4275   |          |  D=A
   4276   |    3     |  @3
   4277   |          |  A=M
   4278   |          |  A=A+D
   4279   |          |  D=M
   4280   |    0     |  @0
   4281   |          |  A=M
   4282   |          |  M=D
   4283   |    0     |  @0
   4284   |          |  M=M+1
          |          |        // add
   4285   |    0     |  @0
   4286   |          |  AM=M-1
   4287   |          |  D=M
   4288   |          |  A=A-1
   4289   |          |  M=M+D
          |          |        // call Screen.drawRectangle 4
   4290   |RAM[4338] |  @Screen.drawRectangle$ret.40
   4291   |          |  D=A
   4292   |    0     |  @0
   4293   |          |  A=M
   4294   |          |  M=D
   4295   |    0     |  @0
   4296   |          |  M=M+1
   4297   |    1     |  @1
   4298   |          |  D=M
   4299   |    0     |  @0
   4300   |          |  A=M
   4301   |          |  M=D
   4302   |    0     |  @0
   4303   |          |  M=M+1
   4304   |    2     |  @2
   4305   |          |  D=M
   4306   |    0     |  @0
   4307   |          |  A=M
   4308   |          |  M=D
   4309   |    0     |  @0
   4310   |          |  M=M+1
   4311   |    3     |  @3
   4312   |          |  D=M
   4313   |    0     |  @0
   4314   |          |  A=M
   4315   |          |  M=D
   4316   |    0     |  @0
   4317   |          |  M=M+1
   4318   |    4     |  @4
   4319   |          |  D=M
   4320   |    0     |  @0
   4321   |          |  A=M
   4322   |          |  M=D
   4323   |    0     |  @0
   4324   |          |  M=M+1
   4325   |    0     |  @0
   4326   |          |  D=M
   4327   |    2     |  @2
   4328   |          |  M=D
   4329   |    9     |  @9
   4330   |          |  D=A
   4331   |    2     |  @2
   4332   |          |  M=M-D
   4333   |    0     |  @0
   4334   |          |  D=M
   4335   |    1     |  @1
   4336   |          |  M=D
   4337   | RAM[24]  |  @Screen.drawRectangle
   4338   |          |  0;JMP
   4339   |ROM[4338] |  (Screen.drawRectangle$ret.40)
          |          |        // pop temp 0
   4339   |    0     |  @0
   4340   |          |  D=A
   4341   |    5     |  @5
   4342   |          |  D=D+A
   4343   | RAM[13]  |  @R13
   4344   |          |  M=D
   4345   |    0     |  @0
   4346   |          |  AM=M-1
   4347   |          |  D=M
   4348   | RAM[13]  |  @R13
   4349   |          |  A=M
   4350   |          |  M=D
          |          |        // goto Square.moveDown_TRUE_0
   4351   |RAM[4352] |  @Square.moveDown_TRUE_0
   4352   |          |  0;JMP
          |          |        // label Square.moveDown_FALSE_0
   4353   |ROM[4352] |  (Square.moveDown_FALSE_0)
          |          |        // label Square.moveDown_TRUE_0
   4353   |ROM[4352] |  (Square.moveDown_TRUE_0)
          |          |        // push constant 0
   4353   |    0     |  @0
   4354   |          |  D=A
   4355   |    0     |  @0
   4356   |          |  A=M
   4357   |          |  M=D
   4358   |    0     |  @0
   4359   |          |  M=M+1
          |          |        // return
   4360   |    1     |  @1
   4361   |          |  D=M
   4362   |    13    |  @13
   4363   |          |  M=D
   4364   |    5     |  @5
   4365   |          |  D=A
   4366   |    13    |  @13
   4367   |          |  D=M-D
   4368   |          |  A=D
   4369   |          |  D=M
   4370   |    14    |  @14
   4371   |          |  M=D
   4372   |    0     |  @0
   4373   |          |  AM=M-1
   4374   |          |  D=M
   4375   |    2     |  @2
   4376   |          |  A=M
   4377   |          |  M=D
   4378   |    2     |  @2
   4379   |          |  D=M+1
   4380   |    0     |  @0
   4381   |          |  M=D
   4382   |    13    |  @13
   4383   |          |  M=M-1
   4384   |          |  A=M
   4385   |          |  D=M
   4386   |    4     |  @4
   4387   |          |  M=D
   4388   |    13    |  @13
   4389   |          |  M=M-1
   4390   |          |  A=M
   4391   |          |  D=M
   4392   |    3     |  @3
   4393   |          |  M=D
   4394   |    13    |  @13
   4395   |          |  M=M-1
   4396   |          |  A=M
   4397   |          |  D=M
   4398   |    2     |  @2
   4399   |          |  M=D
   4400   |    13    |  @13
   4401   |          |  M=M-1
   4402   |          |  A=M
   4403   |          |  D=M
   4404   |    1     |  @1
   4405   |          |  M=D
   4406   |    14    |  @14
   4407   |          |  A=M
   4408   |          |  0;JMP
          |          |        // /** Moves the square left by 2 pixels. */
          |          |        // function Square.moveLeft 0
   4409   |ROM[4408] |  (Square.moveLeft)
   4409   |    0     |  @0
   4410   |          |  D=M
   4411   |    1     |  @1
   4412   |          |  M=D
          |          |        // /*
          |          |        // ARG    Square this -> argument 0
          |          |        // */
          |          |        // push argument 0
   4413   |    0     |  @0
   4414   |          |  D=A
   4415   |    2     |  @2
   4416   |          |  A=M
   4417   |          |  A=A+D
   4418   |          |  D=M
   4419   |    0     |  @0
   4420   |          |  A=M
   4421   |          |  M=D
   4422   |    0     |  @0
   4423   |          |  M=M+1
          |          |        // pop pointer 0
   4424   |    0     |  @0
   4425   |          |  AM=M-1
   4426   |          |  D=M
   4427   |    3     |  @3
   4428   |          |  M=D
          |          |        // push this 0
   4429   |    0     |  @0
   4430   |          |  D=A
   4431   |    3     |  @3
   4432   |          |  A=M
   4433   |          |  A=A+D
   4434   |          |  D=M
   4435   |    0     |  @0
   4436   |          |  A=M
   4437   |          |  M=D
   4438   |    0     |  @0
   4439   |          |  M=M+1
          |          |        // push constant 1
   4440   |    1     |  @1
   4441   |          |  D=A
   4442   |    0     |  @0
   4443   |          |  A=M
   4444   |          |  M=D
   4445   |    0     |  @0
   4446   |          |  M=M+1
          |          |        // gt
   4447   |    0     |  @0
   4448   |          |  AM=M-1
   4449   |          |  D=M
   4450   |          |  A=A-1
   4451   |          |  D=M-D
   4452   |          |  M=-1
   4453   |RAM[4457] |  @T5
   4454   |          |  D;JGT
   4455   |    0     |  @0
   4456   |          |  A=M-1
   4457   |          |  M=0
   4458   |ROM[4457] |  (T5)
          |          |        // not
   4458   |    0     |  @0
   4459   |          |  A=M-1
   4460   |          |  M=!M
          |          |        // if-goto Square.moveLeft_FALSE_0
   4461   |    0     |  @0
   4462   |          |  AM=M-1
   4463   |          |  D=M
   4464   |RAM[4939] |  @Square.moveLeft_FALSE_0
   4465   |          |  D;JNE
          |          |        // push constant 0
   4466   |    0     |  @0
   4467   |          |  D=A
   4468   |    0     |  @0
   4469   |          |  A=M
   4470   |          |  M=D
   4471   |    0     |  @0
   4472   |          |  M=M+1
          |          |        // call Screen.setColor 1
   4473   |RAM[4521] |  @Screen.setColor$ret.41
   4474   |          |  D=A
   4475   |    0     |  @0
   4476   |          |  A=M
   4477   |          |  M=D
   4478   |    0     |  @0
   4479   |          |  M=M+1
   4480   |    1     |  @1
   4481   |          |  D=M
   4482   |    0     |  @0
   4483   |          |  A=M
   4484   |          |  M=D
   4485   |    0     |  @0
   4486   |          |  M=M+1
   4487   |    2     |  @2
   4488   |          |  D=M
   4489   |    0     |  @0
   4490   |          |  A=M
   4491   |          |  M=D
   4492   |    0     |  @0
   4493   |          |  M=M+1
   4494   |    3     |  @3
   4495   |          |  D=M
   4496   |    0     |  @0
   4497   |          |  A=M
   4498   |          |  M=D
   4499   |    0     |  @0
   4500   |          |  M=M+1
   4501   |    4     |  @4
   4502   |          |  D=M
   4503   |    0     |  @0
   4504   |          |  A=M
   4505   |          |  M=D
   4506   |    0     |  @0
   4507   |          |  M=M+1
   4508   |    0     |  @0
   4509   |          |  D=M
   4510   |    2     |  @2
   4511   |          |  M=D
   4512   |    6     |  @6
   4513   |          |  D=A
   4514   |    2     |  @2
   4515   |          |  M=M-D
   4516   |    0     |  @0
   4517   |          |  D=M
   4518   |    1     |  @1
   4519   |          |  M=D
   4520   | RAM[23]  |  @Screen.setColor
   4521   |          |  0;JMP
   4522   |ROM[4521] |  (Screen.setColor$ret.41)
          |          |        // pop temp 0
   4522   |    0     |  @0
   4523   |          |  D=A
   4524   |    5     |  @5
   4525   |          |  D=D+A
   4526   | RAM[13]  |  @R13
   4527   |          |  M=D
   4528   |    0     |  @0
   4529   |          |  AM=M-1
   4530   |          |  D=M
   4531   | RAM[13]  |  @R13
   4532   |          |  A=M
   4533   |          |  M=D
          |          |        // push this 0
   4534   |    0     |  @0
   4535   |          |  D=A
   4536   |    3     |  @3
   4537   |          |  A=M
   4538   |          |  A=A+D
   4539   |          |  D=M
   4540   |    0     |  @0
   4541   |          |  A=M
   4542   |          |  M=D
   4543   |    0     |  @0
   4544   |          |  M=M+1
          |          |        // push this 2
   4545   |    2     |  @2
   4546   |          |  D=A
   4547   |    3     |  @3
   4548   |          |  A=M
   4549   |          |  A=A+D
   4550   |          |  D=M
   4551   |    0     |  @0
   4552   |          |  A=M
   4553   |          |  M=D
   4554   |    0     |  @0
   4555   |          |  M=M+1
          |          |        // add
   4556   |    0     |  @0
   4557   |          |  AM=M-1
   4558   |          |  D=M
   4559   |          |  A=A-1
   4560   |          |  M=M+D
          |          |        // push constant 1
   4561   |    1     |  @1
   4562   |          |  D=A
   4563   |    0     |  @0
   4564   |          |  A=M
   4565   |          |  M=D
   4566   |    0     |  @0
   4567   |          |  M=M+1
          |          |        // sub
   4568   |    0     |  @0
   4569   |          |  AM=M-1
   4570   |          |  D=M
   4571   |          |  A=A-1
   4572   |          |  M=M-D
          |          |        // push this 1
   4573   |    1     |  @1
   4574   |          |  D=A
   4575   |    3     |  @3
   4576   |          |  A=M
   4577   |          |  A=A+D
   4578   |          |  D=M
   4579   |    0     |  @0
   4580   |          |  A=M
   4581   |          |  M=D
   4582   |    0     |  @0
   4583   |          |  M=M+1
          |          |        // push this 0
   4584   |    0     |  @0
   4585   |          |  D=A
   4586   |    3     |  @3
   4587   |          |  A=M
   4588   |          |  A=A+D
   4589   |          |  D=M
   4590   |    0     |  @0
   4591   |          |  A=M
   4592   |          |  M=D
   4593   |    0     |  @0
   4594   |          |  M=M+1
          |          |        // push this 2
   4595   |    2     |  @2
   4596   |          |  D=A
   4597   |    3     |  @3
   4598   |          |  A=M
   4599   |          |  A=A+D
   4600   |          |  D=M
   4601   |    0     |  @0
   4602   |          |  A=M
   4603   |          |  M=D
   4604   |    0     |  @0
   4605   |          |  M=M+1
          |          |        // add
   4606   |    0     |  @0
   4607   |          |  AM=M-1
   4608   |          |  D=M
   4609   |          |  A=A-1
   4610   |          |  M=M+D
          |          |        // push this 1
   4611   |    1     |  @1
   4612   |          |  D=A
   4613   |    3     |  @3
   4614   |          |  A=M
   4615   |          |  A=A+D
   4616   |          |  D=M
   4617   |    0     |  @0
   4618   |          |  A=M
   4619   |          |  M=D
   4620   |    0     |  @0
   4621   |          |  M=M+1
          |          |        // push this 2
   4622   |    2     |  @2
   4623   |          |  D=A
   4624   |    3     |  @3
   4625   |          |  A=M
   4626   |          |  A=A+D
   4627   |          |  D=M
   4628   |    0     |  @0
   4629   |          |  A=M
   4630   |          |  M=D
   4631   |    0     |  @0
   4632   |          |  M=M+1
          |          |        // add
   4633   |    0     |  @0
   4634   |          |  AM=M-1
   4635   |          |  D=M
   4636   |          |  A=A-1
   4637   |          |  M=M+D
          |          |        // call Screen.drawRectangle 4
   4638   |RAM[4686] |  @Screen.drawRectangle$ret.42
   4639   |          |  D=A
   4640   |    0     |  @0
   4641   |          |  A=M
   4642   |          |  M=D
   4643   |    0     |  @0
   4644   |          |  M=M+1
   4645   |    1     |  @1
   4646   |          |  D=M
   4647   |    0     |  @0
   4648   |          |  A=M
   4649   |          |  M=D
   4650   |    0     |  @0
   4651   |          |  M=M+1
   4652   |    2     |  @2
   4653   |          |  D=M
   4654   |    0     |  @0
   4655   |          |  A=M
   4656   |          |  M=D
   4657   |    0     |  @0
   4658   |          |  M=M+1
   4659   |    3     |  @3
   4660   |          |  D=M
   4661   |    0     |  @0
   4662   |          |  A=M
   4663   |          |  M=D
   4664   |    0     |  @0
   4665   |          |  M=M+1
   4666   |    4     |  @4
   4667   |          |  D=M
   4668   |    0     |  @0
   4669   |          |  A=M
   4670   |          |  M=D
   4671   |    0     |  @0
   4672   |          |  M=M+1
   4673   |    0     |  @0
   4674   |          |  D=M
   4675   |    2     |  @2
   4676   |          |  M=D
   4677   |    9     |  @9
   4678   |          |  D=A
   4679   |    2     |  @2
   4680   |          |  M=M-D
   4681   |    0     |  @0
   4682   |          |  D=M
   4683   |    1     |  @1
   4684   |          |  M=D
   4685   | RAM[24]  |  @Screen.drawRectangle
   4686   |          |  0;JMP
   4687   |ROM[4686] |  (Screen.drawRectangle$ret.42)
          |          |        // pop temp 0
   4687   |    0     |  @0
   4688   |          |  D=A
   4689   |    5     |  @5
   4690   |          |  D=D+A
   4691   | RAM[13]  |  @R13
   4692   |          |  M=D
   4693   |    0     |  @0
   4694   |          |  AM=M-1
   4695   |          |  D=M
   4696   | RAM[13]  |  @R13
   4697   |          |  A=M
   4698   |          |  M=D
          |          |        // push this 0
   4699   |    0     |  @0
   4700   |          |  D=A
   4701   |    3     |  @3
   4702   |          |  A=M
   4703   |          |  A=A+D
   4704   |          |  D=M
   4705   |    0     |  @0
   4706   |          |  A=M
   4707   |          |  M=D
   4708   |    0     |  @0
   4709   |          |  M=M+1
          |          |        // push constant 2
   4710   |    2     |  @2
   4711   |          |  D=A
   4712   |    0     |  @0
   4713   |          |  A=M
   4714   |          |  M=D
   4715   |    0     |  @0
   4716   |          |  M=M+1
          |          |        // sub
   4717   |    0     |  @0
   4718   |          |  AM=M-1
   4719   |          |  D=M
   4720   |          |  A=A-1
   4721   |          |  M=M-D
          |          |        // pop this 0
   4722   |    0     |  @0
   4723   |          |  D=A
   4724   |    3     |  @3
   4725   |          |  D=D+M
   4726   | RAM[13]  |  @R13
   4727   |          |  M=D
   4728   |    0     |  @0
   4729   |          |  AM=M-1
   4730   |          |  D=M
   4731   | RAM[13]  |  @R13
   4732   |          |  A=M
   4733   |          |  M=D
          |          |        // push constant 1
   4734   |    1     |  @1
   4735   |          |  D=A
   4736   |    0     |  @0
   4737   |          |  A=M
   4738   |          |  M=D
   4739   |    0     |  @0
   4740   |          |  M=M+1
          |          |        // neg
   4741   |    0     |  @0
   4742   |          |  A=M-1
   4743   |          |  M=-M
          |          |        // call Screen.setColor 1
   4744   |RAM[4792] |  @Screen.setColor$ret.43
   4745   |          |  D=A
   4746   |    0     |  @0
   4747   |          |  A=M
   4748   |          |  M=D
   4749   |    0     |  @0
   4750   |          |  M=M+1
   4751   |    1     |  @1
   4752   |          |  D=M
   4753   |    0     |  @0
   4754   |          |  A=M
   4755   |          |  M=D
   4756   |    0     |  @0
   4757   |          |  M=M+1
   4758   |    2     |  @2
   4759   |          |  D=M
   4760   |    0     |  @0
   4761   |          |  A=M
   4762   |          |  M=D
   4763   |    0     |  @0
   4764   |          |  M=M+1
   4765   |    3     |  @3
   4766   |          |  D=M
   4767   |    0     |  @0
   4768   |          |  A=M
   4769   |          |  M=D
   4770   |    0     |  @0
   4771   |          |  M=M+1
   4772   |    4     |  @4
   4773   |          |  D=M
   4774   |    0     |  @0
   4775   |          |  A=M
   4776   |          |  M=D
   4777   |    0     |  @0
   4778   |          |  M=M+1
   4779   |    0     |  @0
   4780   |          |  D=M
   4781   |    2     |  @2
   4782   |          |  M=D
   4783   |    6     |  @6
   4784   |          |  D=A
   4785   |    2     |  @2
   4786   |          |  M=M-D
   4787   |    0     |  @0
   4788   |          |  D=M
   4789   |    1     |  @1
   4790   |          |  M=D
   4791   | RAM[23]  |  @Screen.setColor
   4792   |          |  0;JMP
   4793   |ROM[4792] |  (Screen.setColor$ret.43)
          |          |        // pop temp 0
   4793   |    0     |  @0
   4794   |          |  D=A
   4795   |    5     |  @5
   4796   |          |  D=D+A
   4797   | RAM[13]  |  @R13
   4798   |          |  M=D
   4799   |    0     |  @0
   4800   |          |  AM=M-1
   4801   |          |  D=M
   4802   | RAM[13]  |  @R13
   4803   |          |  A=M
   4804   |          |  M=D
          |          |        // push this 0
   4805   |    0     |  @0
   4806   |          |  D=A
   4807   |    3     |  @3
   4808   |          |  A=M
   4809   |          |  A=A+D
   4810   |          |  D=M
   4811   |    0     |  @0
   4812   |          |  A=M
   4813   |          |  M=D
   4814   |    0     |  @0
   4815   |          |  M=M+1
          |          |        // push this 1
   4816   |    1     |  @1
   4817   |          |  D=A
   4818   |    3     |  @3
   4819   |          |  A=M
   4820   |          |  A=A+D
   4821   |          |  D=M
   4822   |    0     |  @0
   4823   |          |  A=M
   4824   |          |  M=D
   4825   |    0     |  @0
   4826   |          |  M=M+1
          |          |        // push this 0
   4827   |    0     |  @0
   4828   |          |  D=A
   4829   |    3     |  @3
   4830   |          |  A=M
   4831   |          |  A=A+D
   4832   |          |  D=M
   4833   |    0     |  @0
   4834   |          |  A=M
   4835   |          |  M=D
   4836   |    0     |  @0
   4837   |          |  M=M+1
          |          |        // push constant 1
   4838   |    1     |  @1
   4839   |          |  D=A
   4840   |    0     |  @0
   4841   |          |  A=M
   4842   |          |  M=D
   4843   |    0     |  @0
   4844   |          |  M=M+1
          |          |        // add
   4845   |    0     |  @0
   4846   |          |  AM=M-1
   4847   |          |  D=M
   4848   |          |  A=A-1
   4849   |          |  M=M+D
          |          |        // push this 1
   4850   |    1     |  @1
   4851   |          |  D=A
   4852   |    3     |  @3
   4853   |          |  A=M
   4854   |          |  A=A+D
   4855   |          |  D=M
   4856   |    0     |  @0
   4857   |          |  A=M
   4858   |          |  M=D
   4859   |    0     |  @0
   4860   |          |  M=M+1
          |          |        // push this 2
   4861   |    2     |  @2
   4862   |          |  D=A
   4863   |    3     |  @3
   4864   |          |  A=M
   4865   |          |  A=A+D
   4866   |          |  D=M
   4867   |    0     |  @0
   4868   |          |  A=M
   4869   |          |  M=D
   4870   |    0     |  @0
   4871   |          |  M=M+1
          |          |        // add
   4872   |    0     |  @0
   4873   |          |  AM=M-1
   4874   |          |  D=M
   4875   |          |  A=A-1
   4876   |          |  M=M+D
          |          |        // call Screen.drawRectangle 4
   4877   |RAM[4925] |  @Screen.drawRectangle$ret.44
   4878   |          |  D=A
   4879   |    0     |  @0
   4880   |          |  A=M
   4881   |          |  M=D
   4882   |    0     |  @0
   4883   |          |  M=M+1
   4884   |    1     |  @1
   4885   |          |  D=M
   4886   |    0     |  @0
   4887   |          |  A=M
   4888   |          |  M=D
   4889   |    0     |  @0
   4890   |          |  M=M+1
   4891   |    2     |  @2
   4892   |          |  D=M
   4893   |    0     |  @0
   4894   |          |  A=M
   4895   |          |  M=D
   4896   |    0     |  @0
   4897   |          |  M=M+1
   4898   |    3     |  @3
   4899   |          |  D=M
   4900   |    0     |  @0
   4901   |          |  A=M
   4902   |          |  M=D
   4903   |    0     |  @0
   4904   |          |  M=M+1
   4905   |    4     |  @4
   4906   |          |  D=M
   4907   |    0     |  @0
   4908   |          |  A=M
   4909   |          |  M=D
   4910   |    0     |  @0
   4911   |          |  M=M+1
   4912   |    0     |  @0
   4913   |          |  D=M
   4914   |    2     |  @2
   4915   |          |  M=D
   4916   |    9     |  @9
   4917   |          |  D=A
   4918   |    2     |  @2
   4919   |          |  M=M-D
   4920   |    0     |  @0
   4921   |          |  D=M
   4922   |    1     |  @1
   4923   |          |  M=D
   4924   | RAM[24]  |  @Screen.drawRectangle
   4925   |          |  0;JMP
   4926   |ROM[4925] |  (Screen.drawRectangle$ret.44)
          |          |        // pop temp 0
   4926   |    0     |  @0
   4927   |          |  D=A
   4928   |    5     |  @5
   4929   |          |  D=D+A
   4930   | RAM[13]  |  @R13
   4931   |          |  M=D
   4932   |    0     |  @0
   4933   |          |  AM=M-1
   4934   |          |  D=M
   4935   | RAM[13]  |  @R13
   4936   |          |  A=M
   4937   |          |  M=D
          |          |        // goto Square.moveLeft_TRUE_0
   4938   |RAM[4939] |  @Square.moveLeft_TRUE_0
   4939   |          |  0;JMP
          |          |        // label Square.moveLeft_FALSE_0
   4940   |ROM[4939] |  (Square.moveLeft_FALSE_0)
          |          |        // label Square.moveLeft_TRUE_0
   4940   |ROM[4939] |  (Square.moveLeft_TRUE_0)
          |          |        // push constant 0
   4940   |    0     |  @0
   4941   |          |  D=A
   4942   |    0     |  @0
   4943   |          |  A=M
   4944   |          |  M=D
   4945   |    0     |  @0
   4946   |          |  M=M+1
          |          |        // return
   4947   |    1     |  @1
   4948   |          |  D=M
   4949   |    13    |  @13
   4950   |          |  M=D
   4951   |    5     |  @5
   4952   |          |  D=A
   4953   |    13    |  @13
   4954   |          |  D=M-D
   4955   |          |  A=D
   4956   |          |  D=M
   4957   |    14    |  @14
   4958   |          |  M=D
   4959   |    0     |  @0
   4960   |          |  AM=M-1
   4961   |          |  D=M
   4962   |    2     |  @2
   4963   |          |  A=M
   4964   |          |  M=D
   4965   |    2     |  @2
   4966   |          |  D=M+1
   4967   |    0     |  @0
   4968   |          |  M=D
   4969   |    13    |  @13
   4970   |          |  M=M-1
   4971   |          |  A=M
   4972   |          |  D=M
   4973   |    4     |  @4
   4974   |          |  M=D
   4975   |    13    |  @13
   4976   |          |  M=M-1
   4977   |          |  A=M
   4978   |          |  D=M
   4979   |    3     |  @3
   4980   |          |  M=D
   4981   |    13    |  @13
   4982   |          |  M=M-1
   4983   |          |  A=M
   4984   |          |  D=M
   4985   |    2     |  @2
   4986   |          |  M=D
   4987   |    13    |  @13
   4988   |          |  M=M-1
   4989   |          |  A=M
   4990   |          |  D=M
   4991   |    1     |  @1
   4992   |          |  M=D
   4993   |    14    |  @14
   4994   |          |  A=M
   4995   |          |  0;JMP
          |          |        // /** Moves the square right by 2 pixels. */
          |          |        // function Square.moveRight 0
   4996   |ROM[4995] |  (Square.moveRight)
   4996   |    0     |  @0
   4997   |          |  D=M
   4998   |    1     |  @1
   4999   |          |  M=D
          |          |        // /*
          |          |        // ARG    Square this -> argument 0
          |          |        // */
          |          |        // push argument 0
   5000   |    0     |  @0
   5001   |          |  D=A
   5002   |    2     |  @2
   5003   |          |  A=M
   5004   |          |  A=A+D
   5005   |          |  D=M
   5006   |    0     |  @0
   5007   |          |  A=M
   5008   |          |  M=D
   5009   |    0     |  @0
   5010   |          |  M=M+1
          |          |        // pop pointer 0
   5011   |    0     |  @0
   5012   |          |  AM=M-1
   5013   |          |  D=M
   5014   |    3     |  @3
   5015   |          |  M=D
          |          |        // push this 0
   5016   |    0     |  @0
   5017   |          |  D=A
   5018   |    3     |  @3
   5019   |          |  A=M
   5020   |          |  A=A+D
   5021   |          |  D=M
   5022   |    0     |  @0
   5023   |          |  A=M
   5024   |          |  M=D
   5025   |    0     |  @0
   5026   |          |  M=M+1
          |          |        // push this 2
   5027   |    2     |  @2
   5028   |          |  D=A
   5029   |    3     |  @3
   5030   |          |  A=M
   5031   |          |  A=A+D
   5032   |          |  D=M
   5033   |    0     |  @0
   5034   |          |  A=M
   5035   |          |  M=D
   5036   |    0     |  @0
   5037   |          |  M=M+1
          |          |        // add
   5038   |    0     |  @0
   5039   |          |  AM=M-1
   5040   |          |  D=M
   5041   |          |  A=A-1
   5042   |          |  M=M+D
          |          |        // push constant 510
   5043   |   510    |  @510
   5044   |          |  D=A
   5045   |    0     |  @0
   5046   |          |  A=M
   5047   |          |  M=D
   5048   |    0     |  @0
   5049   |          |  M=M+1
          |          |        // lt
   5050   |    0     |  @0
   5051   |          |  AM=M-1
   5052   |          |  D=M
   5053   |          |  A=A-1
   5054   |          |  D=M-D
   5055   |          |  M=-1
   5056   |RAM[5060] |  @T6
   5057   |          |  D;JLT
   5058   |    0     |  @0
   5059   |          |  A=M-1
   5060   |          |  M=0
   5061   |ROM[5060] |  (T6)
          |          |        // not
   5061   |    0     |  @0
   5062   |          |  A=M-1
   5063   |          |  M=!M
          |          |        // if-goto Square.moveRight_FALSE_0
   5064   |    0     |  @0
   5065   |          |  AM=M-1
   5066   |          |  D=M
   5067   |RAM[5542] |  @Square.moveRight_FALSE_0
   5068   |          |  D;JNE
          |          |        // push constant 0
   5069   |    0     |  @0
   5070   |          |  D=A
   5071   |    0     |  @0
   5072   |          |  A=M
   5073   |          |  M=D
   5074   |    0     |  @0
   5075   |          |  M=M+1
          |          |        // call Screen.setColor 1
   5076   |RAM[5124] |  @Screen.setColor$ret.45
   5077   |          |  D=A
   5078   |    0     |  @0
   5079   |          |  A=M
   5080   |          |  M=D
   5081   |    0     |  @0
   5082   |          |  M=M+1
   5083   |    1     |  @1
   5084   |          |  D=M
   5085   |    0     |  @0
   5086   |          |  A=M
   5087   |          |  M=D
   5088   |    0     |  @0
   5089   |          |  M=M+1
   5090   |    2     |  @2
   5091   |          |  D=M
   5092   |    0     |  @0
   5093   |          |  A=M
   5094   |          |  M=D
   5095   |    0     |  @0
   5096   |          |  M=M+1
   5097   |    3     |  @3
   5098   |          |  D=M
   5099   |    0     |  @0
   5100   |          |  A=M
   5101   |          |  M=D
   5102   |    0     |  @0
   5103   |          |  M=M+1
   5104   |    4     |  @4
   5105   |          |  D=M
   5106   |    0     |  @0
   5107   |          |  A=M
   5108   |          |  M=D
   5109   |    0     |  @0
   5110   |          |  M=M+1
   5111   |    0     |  @0
   5112   |          |  D=M
   5113   |    2     |  @2
   5114   |          |  M=D
   5115   |    6     |  @6
   5116   |          |  D=A
   5117   |    2     |  @2
   5118   |          |  M=M-D
   5119   |    0     |  @0
   5120   |          |  D=M
   5121   |    1     |  @1
   5122   |          |  M=D
   5123   | RAM[23]  |  @Screen.setColor
   5124   |          |  0;JMP
   5125   |ROM[5124] |  (Screen.setColor$ret.45)
          |          |        // pop temp 0
   5125   |    0     |  @0
   5126   |          |  D=A
   5127   |    5     |  @5
   5128   |          |  D=D+A
   5129   | RAM[13]  |  @R13
   5130   |          |  M=D
   5131   |    0     |  @0
   5132   |          |  AM=M-1
   5133   |          |  D=M
   5134   | RAM[13]  |  @R13
   5135   |          |  A=M
   5136   |          |  M=D
          |          |        // push this 0
   5137   |    0     |  @0
   5138   |          |  D=A
   5139   |    3     |  @3
   5140   |          |  A=M
   5141   |          |  A=A+D
   5142   |          |  D=M
   5143   |    0     |  @0
   5144   |          |  A=M
   5145   |          |  M=D
   5146   |    0     |  @0
   5147   |          |  M=M+1
          |          |        // push this 1
   5148   |    1     |  @1
   5149   |          |  D=A
   5150   |    3     |  @3
   5151   |          |  A=M
   5152   |          |  A=A+D
   5153   |          |  D=M
   5154   |    0     |  @0
   5155   |          |  A=M
   5156   |          |  M=D
   5157   |    0     |  @0
   5158   |          |  M=M+1
          |          |        // push this 0
   5159   |    0     |  @0
   5160   |          |  D=A
   5161   |    3     |  @3
   5162   |          |  A=M
   5163   |          |  A=A+D
   5164   |          |  D=M
   5165   |    0     |  @0
   5166   |          |  A=M
   5167   |          |  M=D
   5168   |    0     |  @0
   5169   |          |  M=M+1
          |          |        // push constant 1
   5170   |    1     |  @1
   5171   |          |  D=A
   5172   |    0     |  @0
   5173   |          |  A=M
   5174   |          |  M=D
   5175   |    0     |  @0
   5176   |          |  M=M+1
          |          |        // add
   5177   |    0     |  @0
   5178   |          |  AM=M-1
   5179   |          |  D=M
   5180   |          |  A=A-1
   5181   |          |  M=M+D
          |          |        // push this 1
   5182   |    1     |  @1
   5183   |          |  D=A
   5184   |    3     |  @3
   5185   |          |  A=M
   5186   |          |  A=A+D
   5187   |          |  D=M
   5188   |    0     |  @0
   5189   |          |  A=M
   5190   |          |  M=D
   5191   |    0     |  @0
   5192   |          |  M=M+1
          |          |        // push this 2
   5193   |    2     |  @2
   5194   |          |  D=A
   5195   |    3     |  @3
   5196   |          |  A=M
   5197   |          |  A=A+D
   5198   |          |  D=M
   5199   |    0     |  @0
   5200   |          |  A=M
   5201   |          |  M=D
   5202   |    0     |  @0
   5203   |          |  M=M+1
          |          |        // add
   5204   |    0     |  @0
   5205   |          |  AM=M-1
   5206   |          |  D=M
   5207   |          |  A=A-1
   5208   |          |  M=M+D
          |          |        // call Screen.drawRectangle 4
   5209   |RAM[5257] |  @Screen.drawRectangle$ret.46
   5210   |          |  D=A
   5211   |    0     |  @0
   5212   |          |  A=M
   5213   |          |  M=D
   5214   |    0     |  @0
   5215   |          |  M=M+1
   5216   |    1     |  @1
   5217   |          |  D=M
   5218   |    0     |  @0
   5219   |          |  A=M
   5220   |          |  M=D
   5221   |    0     |  @0
   5222   |          |  M=M+1
   5223   |    2     |  @2
   5224   |          |  D=M
   5225   |    0     |  @0
   5226   |          |  A=M
   5227   |          |  M=D
   5228   |    0     |  @0
   5229   |          |  M=M+1
   5230   |    3     |  @3
   5231   |          |  D=M
   5232   |    0     |  @0
   5233   |          |  A=M
   5234   |          |  M=D
   5235   |    0     |  @0
   5236   |          |  M=M+1
   5237   |    4     |  @4
   5238   |          |  D=M
   5239   |    0     |  @0
   5240   |          |  A=M
   5241   |          |  M=D
   5242   |    0     |  @0
   5243   |          |  M=M+1
   5244   |    0     |  @0
   5245   |          |  D=M
   5246   |    2     |  @2
   5247   |          |  M=D
   5248   |    9     |  @9
   5249   |          |  D=A
   5250   |    2     |  @2
   5251   |          |  M=M-D
   5252   |    0     |  @0
   5253   |          |  D=M
   5254   |    1     |  @1
   5255   |          |  M=D
   5256   | RAM[24]  |  @Screen.drawRectangle
   5257   |          |  0;JMP
   5258   |ROM[5257] |  (Screen.drawRectangle$ret.46)
          |          |        // pop temp 0
   5258   |    0     |  @0
   5259   |          |  D=A
   5260   |    5     |  @5
   5261   |          |  D=D+A
   5262   | RAM[13]  |  @R13
   5263   |          |  M=D
   5264   |    0     |  @0
   5265   |          |  AM=M-1
   5266   |          |  D=M
   5267   | RAM[13]  |  @R13
   5268   |          |  A=M
   5269   |          |  M=D
          |          |        // push this 0
   5270   |    0     |  @0
   5271   |          |  D=A
   5272   |    3     |  @3
   5273   |          |  A=M
   5274   |          |  A=A+D
   5275   |          |  D=M
   5276   |    0     |  @0
   5277   |          |  A=M
   5278   |          |  M=D
   5279   |    0     |  @0
   5280   |          |  M=M+1
          |          |        // push constant 2
   5281   |    2     |  @2
   5282   |          |  D=A
   5283   |    0     |  @0
   5284   |          |  A=M
   5285   |          |  M=D
   5286   |    0     |  @0
   5287   |          |  M=M+1
          |          |        // add
   5288   |    0     |  @0
   5289   |          |  AM=M-1
   5290   |          |  D=M
   5291   |          |  A=A-1
   5292   |          |  M=M+D
          |          |        // pop this 0
   5293   |    0     |  @0
   5294   |          |  D=A
   5295   |    3     |  @3
   5296   |          |  D=D+M
   5297   | RAM[13]  |  @R13
   5298   |          |  M=D
   5299   |    0     |  @0
   5300   |          |  AM=M-1
   5301   |          |  D=M
   5302   | RAM[13]  |  @R13
   5303   |          |  A=M
   5304   |          |  M=D
          |          |        // push constant 1
   5305   |    1     |  @1
   5306   |          |  D=A
   5307   |    0     |  @0
   5308   |          |  A=M
   5309   |          |  M=D
   5310   |    0     |  @0
   5311   |          |  M=M+1
          |          |        // neg
   5312   |    0     |  @0
   5313   |          |  A=M-1
   5314   |          |  M=-M
          |          |        // call Screen.setColor 1
   5315   |RAM[5363] |  @Screen.setColor$ret.47
   5316   |          |  D=A
   5317   |    0     |  @0
   5318   |          |  A=M
   5319   |          |  M=D
   5320   |    0     |  @0
   5321   |          |  M=M+1
   5322   |    1     |  @1
   5323   |          |  D=M
   5324   |    0     |  @0
   5325   |          |  A=M
   5326   |          |  M=D
   5327   |    0     |  @0
   5328   |          |  M=M+1
   5329   |    2     |  @2
   5330   |          |  D=M
   5331   |    0     |  @0
   5332   |          |  A=M
   5333   |          |  M=D
   5334   |    0     |  @0
   5335   |          |  M=M+1
   5336   |    3     |  @3
   5337   |          |  D=M
   5338   |    0     |  @0
   5339   |          |  A=M
   5340   |          |  M=D
   5341   |    0     |  @0
   5342   |          |  M=M+1
   5343   |    4     |  @4
   5344   |          |  D=M
   5345   |    0     |  @0
   5346   |          |  A=M
   5347   |          |  M=D
   5348   |    0     |  @0
   5349   |          |  M=M+1
   5350   |    0     |  @0
   5351   |          |  D=M
   5352   |    2     |  @2
   5353   |          |  M=D
   5354   |    6     |  @6
   5355   |          |  D=A
   5356   |    2     |  @2
   5357   |          |  M=M-D
   5358   |    0     |  @0
   5359   |          |  D=M
   5360   |    1     |  @1
   5361   |          |  M=D
   5362   | RAM[23]  |  @Screen.setColor
   5363   |          |  0;JMP
   5364   |ROM[5363] |  (Screen.setColor$ret.47)
          |          |        // pop temp 0
   5364   |    0     |  @0
   5365   |          |  D=A
   5366   |    5     |  @5
   5367   |          |  D=D+A
   5368   | RAM[13]  |  @R13
   5369   |          |  M=D
   5370   |    0     |  @0
   5371   |          |  AM=M-1
   5372   |          |  D=M
   5373   | RAM[13]  |  @R13
   5374   |          |  A=M
   5375   |          |  M=D
          |          |        // push this 0
   5376   |    0     |  @0
   5377   |          |  D=A
   5378   |    3     |  @3
   5379   |          |  A=M
   5380   |          |  A=A+D
   5381   |          |  D=M
   5382   |    0     |  @0
   5383   |          |  A=M
   5384   |          |  M=D
   5385   |    0     |  @0
   5386   |          |  M=M+1
          |          |        // push this 2
   5387   |    2     |  @2
   5388   |          |  D=A
   5389   |    3     |  @3
   5390   |          |  A=M
   5391   |          |  A=A+D
   5392   |          |  D=M
   5393   |    0     |  @0
   5394   |          |  A=M
   5395   |          |  M=D
   5396   |    0     |  @0
   5397   |          |  M=M+1
          |          |        // add
   5398   |    0     |  @0
   5399   |          |  AM=M-1
   5400   |          |  D=M
   5401   |          |  A=A-1
   5402   |          |  M=M+D
          |          |        // push constant 1
   5403   |    1     |  @1
   5404   |          |  D=A
   5405   |    0     |  @0
   5406   |          |  A=M
   5407   |          |  M=D
   5408   |    0     |  @0
   5409   |          |  M=M+1
          |          |        // sub
   5410   |    0     |  @0
   5411   |          |  AM=M-1
   5412   |          |  D=M
   5413   |          |  A=A-1
   5414   |          |  M=M-D
          |          |        // push this 1
   5415   |    1     |  @1
   5416   |          |  D=A
   5417   |    3     |  @3
   5418   |          |  A=M
   5419   |          |  A=A+D
   5420   |          |  D=M
   5421   |    0     |  @0
   5422   |          |  A=M
   5423   |          |  M=D
   5424   |    0     |  @0
   5425   |          |  M=M+1
          |          |        // push this 0
   5426   |    0     |  @0
   5427   |          |  D=A
   5428   |    3     |  @3
   5429   |          |  A=M
   5430   |          |  A=A+D
   5431   |          |  D=M
   5432   |    0     |  @0
   5433   |          |  A=M
   5434   |          |  M=D
   5435   |    0     |  @0
   5436   |          |  M=M+1
          |          |        // push this 2
   5437   |    2     |  @2
   5438   |          |  D=A
   5439   |    3     |  @3
   5440   |          |  A=M
   5441   |          |  A=A+D
   5442   |          |  D=M
   5443   |    0     |  @0
   5444   |          |  A=M
   5445   |          |  M=D
   5446   |    0     |  @0
   5447   |          |  M=M+1
          |          |        // add
   5448   |    0     |  @0
   5449   |          |  AM=M-1
   5450   |          |  D=M
   5451   |          |  A=A-1
   5452   |          |  M=M+D
          |          |        // push this 1
   5453   |    1     |  @1
   5454   |          |  D=A
   5455   |    3     |  @3
   5456   |          |  A=M
   5457   |          |  A=A+D
   5458   |          |  D=M
   5459   |    0     |  @0
   5460   |          |  A=M
   5461   |          |  M=D
   5462   |    0     |  @0
   5463   |          |  M=M+1
          |          |        // push this 2
   5464   |    2     |  @2
   5465   |          |  D=A
   5466   |    3     |  @3
   5467   |          |  A=M
   5468   |          |  A=A+D
   5469   |          |  D=M
   5470   |    0     |  @0
   5471   |          |  A=M
   5472   |          |  M=D
   5473   |    0     |  @0
   5474   |          |  M=M+1
          |          |        // add
   5475   |    0     |  @0
   5476   |          |  AM=M-1
   5477   |          |  D=M
   5478   |          |  A=A-1
   5479   |          |  M=M+D
          |          |        // call Screen.drawRectangle 4
   5480   |RAM[5528] |  @Screen.drawRectangle$ret.48
   5481   |          |  D=A
   5482   |    0     |  @0
   5483   |          |  A=M
   5484   |          |  M=D
   5485   |    0     |  @0
   5486   |          |  M=M+1
   5487   |    1     |  @1
   5488   |          |  D=M
   5489   |    0     |  @0
   5490   |          |  A=M
   5491   |          |  M=D
   5492   |    0     |  @0
   5493   |          |  M=M+1
   5494   |    2     |  @2
   5495   |          |  D=M
   5496   |    0     |  @0
   5497   |          |  A=M
   5498   |          |  M=D
   5499   |    0     |  @0
   5500   |          |  M=M+1
   5501   |    3     |  @3
   5502   |          |  D=M
   5503   |    0     |  @0
   5504   |          |  A=M
   5505   |          |  M=D
   5506   |    0     |  @0
   5507   |          |  M=M+1
   5508   |    4     |  @4
   5509   |          |  D=M
   5510   |    0     |  @0
   5511   |          |  A=M
   5512   |          |  M=D
   5513   |    0     |  @0
   5514   |          |  M=M+1
   5515   |    0     |  @0
   5516   |          |  D=M
   5517   |    2     |  @2
   5518   |          |  M=D
   5519   |    9     |  @9
   5520   |          |  D=A
   5521   |    2     |  @2
   5522   |          |  M=M-D
   5523   |    0     |  @0
   5524   |          |  D=M
   5525   |    1     |  @1
   5526   |          |  M=D
   5527   | RAM[24]  |  @Screen.drawRectangle
   5528   |          |  0;JMP
   5529   |ROM[5528] |  (Screen.drawRectangle$ret.48)
          |          |        // pop temp 0
   5529   |    0     |  @0
   5530   |          |  D=A
   5531   |    5     |  @5
   5532   |          |  D=D+A
   5533   | RAM[13]  |  @R13
   5534   |          |  M=D
   5535   |    0     |  @0
   5536   |          |  AM=M-1
   5537   |          |  D=M
   5538   | RAM[13]  |  @R13
   5539   |          |  A=M
   5540   |          |  M=D
          |          |        // goto Square.moveRight_TRUE_0
   5541   |RAM[5542] |  @Square.moveRight_TRUE_0
   5542   |          |  0;JMP
          |          |        // label Square.moveRight_FALSE_0
   5543   |ROM[5542] |  (Square.moveRight_FALSE_0)
          |          |        // label Square.moveRight_TRUE_0
   5543   |ROM[5542] |  (Square.moveRight_TRUE_0)
          |          |        // push constant 0
   5543   |    0     |  @0
   5544   |          |  D=A
   5545   |    0     |  @0
   5546   |          |  A=M
   5547   |          |  M=D
   5548   |    0     |  @0
   5549   |          |  M=M+1
          |          |  
          |          |  
          |          |  
          |          |  
          |          |  
          |          |        // /**
          |          |        // * Implements the Square Dance game.
          |          |        // * This simple game allows the user to move a black square around
          |          |        // * the screen, and change the square's size during the movement.
          |          |        // * When the game starts, a square of 30 by 30 pixels is shown at the
          |          |        // * top-left corner of the screen. The user controls the square as follows.
          |          |        // * The 4 arrow keys are used to move the square up, down, left, and right.
          |          |        // * The 'z' and 'x' keys are used, respectively, to decrement and increment
          |          |        // * the square's size. The 'q' key is used to quit the game.
          |          |        // *//** Constructs a new Square Game. *//*
          |          |        // FIELD  Square square    -> this     0
          |          |        // FIELD  int    direction -> this     1
          |          |        // */
          |          |        // 
          |          |        // function SquareGame.new 0
   5550   |ROM[5549] |  (SquareGame.new)
   5550   |    0     |  @0
   5551   |          |  D=M
   5552   |    1     |  @1
   5553   |          |  M=D
          |          |        // /*
          |          |        // */
          |          |        // push constant 2
   5554   |    2     |  @2
   5555   |          |  D=A
   5556   |    0     |  @0
   5557   |          |  A=M
   5558   |          |  M=D
   5559   |    0     |  @0
   5560   |          |  M=M+1
          |          |        // call Memory.alloc 1
   5561   |RAM[5609] |  @Memory.alloc$ret.49
   5562   |          |  D=A
   5563   |    0     |  @0
   5564   |          |  A=M
   5565   |          |  M=D
   5566   |    0     |  @0
   5567   |          |  M=M+1
   5568   |    1     |  @1
   5569   |          |  D=M
   5570   |    0     |  @0
   5571   |          |  A=M
   5572   |          |  M=D
   5573   |    0     |  @0
   5574   |          |  M=M+1
   5575   |    2     |  @2
   5576   |          |  D=M
   5577   |    0     |  @0
   5578   |          |  A=M
   5579   |          |  M=D
   5580   |    0     |  @0
   5581   |          |  M=M+1
   5582   |    3     |  @3
   5583   |          |  D=M
   5584   |    0     |  @0
   5585   |          |  A=M
   5586   |          |  M=D
   5587   |    0     |  @0
   5588   |          |  M=M+1
   5589   |    4     |  @4
   5590   |          |  D=M
   5591   |    0     |  @0
   5592   |          |  A=M
   5593   |          |  M=D
   5594   |    0     |  @0
   5595   |          |  M=M+1
   5596   |    0     |  @0
   5597   |          |  D=M
   5598   |    2     |  @2
   5599   |          |  M=D
   5600   |    6     |  @6
   5601   |          |  D=A
   5602   |    2     |  @2
   5603   |          |  M=M-D
   5604   |    0     |  @0
   5605   |          |  D=M
   5606   |    1     |  @1
   5607   |          |  M=D
   5608   | RAM[21]  |  @Memory.alloc
   5609   |          |  0;JMP
   5610   |ROM[5609] |  (Memory.alloc$ret.49)
          |          |        // pop pointer 0
   5610   |    0     |  @0
   5611   |          |  AM=M-1
   5612   |          |  D=M
   5613   |    3     |  @3
   5614   |          |  M=D
          |          |        // push constant 0
   5615   |    0     |  @0
   5616   |          |  D=A
   5617   |    0     |  @0
   5618   |          |  A=M
   5619   |          |  M=D
   5620   |    0     |  @0
   5621   |          |  M=M+1
          |          |        // push constant 0
   5622   |    0     |  @0
   5623   |          |  D=A
   5624   |    0     |  @0
   5625   |          |  A=M
   5626   |          |  M=D
   5627   |    0     |  @0
   5628   |          |  M=M+1
          |          |        // push constant 30
   5629   |    30    |  @30
   5630   |          |  D=A
   5631   |    0     |  @0
   5632   |          |  A=M
   5633   |          |  M=D
   5634   |    0     |  @0
   5635   |          |  M=M+1
          |          |        // call Square.new 3
   5636   |RAM[5684] |  @Square.new$ret.50
   5637   |          |  D=A
   5638   |    0     |  @0
   5639   |          |  A=M
   5640   |          |  M=D
   5641   |    0     |  @0
   5642   |          |  M=M+1
   5643   |    1     |  @1
   5644   |          |  D=M
   5645   |    0     |  @0
   5646   |          |  A=M
   5647   |          |  M=D
   5648   |    0     |  @0
   5649   |          |  M=M+1
   5650   |    2     |  @2
   5651   |          |  D=M
   5652   |    0     |  @0
   5653   |          |  A=M
   5654   |          |  M=D
   5655   |    0     |  @0
   5656   |          |  M=M+1
   5657   |    3     |  @3
   5658   |          |  D=M
   5659   |    0     |  @0
   5660   |          |  A=M
   5661   |          |  M=D
   5662   |    0     |  @0
   5663   |          |  M=M+1
   5664   |    4     |  @4
   5665   |          |  D=M
   5666   |    0     |  @0
   5667   |          |  A=M
   5668   |          |  M=D
   5669   |    0     |  @0
   5670   |          |  M=M+1
   5671   |    0     |  @0
   5672   |          |  D=M
   5673   |    2     |  @2
   5674   |          |  M=D
   5675   |    8     |  @8
   5676   |          |  D=A
   5677   |    2     |  @2
   5678   |          |  M=M-D
   5679   |    0     |  @0
   5680   |          |  D=M
   5681   |    1     |  @1
   5682   |          |  M=D
   5683   |RAM[1613] |  @Square.new
   5684   |          |  0;JMP
   5685   |ROM[5684] |  (Square.new$ret.50)
          |          |        // pop this 0
   5685   |    0     |  @0
   5686   |          |  D=A
   5687   |    3     |  @3
   5688   |          |  D=D+M
   5689   | RAM[13]  |  @R13
   5690   |          |  M=D
   5691   |    0     |  @0
   5692   |          |  AM=M-1
   5693   |          |  D=M
   5694   | RAM[13]  |  @R13
   5695   |          |  A=M
   5696   |          |  M=D
          |          |        // push constant 0
   5697   |    0     |  @0
   5698   |          |  D=A
   5699   |    0     |  @0
   5700   |          |  A=M
   5701   |          |  M=D
   5702   |    0     |  @0
   5703   |          |  M=M+1
          |          |        // pop this 1
   5704   |    1     |  @1
   5705   |          |  D=A
   5706   |    3     |  @3
   5707   |          |  D=D+M
   5708   | RAM[13]  |  @R13
   5709   |          |  M=D
   5710   |    0     |  @0
   5711   |          |  AM=M-1
   5712   |          |  D=M
   5713   | RAM[13]  |  @R13
   5714   |          |  A=M
   5715   |          |  M=D
          |          |        // push pointer 0
   5716   |    3     |  @3
   5717   |          |  D=M
   5718   |    0     |  @0
   5719   |          |  A=M
   5720   |          |  M=D
   5721   |    0     |  @0
   5722   |          |  M=M+1
          |          |        // return
   5723   |    1     |  @1
   5724   |          |  D=M
   5725   |    13    |  @13
   5726   |          |  M=D
   5727   |    5     |  @5
   5728   |          |  D=A
   5729   |    13    |  @13
   5730   |          |  D=M-D
   5731   |          |  A=D
   5732   |          |  D=M
   5733   |    14    |  @14
   5734   |          |  M=D
   5735   |    0     |  @0
   5736   |          |  AM=M-1
   5737   |          |  D=M
   5738   |    2     |  @2
   5739   |          |  A=M
   5740   |          |  M=D
   5741   |    2     |  @2
   5742   |          |  D=M+1
   5743   |    0     |  @0
   5744   |          |  M=D
   5745   |    13    |  @13
   5746   |          |  M=M-1
   5747   |          |  A=M
   5748   |          |  D=M
   5749   |    4     |  @4
   5750   |          |  M=D
   5751   |    13    |  @13
   5752   |          |  M=M-1
   5753   |          |  A=M
   5754   |          |  D=M
   5755   |    3     |  @3
   5756   |          |  M=D
   5757   |    13    |  @13
   5758   |          |  M=M-1
   5759   |          |  A=M
   5760   |          |  D=M
   5761   |    2     |  @2
   5762   |          |  M=D
   5763   |    13    |  @13
   5764   |          |  M=M-1
   5765   |          |  A=M
   5766   |          |  D=M
   5767   |    1     |  @1
   5768   |          |  M=D
   5769   |    14    |  @14
   5770   |          |  A=M
   5771   |          |  0;JMP
          |          |        // /** Disposes this game. */
          |          |        // function SquareGame.dispose 0
   5772   |ROM[5771] |  (SquareGame.dispose)
   5772   |    0     |  @0
   5773   |          |  D=M
   5774   |    1     |  @1
   5775   |          |  M=D
          |          |        // /*
          |          |        // ARG    SquareGame this -> argument 0
          |          |        // */
          |          |        // push argument 0
   5776   |    0     |  @0
   5777   |          |  D=A
   5778   |    2     |  @2
   5779   |          |  A=M
   5780   |          |  A=A+D
   5781   |          |  D=M
   5782   |    0     |  @0
   5783   |          |  A=M
   5784   |          |  M=D
   5785   |    0     |  @0
   5786   |          |  M=M+1
          |          |        // pop pointer 0
   5787   |    0     |  @0
   5788   |          |  AM=M-1
   5789   |          |  D=M
   5790   |    3     |  @3
   5791   |          |  M=D
          |          |        // push this 0
   5792   |    0     |  @0
   5793   |          |  D=A
   5794   |    3     |  @3
   5795   |          |  A=M
   5796   |          |  A=A+D
   5797   |          |  D=M
   5798   |    0     |  @0
   5799   |          |  A=M
   5800   |          |  M=D
   5801   |    0     |  @0
   5802   |          |  M=M+1
          |          |        // call Square.dispose 1
   5803   |RAM[5851] |  @Square.dispose$ret.51
   5804   |          |  D=A
   5805   |    0     |  @0
   5806   |          |  A=M
   5807   |          |  M=D
   5808   |    0     |  @0
   5809   |          |  M=M+1
   5810   |    1     |  @1
   5811   |          |  D=M
   5812   |    0     |  @0
   5813   |          |  A=M
   5814   |          |  M=D
   5815   |    0     |  @0
   5816   |          |  M=M+1
   5817   |    2     |  @2
   5818   |          |  D=M
   5819   |    0     |  @0
   5820   |          |  A=M
   5821   |          |  M=D
   5822   |    0     |  @0
   5823   |          |  M=M+1
   5824   |    3     |  @3
   5825   |          |  D=M
   5826   |    0     |  @0
   5827   |          |  A=M
   5828   |          |  M=D
   5829   |    0     |  @0
   5830   |          |  M=M+1
   5831   |    4     |  @4
   5832   |          |  D=M
   5833   |    0     |  @0
   5834   |          |  A=M
   5835   |          |  M=D
   5836   |    0     |  @0
   5837   |          |  M=M+1
   5838   |    0     |  @0
   5839   |          |  D=M
   5840   |    2     |  @2
   5841   |          |  M=D
   5842   |    6     |  @6
   5843   |          |  D=A
   5844   |    2     |  @2
   5845   |          |  M=M-D
   5846   |    0     |  @0
   5847   |          |  D=M
   5848   |    1     |  @1
   5849   |          |  M=D
   5850   |RAM[1871] |  @Square.dispose
   5851   |          |  0;JMP
   5852   |ROM[5851] |  (Square.dispose$ret.51)
          |          |        // pop temp 0
   5852   |    0     |  @0
   5853   |          |  D=A
   5854   |    5     |  @5
   5855   |          |  D=D+A
   5856   | RAM[13]  |  @R13
   5857   |          |  M=D
   5858   |    0     |  @0
   5859   |          |  AM=M-1
   5860   |          |  D=M
   5861   | RAM[13]  |  @R13
   5862   |          |  A=M
   5863   |          |  M=D
          |          |        // push pointer 0
   5864   |    3     |  @3
   5865   |          |  D=M
   5866   |    0     |  @0
   5867   |          |  A=M
   5868   |          |  M=D
   5869   |    0     |  @0
   5870   |          |  M=M+1
          |          |        // call Memory.deAlloc 1
   5871   |RAM[5919] |  @Memory.deAlloc$ret.52
   5872   |          |  D=A
   5873   |    0     |  @0
   5874   |          |  A=M
   5875   |          |  M=D
   5876   |    0     |  @0
   5877   |          |  M=M+1
   5878   |    1     |  @1
   5879   |          |  D=M
   5880   |    0     |  @0
   5881   |          |  A=M
   5882   |          |  M=D
   5883   |    0     |  @0
   5884   |          |  M=M+1
   5885   |    2     |  @2
   5886   |          |  D=M
   5887   |    0     |  @0
   5888   |          |  A=M
   5889   |          |  M=D
   5890   |    0     |  @0
   5891   |          |  M=M+1
   5892   |    3     |  @3
   5893   |          |  D=M
   5894   |    0     |  @0
   5895   |          |  A=M
   5896   |          |  M=D
   5897   |    0     |  @0
   5898   |          |  M=M+1
   5899   |    4     |  @4
   5900   |          |  D=M
   5901   |    0     |  @0
   5902   |          |  A=M
   5903   |          |  M=D
   5904   |    0     |  @0
   5905   |          |  M=M+1
   5906   |    0     |  @0
   5907   |          |  D=M
   5908   |    2     |  @2
   5909   |          |  M=D
   5910   |    6     |  @6
   5911   |          |  D=A
   5912   |    2     |  @2
   5913   |          |  M=M-D
   5914   |    0     |  @0
   5915   |          |  D=M
   5916   |    1     |  @1
   5917   |          |  M=D
   5918   | RAM[22]  |  @Memory.deAlloc
   5919   |          |  0;JMP
   5920   |ROM[5919] |  (Memory.deAlloc$ret.52)
          |          |        // pop temp 0
   5920   |    0     |  @0
   5921   |          |  D=A
   5922   |    5     |  @5
   5923   |          |  D=D+A
   5924   | RAM[13]  |  @R13
   5925   |          |  M=D
   5926   |    0     |  @0
   5927   |          |  AM=M-1
   5928   |          |  D=M
   5929   | RAM[13]  |  @R13
   5930   |          |  A=M
   5931   |          |  M=D
          |          |        // push constant 0
   5932   |    0     |  @0
   5933   |          |  D=A
   5934   |    0     |  @0
   5935   |          |  A=M
   5936   |          |  M=D
   5937   |    0     |  @0
   5938   |          |  M=M+1
          |          |        // return
   5939   |    1     |  @1
   5940   |          |  D=M
   5941   |    13    |  @13
   5942   |          |  M=D
   5943   |    5     |  @5
   5944   |          |  D=A
   5945   |    13    |  @13
   5946   |          |  D=M-D
   5947   |          |  A=D
   5948   |          |  D=M
   5949   |    14    |  @14
   5950   |          |  M=D
   5951   |    0     |  @0
   5952   |          |  AM=M-1
   5953   |          |  D=M
   5954   |    2     |  @2
   5955   |          |  A=M
   5956   |          |  M=D
   5957   |    2     |  @2
   5958   |          |  D=M+1
   5959   |    0     |  @0
   5960   |          |  M=D
   5961   |    13    |  @13
   5962   |          |  M=M-1
   5963   |          |  A=M
   5964   |          |  D=M
   5965   |    4     |  @4
   5966   |          |  M=D
   5967   |    13    |  @13
   5968   |          |  M=M-1
   5969   |          |  A=M
   5970   |          |  D=M
   5971   |    3     |  @3
   5972   |          |  M=D
   5973   |    13    |  @13
   5974   |          |  M=M-1
   5975   |          |  A=M
   5976   |          |  D=M
   5977   |    2     |  @2
   5978   |          |  M=D
   5979   |    13    |  @13
   5980   |          |  M=M-1
   5981   |          |  A=M
   5982   |          |  D=M
   5983   |    1     |  @1
   5984   |          |  M=D
   5985   |    14    |  @14
   5986   |          |  A=M
   5987   |          |  0;JMP
          |          |        // /** Moves the square in the current direction. */
          |          |        // function SquareGame.moveSquare 0
   5988   |ROM[5987] |  (SquareGame.moveSquare)
   5988   |    0     |  @0
   5989   |          |  D=M
   5990   |    1     |  @1
   5991   |          |  M=D
          |          |        // /*
          |          |        // ARG    SquareGame this -> argument 0
          |          |        // */
          |          |        // push argument 0
   5992   |    0     |  @0
   5993   |          |  D=A
   5994   |    2     |  @2
   5995   |          |  A=M
   5996   |          |  A=A+D
   5997   |          |  D=M
   5998   |    0     |  @0
   5999   |          |  A=M
   6000   |          |  M=D
   6001   |    0     |  @0
   6002   |          |  M=M+1
          |          |        // pop pointer 0
   6003   |    0     |  @0
   6004   |          |  AM=M-1
   6005   |          |  D=M
   6006   |    3     |  @3
   6007   |          |  M=D
          |          |        // push this 1
   6008   |    1     |  @1
   6009   |          |  D=A
   6010   |    3     |  @3
   6011   |          |  A=M
   6012   |          |  A=A+D
   6013   |          |  D=M
   6014   |    0     |  @0
   6015   |          |  A=M
   6016   |          |  M=D
   6017   |    0     |  @0
   6018   |          |  M=M+1
          |          |        // push constant 1
   6019   |    1     |  @1
   6020   |          |  D=A
   6021   |    0     |  @0
   6022   |          |  A=M
   6023   |          |  M=D
   6024   |    0     |  @0
   6025   |          |  M=M+1
          |          |        // eq
   6026   |    0     |  @0
   6027   |          |  AM=M-1
   6028   |          |  D=M
   6029   |          |  A=A-1
   6030   |          |  D=M-D
   6031   |          |  M=-1
   6032   |RAM[6036] |  @T7
   6033   |          |  D;JEQ
   6034   |    0     |  @0
   6035   |          |  A=M-1
   6036   |          |  M=0
   6037   |ROM[6036] |  (T7)
          |          |        // not
   6037   |    0     |  @0
   6038   |          |  A=M-1
   6039   |          |  M=!M
          |          |        // if-goto SquareGame.moveSquare_FALSE_0
   6040   |    0     |  @0
   6041   |          |  AM=M-1
   6042   |          |  D=M
   6043   |RAM[6118] |  @SquareGame.moveSquare_FALSE_0
   6044   |          |  D;JNE
          |          |        // push this 0
   6045   |    0     |  @0
   6046   |          |  D=A
   6047   |    3     |  @3
   6048   |          |  A=M
   6049   |          |  A=A+D
   6050   |          |  D=M
   6051   |    0     |  @0
   6052   |          |  A=M
   6053   |          |  M=D
   6054   |    0     |  @0
   6055   |          |  M=M+1
          |          |        // call Square.moveUp 1
   6056   |RAM[6104] |  @Square.moveUp$ret.53
   6057   |          |  D=A
   6058   |    0     |  @0
   6059   |          |  A=M
   6060   |          |  M=D
   6061   |    0     |  @0
   6062   |          |  M=M+1
   6063   |    1     |  @1
   6064   |          |  D=M
   6065   |    0     |  @0
   6066   |          |  A=M
   6067   |          |  M=D
   6068   |    0     |  @0
   6069   |          |  M=M+1
   6070   |    2     |  @2
   6071   |          |  D=M
   6072   |    0     |  @0
   6073   |          |  A=M
   6074   |          |  M=D
   6075   |    0     |  @0
   6076   |          |  M=M+1
   6077   |    3     |  @3
   6078   |          |  D=M
   6079   |    0     |  @0
   6080   |          |  A=M
   6081   |          |  M=D
   6082   |    0     |  @0
   6083   |          |  M=M+1
   6084   |    4     |  @4
   6085   |          |  D=M
   6086   |    0     |  @0
   6087   |          |  A=M
   6088   |          |  M=D
   6089   |    0     |  @0
   6090   |          |  M=M+1
   6091   |    0     |  @0
   6092   |          |  D=M
   6093   |    2     |  @2
   6094   |          |  M=D
   6095   |    6     |  @6
   6096   |          |  D=A
   6097   |    2     |  @2
   6098   |          |  M=M-D
   6099   |    0     |  @0
   6100   |          |  D=M
   6101   |    1     |  @1
   6102   |          |  M=D
   6103   |RAM[3218] |  @Square.moveUp
   6104   |          |  0;JMP
   6105   |ROM[6104] |  (Square.moveUp$ret.53)
          |          |        // pop temp 0
   6105   |    0     |  @0
   6106   |          |  D=A
   6107   |    5     |  @5
   6108   |          |  D=D+A
   6109   | RAM[13]  |  @R13
   6110   |          |  M=D
   6111   |    0     |  @0
   6112   |          |  AM=M-1
   6113   |          |  D=M
   6114   | RAM[13]  |  @R13
   6115   |          |  A=M
   6116   |          |  M=D
          |          |        // goto SquareGame.moveSquare_TRUE_0
   6117   |RAM[6118] |  @SquareGame.moveSquare_TRUE_0
   6118   |          |  0;JMP
          |          |        // label SquareGame.moveSquare_FALSE_0
   6119   |ROM[6118] |  (SquareGame.moveSquare_FALSE_0)
          |          |        // label SquareGame.moveSquare_TRUE_0
   6119   |ROM[6118] |  (SquareGame.moveSquare_TRUE_0)
          |          |        // push this 1
   6119   |    1     |  @1
   6120   |          |  D=A
   6121   |    3     |  @3
   6122   |          |  A=M
   6123   |          |  A=A+D
   6124   |          |  D=M
   6125   |    0     |  @0
   6126   |          |  A=M
   6127   |          |  M=D
   6128   |    0     |  @0
   6129   |          |  M=M+1
          |          |        // push constant 2
   6130   |    2     |  @2
   6131   |          |  D=A
   6132   |    0     |  @0
   6133   |          |  A=M
   6134   |          |  M=D
   6135   |    0     |  @0
   6136   |          |  M=M+1
          |          |        // eq
   6137   |    0     |  @0
   6138   |          |  AM=M-1
   6139   |          |  D=M
   6140   |          |  A=A-1
   6141   |          |  D=M-D
   6142   |          |  M=-1
   6143   |RAM[6147] |  @T8
   6144   |          |  D;JEQ
   6145   |    0     |  @0
   6146   |          |  A=M-1
   6147   |          |  M=0
   6148   |ROM[6147] |  (T8)
          |          |        // not
   6148   |    0     |  @0
   6149   |          |  A=M-1
   6150   |          |  M=!M
          |          |        // if-goto SquareGame.moveSquare_FALSE_1
   6151   |    0     |  @0
   6152   |          |  AM=M-1
   6153   |          |  D=M
   6154   |RAM[6229] |  @SquareGame.moveSquare_FALSE_1
   6155   |          |  D;JNE
          |          |        // push this 0
   6156   |    0     |  @0
   6157   |          |  D=A
   6158   |    3     |  @3
   6159   |          |  A=M
   6160   |          |  A=A+D
   6161   |          |  D=M
   6162   |    0     |  @0
   6163   |          |  A=M
   6164   |          |  M=D
   6165   |    0     |  @0
   6166   |          |  M=M+1
          |          |        // call Square.moveDown 1
   6167   |RAM[6215] |  @Square.moveDown$ret.54
   6168   |          |  D=A
   6169   |    0     |  @0
   6170   |          |  A=M
   6171   |          |  M=D
   6172   |    0     |  @0
   6173   |          |  M=M+1
   6174   |    1     |  @1
   6175   |          |  D=M
   6176   |    0     |  @0
   6177   |          |  A=M
   6178   |          |  M=D
   6179   |    0     |  @0
   6180   |          |  M=M+1
   6181   |    2     |  @2
   6182   |          |  D=M
   6183   |    0     |  @0
   6184   |          |  A=M
   6185   |          |  M=D
   6186   |    0     |  @0
   6187   |          |  M=M+1
   6188   |    3     |  @3
   6189   |          |  D=M
   6190   |    0     |  @0
   6191   |          |  A=M
   6192   |          |  M=D
   6193   |    0     |  @0
   6194   |          |  M=M+1
   6195   |    4     |  @4
   6196   |          |  D=M
   6197   |    0     |  @0
   6198   |          |  A=M
   6199   |          |  M=D
   6200   |    0     |  @0
   6201   |          |  M=M+1
   6202   |    0     |  @0
   6203   |          |  D=M
   6204   |    2     |  @2
   6205   |          |  M=D
   6206   |    6     |  @6
   6207   |          |  D=A
   6208   |    2     |  @2
   6209   |          |  M=M-D
   6210   |    0     |  @0
   6211   |          |  D=M
   6212   |    1     |  @1
   6213   |          |  M=D
   6214   |RAM[3805] |  @Square.moveDown
   6215   |          |  0;JMP
   6216   |ROM[6215] |  (Square.moveDown$ret.54)
          |          |        // pop temp 0
   6216   |    0     |  @0
   6217   |          |  D=A
   6218   |    5     |  @5
   6219   |          |  D=D+A
   6220   | RAM[13]  |  @R13
   6221   |          |  M=D
   6222   |    0     |  @0
   6223   |          |  AM=M-1
   6224   |          |  D=M
   6225   | RAM[13]  |  @R13
   6226   |          |  A=M
   6227   |          |  M=D
          |          |        // goto SquareGame.moveSquare_TRUE_1
   6228   |RAM[6229] |  @SquareGame.moveSquare_TRUE_1
   6229   |          |  0;JMP
          |          |        // label SquareGame.moveSquare_FALSE_1
   6230   |ROM[6229] |  (SquareGame.moveSquare_FALSE_1)
          |          |        // label SquareGame.moveSquare_TRUE_1
   6230   |ROM[6229] |  (SquareGame.moveSquare_TRUE_1)
          |          |        // push this 1
   6230   |    1     |  @1
   6231   |          |  D=A
   6232   |    3     |  @3
   6233   |          |  A=M
   6234   |          |  A=A+D
   6235   |          |  D=M
   6236   |    0     |  @0
   6237   |          |  A=M
   6238   |          |  M=D
   6239   |    0     |  @0
   6240   |          |  M=M+1
          |          |        // push constant 3
   6241   |    3     |  @3
   6242   |          |  D=A
   6243   |    0     |  @0
   6244   |          |  A=M
   6245   |          |  M=D
   6246   |    0     |  @0
   6247   |          |  M=M+1
          |          |        // eq
   6248   |    0     |  @0
   6249   |          |  AM=M-1
   6250   |          |  D=M
   6251   |          |  A=A-1
   6252   |          |  D=M-D
   6253   |          |  M=-1
   6254   |RAM[6258] |  @T9
   6255   |          |  D;JEQ
   6256   |    0     |  @0
   6257   |          |  A=M-1
   6258   |          |  M=0
   6259   |ROM[6258] |  (T9)
          |          |        // not
   6259   |    0     |  @0
   6260   |          |  A=M-1
   6261   |          |  M=!M
          |          |        // if-goto SquareGame.moveSquare_FALSE_2
   6262   |    0     |  @0
   6263   |          |  AM=M-1
   6264   |          |  D=M
   6265   |RAM[6340] |  @SquareGame.moveSquare_FALSE_2
   6266   |          |  D;JNE
          |          |        // push this 0
   6267   |    0     |  @0
   6268   |          |  D=A
   6269   |    3     |  @3
   6270   |          |  A=M
   6271   |          |  A=A+D
   6272   |          |  D=M
   6273   |    0     |  @0
   6274   |          |  A=M
   6275   |          |  M=D
   6276   |    0     |  @0
   6277   |          |  M=M+1
          |          |        // call Square.moveLeft 1
   6278   |RAM[6326] |  @Square.moveLeft$ret.55
   6279   |          |  D=A
   6280   |    0     |  @0
   6281   |          |  A=M
   6282   |          |  M=D
   6283   |    0     |  @0
   6284   |          |  M=M+1
   6285   |    1     |  @1
   6286   |          |  D=M
   6287   |    0     |  @0
   6288   |          |  A=M
   6289   |          |  M=D
   6290   |    0     |  @0
   6291   |          |  M=M+1
   6292   |    2     |  @2
   6293   |          |  D=M
   6294   |    0     |  @0
   6295   |          |  A=M
   6296   |          |  M=D
   6297   |    0     |  @0
   6298   |          |  M=M+1
   6299   |    3     |  @3
   6300   |          |  D=M
   6301   |    0     |  @0
   6302   |          |  A=M
   6303   |          |  M=D
   6304   |    0     |  @0
   6305   |          |  M=M+1
   6306   |    4     |  @4
   6307   |          |  D=M
   6308   |    0     |  @0
   6309   |          |  A=M
   6310   |          |  M=D
   6311   |    0     |  @0
   6312   |          |  M=M+1
   6313   |    0     |  @0
   6314   |          |  D=M
   6315   |    2     |  @2
   6316   |          |  M=D
   6317   |    6     |  @6
   6318   |          |  D=A
   6319   |    2     |  @2
   6320   |          |  M=M-D
   6321   |    0     |  @0
   6322   |          |  D=M
   6323   |    1     |  @1
   6324   |          |  M=D
   6325   |RAM[4408] |  @Square.moveLeft
   6326   |          |  0;JMP
   6327   |ROM[6326] |  (Square.moveLeft$ret.55)
          |          |        // pop temp 0
   6327   |    0     |  @0
   6328   |          |  D=A
   6329   |    5     |  @5
   6330   |          |  D=D+A
   6331   | RAM[13]  |  @R13
   6332   |          |  M=D
   6333   |    0     |  @0
   6334   |          |  AM=M-1
   6335   |          |  D=M
   6336   | RAM[13]  |  @R13
   6337   |          |  A=M
   6338   |          |  M=D
          |          |        // goto SquareGame.moveSquare_TRUE_2
   6339   |RAM[6340] |  @SquareGame.moveSquare_TRUE_2
   6340   |          |  0;JMP
          |          |        // label SquareGame.moveSquare_FALSE_2
   6341   |ROM[6340] |  (SquareGame.moveSquare_FALSE_2)
          |          |        // label SquareGame.moveSquare_TRUE_2
   6341   |ROM[6340] |  (SquareGame.moveSquare_TRUE_2)
          |          |        // push this 1
   6341   |    1     |  @1
   6342   |          |  D=A
   6343   |    3     |  @3
   6344   |          |  A=M
   6345   |          |  A=A+D
   6346   |          |  D=M
   6347   |    0     |  @0
   6348   |          |  A=M
   6349   |          |  M=D
   6350   |    0     |  @0
   6351   |          |  M=M+1
          |          |        // push constant 4
   6352   |    4     |  @4
   6353   |          |  D=A
   6354   |    0     |  @0
   6355   |          |  A=M
   6356   |          |  M=D
   6357   |    0     |  @0
   6358   |          |  M=M+1
          |          |        // eq
   6359   |    0     |  @0
   6360   |          |  AM=M-1
   6361   |          |  D=M
   6362   |          |  A=A-1
   6363   |          |  D=M-D
   6364   |          |  M=-1
   6365   |RAM[6369] |  @T10
   6366   |          |  D;JEQ
   6367   |    0     |  @0
   6368   |          |  A=M-1
   6369   |          |  M=0
   6370   |ROM[6369] |  (T10)
          |          |        // not
   6370   |    0     |  @0
   6371   |          |  A=M-1
   6372   |          |  M=!M
          |          |        // if-goto SquareGame.moveSquare_FALSE_3
   6373   |    0     |  @0
   6374   |          |  AM=M-1
   6375   |          |  D=M
   6376   |RAM[6451] |  @SquareGame.moveSquare_FALSE_3
   6377   |          |  D;JNE
          |          |        // push this 0
   6378   |    0     |  @0
   6379   |          |  D=A
   6380   |    3     |  @3
   6381   |          |  A=M
   6382   |          |  A=A+D
   6383   |          |  D=M
   6384   |    0     |  @0
   6385   |          |  A=M
   6386   |          |  M=D
   6387   |    0     |  @0
   6388   |          |  M=M+1
          |          |        // call Square.moveRight 1
   6389   |RAM[6437] |  @Square.moveRight$ret.56
   6390   |          |  D=A
   6391   |    0     |  @0
   6392   |          |  A=M
   6393   |          |  M=D
   6394   |    0     |  @0
   6395   |          |  M=M+1
   6396   |    1     |  @1
   6397   |          |  D=M
   6398   |    0     |  @0
   6399   |          |  A=M
   6400   |          |  M=D
   6401   |    0     |  @0
   6402   |          |  M=M+1
   6403   |    2     |  @2
   6404   |          |  D=M
   6405   |    0     |  @0
   6406   |          |  A=M
   6407   |          |  M=D
   6408   |    0     |  @0
   6409   |          |  M=M+1
   6410   |    3     |  @3
   6411   |          |  D=M
   6412   |    0     |  @0
   6413   |          |  A=M
   6414   |          |  M=D
   6415   |    0     |  @0
   6416   |          |  M=M+1
   6417   |    4     |  @4
   6418   |          |  D=M
   6419   |    0     |  @0
   6420   |          |  A=M
   6421   |          |  M=D
   6422   |    0     |  @0
   6423   |          |  M=M+1
   6424   |    0     |  @0
   6425   |          |  D=M
   6426   |    2     |  @2
   6427   |          |  M=D
   6428   |    6     |  @6
   6429   |          |  D=A
   6430   |    2     |  @2
   6431   |          |  M=M-D
   6432   |    0     |  @0
   6433   |          |  D=M
   6434   |    1     |  @1
   6435   |          |  M=D
   6436   |RAM[4995] |  @Square.moveRight
   6437   |          |  0;JMP
   6438   |ROM[6437] |  (Square.moveRight$ret.56)
          |          |        // pop temp 0
   6438   |    0     |  @0
   6439   |          |  D=A
   6440   |    5     |  @5
   6441   |          |  D=D+A
   6442   | RAM[13]  |  @R13
   6443   |          |  M=D
   6444   |    0     |  @0
   6445   |          |  AM=M-1
   6446   |          |  D=M
   6447   | RAM[13]  |  @R13
   6448   |          |  A=M
   6449   |          |  M=D
          |          |        // goto SquareGame.moveSquare_TRUE_3
   6450   |RAM[6451] |  @SquareGame.moveSquare_TRUE_3
   6451   |          |  0;JMP
          |          |        // label SquareGame.moveSquare_FALSE_3
   6452   |ROM[6451] |  (SquareGame.moveSquare_FALSE_3)
          |          |        // label SquareGame.moveSquare_TRUE_3
   6452   |ROM[6451] |  (SquareGame.moveSquare_TRUE_3)
          |          |        // push constant 5
   6452   |    5     |  @5
   6453   |          |  D=A
   6454   |    0     |  @0
   6455   |          |  A=M
   6456   |          |  M=D
   6457   |    0     |  @0
   6458   |          |  M=M+1
          |          |        // call Sys.wait 1
   6459   |RAM[6507] |  @Sys.wait$ret.57
   6460   |          |  D=A
   6461   |    0     |  @0
   6462   |          |  A=M
   6463   |          |  M=D
   6464   |    0     |  @0
   6465   |          |  M=M+1
   6466   |    1     |  @1
   6467   |          |  D=M
   6468   |    0     |  @0
   6469   |          |  A=M
   6470   |          |  M=D
   6471   |    0     |  @0
   6472   |          |  M=M+1
   6473   |    2     |  @2
   6474   |          |  D=M
   6475   |    0     |  @0
   6476   |          |  A=M
   6477   |          |  M=D
   6478   |    0     |  @0
   6479   |          |  M=M+1
   6480   |    3     |  @3
   6481   |          |  D=M
   6482   |    0     |  @0
   6483   |          |  A=M
   6484   |          |  M=D
   6485   |    0     |  @0
   6486   |          |  M=M+1
   6487   |    4     |  @4
   6488   |          |  D=M
   6489   |    0     |  @0
   6490   |          |  A=M
   6491   |          |  M=D
   6492   |    0     |  @0
   6493   |          |  M=M+1
   6494   |    0     |  @0
   6495   |          |  D=M
   6496   |    2     |  @2
   6497   |          |  M=D
   6498   |    6     |  @6
   6499   |          |  D=A
   6500   |    2     |  @2
   6501   |          |  M=M-D
   6502   |    0     |  @0
   6503   |          |  D=M
   6504   |    1     |  @1
   6505   |          |  M=D
   6506   | RAM[25]  |  @Sys.wait
   6507   |          |  0;JMP
   6508   |ROM[6507] |  (Sys.wait$ret.57)
          |          |        // pop temp 0
   6508   |    0     |  @0
   6509   |          |  D=A
   6510   |    5     |  @5
   6511   |          |  D=D+A
   6512   | RAM[13]  |  @R13
   6513   |          |  M=D
   6514   |    0     |  @0
   6515   |          |  AM=M-1
   6516   |          |  D=M
   6517   | RAM[13]  |  @R13
   6518   |          |  A=M
   6519   |          |  M=D
          |          |        // push constant 0
   6520   |    0     |  @0
   6521   |          |  D=A
   6522   |    0     |  @0
   6523   |          |  A=M
   6524   |          |  M=D
   6525   |    0     |  @0
   6526   |          |  M=M+1
          |          |        // return
   6527   |    1     |  @1
   6528   |          |  D=M
   6529   |    13    |  @13
   6530   |          |  M=D
   6531   |    5     |  @5
   6532   |          |  D=A
   6533   |    13    |  @13
   6534   |          |  D=M-D
   6535   |          |  A=D
   6536   |          |  D=M
   6537   |    14    |  @14
   6538   |          |  M=D
   6539   |    0     |  @0
   6540   |          |  AM=M-1
   6541   |          |  D=M
   6542   |    2     |  @2
   6543   |          |  A=M
   6544   |          |  M=D
   6545   |    2     |  @2
   6546   |          |  D=M+1
   6547   |    0     |  @0
   6548   |          |  M=D
   6549   |    13    |  @13
   6550   |          |  M=M-1
   6551   |          |  A=M
   6552   |          |  D=M
   6553   |    4     |  @4
   6554   |          |  M=D
   6555   |    13    |  @13
   6556   |          |  M=M-1
   6557   |          |  A=M
   6558   |          |  D=M
   6559   |    3     |  @3
   6560   |          |  M=D
   6561   |    13    |  @13
   6562   |          |  M=M-1
   6563   |          |  A=M
   6564   |          |  D=M
   6565   |    2     |  @2
   6566   |          |  M=D
   6567   |    13    |  @13
   6568   |          |  M=M-1
   6569   |          |  A=M
   6570   |          |  D=M
   6571   |    1     |  @1
   6572   |          |  M=D
   6573   |    14    |  @14
   6574   |          |  A=M
   6575   |          |  0;JMP
          |          |        // /** Runs the game: handles the user's inputs and moves the square accordingly */
          |          |        // function SquareGame.run 2
   6576   |ROM[6575] |  (SquareGame.run)
   6576   |    0     |  @0
   6577   |          |  D=M
   6578   |    1     |  @1
   6579   |          |  M=D
   6580   |    0     |  @0
   6581   |          |  A=M
   6582   |          |  M=0
   6583   |    0     |  @0
   6584   |          |  M=M+1
   6585   |    0     |  @0
   6586   |          |  A=M
   6587   |          |  M=0
   6588   |    0     |  @0
   6589   |          |  M=M+1
          |          |        // /*
          |          |        // ARG    SquareGame this -> argument 0
          |          |        // VAR    char       key  -> local    0
          |          |        // VAR    boolean    exit -> local    1
          |          |        // */
          |          |        // push argument 0
   6590   |    0     |  @0
   6591   |          |  D=A
   6592   |    2     |  @2
   6593   |          |  A=M
   6594   |          |  A=A+D
   6595   |          |  D=M
   6596   |    0     |  @0
   6597   |          |  A=M
   6598   |          |  M=D
   6599   |    0     |  @0
   6600   |          |  M=M+1
          |          |        // pop pointer 0
   6601   |    0     |  @0
   6602   |          |  AM=M-1
   6603   |          |  D=M
   6604   |    3     |  @3
   6605   |          |  M=D
          |          |        // push constant 0
   6606   |    0     |  @0
   6607   |          |  D=A
   6608   |    0     |  @0
   6609   |          |  A=M
   6610   |          |  M=D
   6611   |    0     |  @0
   6612   |          |  M=M+1
          |          |        // pop local 1
   6613   |    1     |  @1
   6614   |          |  D=A
   6615   |    1     |  @1
   6616   |          |  D=D+M
   6617   | RAM[13]  |  @R13
   6618   |          |  M=D
   6619   |    0     |  @0
   6620   |          |  AM=M-1
   6621   |          |  D=M
   6622   | RAM[13]  |  @R13
   6623   |          |  A=M
   6624   |          |  M=D
          |          |        // label SquareGame.run_LOOP_START_0
   6625   |ROM[6624] |  (SquareGame.run_LOOP_START_0)
          |          |        // push local 1
   6625   |    1     |  @1
   6626   |          |  D=A
   6627   |    1     |  @1
   6628   |          |  A=M
   6629   |          |  A=A+D
   6630   |          |  D=M
   6631   |    0     |  @0
   6632   |          |  A=M
   6633   |          |  M=D
   6634   |    0     |  @0
   6635   |          |  M=M+1
          |          |        // not
   6636   |    0     |  @0
   6637   |          |  A=M-1
   6638   |          |  M=!M
          |          |        // not
   6639   |    0     |  @0
   6640   |          |  A=M-1
   6641   |          |  M=!M
          |          |        // if-goto SquareGame.run_LOOP_END_0
   6642   |    0     |  @0
   6643   |          |  AM=M-1
   6644   |          |  D=M
   6645   |RAM[7502] |  @SquareGame.run_LOOP_END_0
   6646   |          |  D;JNE
          |          |        // label SquareGame.run_LOOP_START_1
   6647   |ROM[6646] |  (SquareGame.run_LOOP_START_1)
          |          |        // push local 0
   6647   |    0     |  @0
   6648   |          |  D=A
   6649   |    1     |  @1
   6650   |          |  A=M
   6651   |          |  A=A+D
   6652   |          |  D=M
   6653   |    0     |  @0
   6654   |          |  A=M
   6655   |          |  M=D
   6656   |    0     |  @0
   6657   |          |  M=M+1
          |          |        // push constant 0
   6658   |    0     |  @0
   6659   |          |  D=A
   6660   |    0     |  @0
   6661   |          |  A=M
   6662   |          |  M=D
   6663   |    0     |  @0
   6664   |          |  M=M+1
          |          |        // eq
   6665   |    0     |  @0
   6666   |          |  AM=M-1
   6667   |          |  D=M
   6668   |          |  A=A-1
   6669   |          |  D=M-D
   6670   |          |  M=-1
   6671   |RAM[6675] |  @T11
   6672   |          |  D;JEQ
   6673   |    0     |  @0
   6674   |          |  A=M-1
   6675   |          |  M=0
   6676   |ROM[6675] |  (T11)
          |          |        // not
   6676   |    0     |  @0
   6677   |          |  A=M-1
   6678   |          |  M=!M
          |          |        // if-goto SquareGame.run_LOOP_END_1
   6679   |    0     |  @0
   6680   |          |  AM=M-1
   6681   |          |  D=M
   6682   |RAM[6814] |  @SquareGame.run_LOOP_END_1
   6683   |          |  D;JNE
          |          |        // call Keyboard.keyPressed 0
   6684   |RAM[6732] |  @Keyboard.keyPressed$ret.58
   6685   |          |  D=A
   6686   |    0     |  @0
   6687   |          |  A=M
   6688   |          |  M=D
   6689   |    0     |  @0
   6690   |          |  M=M+1
   6691   |    1     |  @1
   6692   |          |  D=M
   6693   |    0     |  @0
   6694   |          |  A=M
   6695   |          |  M=D
   6696   |    0     |  @0
   6697   |          |  M=M+1
   6698   |    2     |  @2
   6699   |          |  D=M
   6700   |    0     |  @0
   6701   |          |  A=M
   6702   |          |  M=D
   6703   |    0     |  @0
   6704   |          |  M=M+1
   6705   |    3     |  @3
   6706   |          |  D=M
   6707   |    0     |  @0
   6708   |          |  A=M
   6709   |          |  M=D
   6710   |    0     |  @0
   6711   |          |  M=M+1
   6712   |    4     |  @4
   6713   |          |  D=M
   6714   |    0     |  @0
   6715   |          |  A=M
   6716   |          |  M=D
   6717   |    0     |  @0
   6718   |          |  M=M+1
   6719   |    0     |  @0
   6720   |          |  D=M
   6721   |    2     |  @2
   6722   |          |  M=D
   6723   |    5     |  @5
   6724   |          |  D=A
   6725   |    2     |  @2
   6726   |          |  M=M-D
   6727   |    0     |  @0
   6728   |          |  D=M
   6729   |    1     |  @1
   6730   |          |  M=D
   6731   | RAM[26]  |  @Keyboard.keyPressed
   6732   |          |  0;JMP
   6733   |ROM[6732] |  (Keyboard.keyPressed$ret.58)
          |          |        // pop local 0
   6733   |    0     |  @0
   6734   |          |  D=A
   6735   |    1     |  @1
   6736   |          |  D=D+M
   6737   | RAM[13]  |  @R13
   6738   |          |  M=D
   6739   |    0     |  @0
   6740   |          |  AM=M-1
   6741   |          |  D=M
   6742   | RAM[13]  |  @R13
   6743   |          |  A=M
   6744   |          |  M=D
          |          |        // push pointer 0
   6745   |    3     |  @3
   6746   |          |  D=M
   6747   |    0     |  @0
   6748   |          |  A=M
   6749   |          |  M=D
   6750   |    0     |  @0
   6751   |          |  M=M+1
          |          |        // call SquareGame.moveSquare 1
   6752   |RAM[6800] |  @SquareGame.moveSquare$ret.59
   6753   |          |  D=A
   6754   |    0     |  @0
   6755   |          |  A=M
   6756   |          |  M=D
   6757   |    0     |  @0
   6758   |          |  M=M+1
   6759   |    1     |  @1
   6760   |          |  D=M
   6761   |    0     |  @0
   6762   |          |  A=M
   6763   |          |  M=D
   6764   |    0     |  @0
   6765   |          |  M=M+1
   6766   |    2     |  @2
   6767   |          |  D=M
   6768   |    0     |  @0
   6769   |          |  A=M
   6770   |          |  M=D
   6771   |    0     |  @0
   6772   |          |  M=M+1
   6773   |    3     |  @3
   6774   |          |  D=M
   6775   |    0     |  @0
   6776   |          |  A=M
   6777   |          |  M=D
   6778   |    0     |  @0
   6779   |          |  M=M+1
   6780   |    4     |  @4
   6781   |          |  D=M
   6782   |    0     |  @0
   6783   |          |  A=M
   6784   |          |  M=D
   6785   |    0     |  @0
   6786   |          |  M=M+1
   6787   |    0     |  @0
   6788   |          |  D=M
   6789   |    2     |  @2
   6790   |          |  M=D
   6791   |    6     |  @6
   6792   |          |  D=A
   6793   |    2     |  @2
   6794   |          |  M=M-D
   6795   |    0     |  @0
   6796   |          |  D=M
   6797   |    1     |  @1
   6798   |          |  M=D
   6799   |RAM[5987] |  @SquareGame.moveSquare
   6800   |          |  0;JMP
   6801   |ROM[6800] |  (SquareGame.moveSquare$ret.59)
          |          |        // pop temp 0
   6801   |    0     |  @0
   6802   |          |  D=A
   6803   |    5     |  @5
   6804   |          |  D=D+A
   6805   | RAM[13]  |  @R13
   6806   |          |  M=D
   6807   |    0     |  @0
   6808   |          |  AM=M-1
   6809   |          |  D=M
   6810   | RAM[13]  |  @R13
   6811   |          |  A=M
   6812   |          |  M=D
          |          |        // goto SquareGame.run_LOOP_START_1
   6813   |RAM[6646] |  @SquareGame.run_LOOP_START_1
   6814   |          |  0;JMP
          |          |        // label SquareGame.run_LOOP_END_1
   6815   |ROM[6814] |  (SquareGame.run_LOOP_END_1)
          |          |        // push local 0
   6815   |    0     |  @0
   6816   |          |  D=A
   6817   |    1     |  @1
   6818   |          |  A=M
   6819   |          |  A=A+D
   6820   |          |  D=M
   6821   |    0     |  @0
   6822   |          |  A=M
   6823   |          |  M=D
   6824   |    0     |  @0
   6825   |          |  M=M+1
          |          |        // push constant 81
   6826   |    81    |  @81
   6827   |          |  D=A
   6828   |    0     |  @0
   6829   |          |  A=M
   6830   |          |  M=D
   6831   |    0     |  @0
   6832   |          |  M=M+1
          |          |        // eq
   6833   |    0     |  @0
   6834   |          |  AM=M-1
   6835   |          |  D=M
   6836   |          |  A=A-1
   6837   |          |  D=M-D
   6838   |          |  M=-1
   6839   |RAM[6843] |  @T12
   6840   |          |  D;JEQ
   6841   |    0     |  @0
   6842   |          |  A=M-1
   6843   |          |  M=0
   6844   |ROM[6843] |  (T12)
          |          |        // not
   6844   |    0     |  @0
   6845   |          |  A=M-1
   6846   |          |  M=!M
          |          |        // if-goto SquareGame.run_FALSE_0
   6847   |    0     |  @0
   6848   |          |  AM=M-1
   6849   |          |  D=M
   6850   |RAM[6875] |  @SquareGame.run_FALSE_0
   6851   |          |  D;JNE
          |          |        // push constant 1
   6852   |    1     |  @1
   6853   |          |  D=A
   6854   |    0     |  @0
   6855   |          |  A=M
   6856   |          |  M=D
   6857   |    0     |  @0
   6858   |          |  M=M+1
          |          |        // neg
   6859   |    0     |  @0
   6860   |          |  A=M-1
   6861   |          |  M=-M
          |          |        // pop local 1
   6862   |    1     |  @1
   6863   |          |  D=A
   6864   |    1     |  @1
   6865   |          |  D=D+M
   6866   | RAM[13]  |  @R13
   6867   |          |  M=D
   6868   |    0     |  @0
   6869   |          |  AM=M-1
   6870   |          |  D=M
   6871   | RAM[13]  |  @R13
   6872   |          |  A=M
   6873   |          |  M=D
          |          |        // goto SquareGame.run_TRUE_0
   6874   |RAM[6875] |  @SquareGame.run_TRUE_0
   6875   |          |  0;JMP
          |          |        // label SquareGame.run_FALSE_0
   6876   |ROM[6875] |  (SquareGame.run_FALSE_0)
          |          |        // label SquareGame.run_TRUE_0
   6876   |ROM[6875] |  (SquareGame.run_TRUE_0)
          |          |        // push local 0
   6876   |    0     |  @0
   6877   |          |  D=A
   6878   |    1     |  @1
   6879   |          |  A=M
   6880   |          |  A=A+D
   6881   |          |  D=M
   6882   |    0     |  @0
   6883   |          |  A=M
   6884   |          |  M=D
   6885   |    0     |  @0
   6886   |          |  M=M+1
          |          |        // push constant 90
   6887   |    90    |  @90
   6888   |          |  D=A
   6889   |    0     |  @0
   6890   |          |  A=M
   6891   |          |  M=D
   6892   |    0     |  @0
   6893   |          |  M=M+1
          |          |        // eq
   6894   |    0     |  @0
   6895   |          |  AM=M-1
   6896   |          |  D=M
   6897   |          |  A=A-1
   6898   |          |  D=M-D
   6899   |          |  M=-1
   6900   |RAM[6904] |  @T13
   6901   |          |  D;JEQ
   6902   |    0     |  @0
   6903   |          |  A=M-1
   6904   |          |  M=0
   6905   |ROM[6904] |  (T13)
          |          |        // not
   6905   |    0     |  @0
   6906   |          |  A=M-1
   6907   |          |  M=!M
          |          |        // if-goto SquareGame.run_FALSE_1
   6908   |    0     |  @0
   6909   |          |  AM=M-1
   6910   |          |  D=M
   6911   |RAM[6986] |  @SquareGame.run_FALSE_1
   6912   |          |  D;JNE
          |          |        // push this 0
   6913   |    0     |  @0
   6914   |          |  D=A
   6915   |    3     |  @3
   6916   |          |  A=M
   6917   |          |  A=A+D
   6918   |          |  D=M
   6919   |    0     |  @0
   6920   |          |  A=M
   6921   |          |  M=D
   6922   |    0     |  @0
   6923   |          |  M=M+1
          |          |        // call Square.decSize 1
   6924   |RAM[6972] |  @Square.decSize$ret.60
   6925   |          |  D=A
   6926   |    0     |  @0
   6927   |          |  A=M
   6928   |          |  M=D
   6929   |    0     |  @0
   6930   |          |  M=M+1
   6931   |    1     |  @1
   6932   |          |  D=M
   6933   |    0     |  @0
   6934   |          |  A=M
   6935   |          |  M=D
   6936   |    0     |  @0
   6937   |          |  M=M+1
   6938   |    2     |  @2
   6939   |          |  D=M
   6940   |    0     |  @0
   6941   |          |  A=M
   6942   |          |  M=D
   6943   |    0     |  @0
   6944   |          |  M=M+1
   6945   |    3     |  @3
   6946   |          |  D=M
   6947   |    0     |  @0
   6948   |          |  A=M
   6949   |          |  M=D
   6950   |    0     |  @0
   6951   |          |  M=M+1
   6952   |    4     |  @4
   6953   |          |  D=M
   6954   |    0     |  @0
   6955   |          |  A=M
   6956   |          |  M=D
   6957   |    0     |  @0
   6958   |          |  M=M+1
   6959   |    0     |  @0
   6960   |          |  D=M
   6961   |    2     |  @2
   6962   |          |  M=D
   6963   |    6     |  @6
   6964   |          |  D=A
   6965   |    2     |  @2
   6966   |          |  M=M-D
   6967   |    0     |  @0
   6968   |          |  D=M
   6969   |    1     |  @1
   6970   |          |  M=D
   6971   |RAM[2932] |  @Square.decSize
   6972   |          |  0;JMP
   6973   |ROM[6972] |  (Square.decSize$ret.60)
          |          |        // pop temp 0
   6973   |    0     |  @0
   6974   |          |  D=A
   6975   |    5     |  @5
   6976   |          |  D=D+A
   6977   | RAM[13]  |  @R13
   6978   |          |  M=D
   6979   |    0     |  @0
   6980   |          |  AM=M-1
   6981   |          |  D=M
   6982   | RAM[13]  |  @R13
   6983   |          |  A=M
   6984   |          |  M=D
          |          |        // goto SquareGame.run_TRUE_1
   6985   |RAM[6986] |  @SquareGame.run_TRUE_1
   6986   |          |  0;JMP
          |          |        // label SquareGame.run_FALSE_1
   6987   |ROM[6986] |  (SquareGame.run_FALSE_1)
          |          |        // label SquareGame.run_TRUE_1
   6987   |ROM[6986] |  (SquareGame.run_TRUE_1)
          |          |        // push local 0
   6987   |    0     |  @0
   6988   |          |  D=A
   6989   |    1     |  @1
   6990   |          |  A=M
   6991   |          |  A=A+D
   6992   |          |  D=M
   6993   |    0     |  @0
   6994   |          |  A=M
   6995   |          |  M=D
   6996   |    0     |  @0
   6997   |          |  M=M+1
          |          |        // push constant 88
   6998   |    88    |  @88
   6999   |          |  D=A
   7000   |    0     |  @0
   7001   |          |  A=M
   7002   |          |  M=D
   7003   |    0     |  @0
   7004   |          |  M=M+1
          |          |        // eq
   7005   |    0     |  @0
   7006   |          |  AM=M-1
   7007   |          |  D=M
   7008   |          |  A=A-1
   7009   |          |  D=M-D
   7010   |          |  M=-1
   7011   |RAM[7015] |  @T14
   7012   |          |  D;JEQ
   7013   |    0     |  @0
   7014   |          |  A=M-1
   7015   |          |  M=0
   7016   |ROM[7015] |  (T14)
          |          |        // not
   7016   |    0     |  @0
   7017   |          |  A=M-1
   7018   |          |  M=!M
          |          |        // if-goto SquareGame.run_FALSE_2
   7019   |    0     |  @0
   7020   |          |  AM=M-1
   7021   |          |  D=M
   7022   |RAM[7097] |  @SquareGame.run_FALSE_2
   7023   |          |  D;JNE
          |          |        // push this 0
   7024   |    0     |  @0
   7025   |          |  D=A
   7026   |    3     |  @3
   7027   |          |  A=M
   7028   |          |  A=A+D
   7029   |          |  D=M
   7030   |    0     |  @0
   7031   |          |  A=M
   7032   |          |  M=D
   7033   |    0     |  @0
   7034   |          |  M=M+1
          |          |        // call Square.incSize 1
   7035   |RAM[7083] |  @Square.incSize$ret.61
   7036   |          |  D=A
   7037   |    0     |  @0
   7038   |          |  A=M
   7039   |          |  M=D
   7040   |    0     |  @0
   7041   |          |  M=M+1
   7042   |    1     |  @1
   7043   |          |  D=M
   7044   |    0     |  @0
   7045   |          |  A=M
   7046   |          |  M=D
   7047   |    0     |  @0
   7048   |          |  M=M+1
   7049   |    2     |  @2
   7050   |          |  D=M
   7051   |    0     |  @0
   7052   |          |  A=M
   7053   |          |  M=D
   7054   |    0     |  @0
   7055   |          |  M=M+1
   7056   |    3     |  @3
   7057   |          |  D=M
   7058   |    0     |  @0
   7059   |          |  A=M
   7060   |          |  M=D
   7061   |    0     |  @0
   7062   |          |  M=M+1
   7063   |    4     |  @4
   7064   |          |  D=M
   7065   |    0     |  @0
   7066   |          |  A=M
   7067   |          |  M=D
   7068   |    0     |  @0
   7069   |          |  M=M+1
   7070   |    0     |  @0
   7071   |          |  D=M
   7072   |    2     |  @2
   7073   |          |  M=D
   7074   |    6     |  @6
   7075   |          |  D=A
   7076   |    2     |  @2
   7077   |          |  M=M-D
   7078   |    0     |  @0
   7079   |          |  D=M
   7080   |    1     |  @1
   7081   |          |  M=D
   7082   |RAM[2580] |  @Square.incSize
   7083   |          |  0;JMP
   7084   |ROM[7083] |  (Square.incSize$ret.61)
          |          |        // pop temp 0
   7084   |    0     |  @0
   7085   |          |  D=A
   7086   |    5     |  @5
   7087   |          |  D=D+A
   7088   | RAM[13]  |  @R13
   7089   |          |  M=D
   7090   |    0     |  @0
   7091   |          |  AM=M-1
   7092   |          |  D=M
   7093   | RAM[13]  |  @R13
   7094   |          |  A=M
   7095   |          |  M=D
          |          |        // goto SquareGame.run_TRUE_2
   7096   |RAM[7097] |  @SquareGame.run_TRUE_2
   7097   |          |  0;JMP
          |          |        // label SquareGame.run_FALSE_2
   7098   |ROM[7097] |  (SquareGame.run_FALSE_2)
          |          |        // label SquareGame.run_TRUE_2
   7098   |ROM[7097] |  (SquareGame.run_TRUE_2)
          |          |        // push local 0
   7098   |    0     |  @0
   7099   |          |  D=A
   7100   |    1     |  @1
   7101   |          |  A=M
   7102   |          |  A=A+D
   7103   |          |  D=M
   7104   |    0     |  @0
   7105   |          |  A=M
   7106   |          |  M=D
   7107   |    0     |  @0
   7108   |          |  M=M+1
          |          |        // push constant 131
   7109   |   131    |  @131
   7110   |          |  D=A
   7111   |    0     |  @0
   7112   |          |  A=M
   7113   |          |  M=D
   7114   |    0     |  @0
   7115   |          |  M=M+1
          |          |        // eq
   7116   |    0     |  @0
   7117   |          |  AM=M-1
   7118   |          |  D=M
   7119   |          |  A=A-1
   7120   |          |  D=M-D
   7121   |          |  M=-1
   7122   |RAM[7126] |  @T15
   7123   |          |  D;JEQ
   7124   |    0     |  @0
   7125   |          |  A=M-1
   7126   |          |  M=0
   7127   |ROM[7126] |  (T15)
          |          |        // not
   7127   |    0     |  @0
   7128   |          |  A=M-1
   7129   |          |  M=!M
          |          |        // if-goto SquareGame.run_FALSE_3
   7130   |    0     |  @0
   7131   |          |  AM=M-1
   7132   |          |  D=M
   7133   |RAM[7155] |  @SquareGame.run_FALSE_3
   7134   |          |  D;JNE
          |          |        // push constant 1
   7135   |    1     |  @1
   7136   |          |  D=A
   7137   |    0     |  @0
   7138   |          |  A=M
   7139   |          |  M=D
   7140   |    0     |  @0
   7141   |          |  M=M+1
          |          |        // pop this 1
   7142   |    1     |  @1
   7143   |          |  D=A
   7144   |    3     |  @3
   7145   |          |  D=D+M
   7146   | RAM[13]  |  @R13
   7147   |          |  M=D
   7148   |    0     |  @0
   7149   |          |  AM=M-1
   7150   |          |  D=M
   7151   | RAM[13]  |  @R13
   7152   |          |  A=M
   7153   |          |  M=D
          |          |        // goto SquareGame.run_TRUE_3
   7154   |RAM[7155] |  @SquareGame.run_TRUE_3
   7155   |          |  0;JMP
          |          |        // label SquareGame.run_FALSE_3
   7156   |ROM[7155] |  (SquareGame.run_FALSE_3)
          |          |        // label SquareGame.run_TRUE_3
   7156   |ROM[7155] |  (SquareGame.run_TRUE_3)
          |          |        // push local 0
   7156   |    0     |  @0
   7157   |          |  D=A
   7158   |    1     |  @1
   7159   |          |  A=M
   7160   |          |  A=A+D
   7161   |          |  D=M
   7162   |    0     |  @0
   7163   |          |  A=M
   7164   |          |  M=D
   7165   |    0     |  @0
   7166   |          |  M=M+1
          |          |        // push constant 133
   7167   |   133    |  @133
   7168   |          |  D=A
   7169   |    0     |  @0
   7170   |          |  A=M
   7171   |          |  M=D
   7172   |    0     |  @0
   7173   |          |  M=M+1
          |          |        // eq
   7174   |    0     |  @0
   7175   |          |  AM=M-1
   7176   |          |  D=M
   7177   |          |  A=A-1
   7178   |          |  D=M-D
   7179   |          |  M=-1
   7180   |RAM[7184] |  @T16
   7181   |          |  D;JEQ
   7182   |    0     |  @0
   7183   |          |  A=M-1
   7184   |          |  M=0
   7185   |ROM[7184] |  (T16)
          |          |        // not
   7185   |    0     |  @0
   7186   |          |  A=M-1
   7187   |          |  M=!M
          |          |        // if-goto SquareGame.run_FALSE_4
   7188   |    0     |  @0
   7189   |          |  AM=M-1
   7190   |          |  D=M
   7191   |RAM[7213] |  @SquareGame.run_FALSE_4
   7192   |          |  D;JNE
          |          |        // push constant 2
   7193   |    2     |  @2
   7194   |          |  D=A
   7195   |    0     |  @0
   7196   |          |  A=M
   7197   |          |  M=D
   7198   |    0     |  @0
   7199   |          |  M=M+1
          |          |        // pop this 1
   7200   |    1     |  @1
   7201   |          |  D=A
   7202   |    3     |  @3
   7203   |          |  D=D+M
   7204   | RAM[13]  |  @R13
   7205   |          |  M=D
   7206   |    0     |  @0
   7207   |          |  AM=M-1
   7208   |          |  D=M
   7209   | RAM[13]  |  @R13
   7210   |          |  A=M
   7211   |          |  M=D
          |          |        // goto SquareGame.run_TRUE_4
   7212   |RAM[7213] |  @SquareGame.run_TRUE_4
   7213   |          |  0;JMP
          |          |        // label SquareGame.run_FALSE_4
   7214   |ROM[7213] |  (SquareGame.run_FALSE_4)
          |          |        // label SquareGame.run_TRUE_4
   7214   |ROM[7213] |  (SquareGame.run_TRUE_4)
          |          |        // push local 0
   7214   |    0     |  @0
   7215   |          |  D=A
   7216   |    1     |  @1
   7217   |          |  A=M
   7218   |          |  A=A+D
   7219   |          |  D=M
   7220   |    0     |  @0
   7221   |          |  A=M
   7222   |          |  M=D
   7223   |    0     |  @0
   7224   |          |  M=M+1
          |          |        // push constant 130
   7225   |   130    |  @130
   7226   |          |  D=A
   7227   |    0     |  @0
   7228   |          |  A=M
   7229   |          |  M=D
   7230   |    0     |  @0
   7231   |          |  M=M+1
          |          |        // eq
   7232   |    0     |  @0
   7233   |          |  AM=M-1
   7234   |          |  D=M
   7235   |          |  A=A-1
   7236   |          |  D=M-D
   7237   |          |  M=-1
   7238   |RAM[7242] |  @T17
   7239   |          |  D;JEQ
   7240   |    0     |  @0
   7241   |          |  A=M-1
   7242   |          |  M=0
   7243   |ROM[7242] |  (T17)
          |          |        // not
   7243   |    0     |  @0
   7244   |          |  A=M-1
   7245   |          |  M=!M
          |          |        // if-goto SquareGame.run_FALSE_5
   7246   |    0     |  @0
   7247   |          |  AM=M-1
   7248   |          |  D=M
   7249   |RAM[7271] |  @SquareGame.run_FALSE_5
   7250   |          |  D;JNE
          |          |        // push constant 3
   7251   |    3     |  @3
   7252   |          |  D=A
   7253   |    0     |  @0
   7254   |          |  A=M
   7255   |          |  M=D
   7256   |    0     |  @0
   7257   |          |  M=M+1
          |          |        // pop this 1
   7258   |    1     |  @1
   7259   |          |  D=A
   7260   |    3     |  @3
   7261   |          |  D=D+M
   7262   | RAM[13]  |  @R13
   7263   |          |  M=D
   7264   |    0     |  @0
   7265   |          |  AM=M-1
   7266   |          |  D=M
   7267   | RAM[13]  |  @R13
   7268   |          |  A=M
   7269   |          |  M=D
          |          |        // goto SquareGame.run_TRUE_5
   7270   |RAM[7271] |  @SquareGame.run_TRUE_5
   7271   |          |  0;JMP
          |          |        // label SquareGame.run_FALSE_5
   7272   |ROM[7271] |  (SquareGame.run_FALSE_5)
          |          |        // label SquareGame.run_TRUE_5
   7272   |ROM[7271] |  (SquareGame.run_TRUE_5)
          |          |        // push local 0
   7272   |    0     |  @0
   7273   |          |  D=A
   7274   |    1     |  @1
   7275   |          |  A=M
   7276   |          |  A=A+D
   7277   |          |  D=M
   7278   |    0     |  @0
   7279   |          |  A=M
   7280   |          |  M=D
   7281   |    0     |  @0
   7282   |          |  M=M+1
          |          |        // push constant 132
   7283   |   132    |  @132
   7284   |          |  D=A
   7285   |    0     |  @0
   7286   |          |  A=M
   7287   |          |  M=D
   7288   |    0     |  @0
   7289   |          |  M=M+1
          |          |        // eq
   7290   |    0     |  @0
   7291   |          |  AM=M-1
   7292   |          |  D=M
   7293   |          |  A=A-1
   7294   |          |  D=M-D
   7295   |          |  M=-1
   7296   |RAM[7300] |  @T18
   7297   |          |  D;JEQ
   7298   |    0     |  @0
   7299   |          |  A=M-1
   7300   |          |  M=0
   7301   |ROM[7300] |  (T18)
          |          |        // not
   7301   |    0     |  @0
   7302   |          |  A=M-1
   7303   |          |  M=!M
          |          |        // if-goto SquareGame.run_FALSE_6
   7304   |    0     |  @0
   7305   |          |  AM=M-1
   7306   |          |  D=M
   7307   |RAM[7329] |  @SquareGame.run_FALSE_6
   7308   |          |  D;JNE
          |          |        // push constant 4
   7309   |    4     |  @4
   7310   |          |  D=A
   7311   |    0     |  @0
   7312   |          |  A=M
   7313   |          |  M=D
   7314   |    0     |  @0
   7315   |          |  M=M+1
          |          |        // pop this 1
   7316   |    1     |  @1
   7317   |          |  D=A
   7318   |    3     |  @3
   7319   |          |  D=D+M
   7320   | RAM[13]  |  @R13
   7321   |          |  M=D
   7322   |    0     |  @0
   7323   |          |  AM=M-1
   7324   |          |  D=M
   7325   | RAM[13]  |  @R13
   7326   |          |  A=M
   7327   |          |  M=D
          |          |        // goto SquareGame.run_TRUE_6
   7328   |RAM[7329] |  @SquareGame.run_TRUE_6
   7329   |          |  0;JMP
          |          |        // label SquareGame.run_FALSE_6
   7330   |ROM[7329] |  (SquareGame.run_FALSE_6)
          |          |        // label SquareGame.run_TRUE_6
   7330   |ROM[7329] |  (SquareGame.run_TRUE_6)
          |          |        // label SquareGame.run_LOOP_START_3
   7330   |ROM[7329] |  (SquareGame.run_LOOP_START_3)
          |          |        // push local 0
   7330   |    0     |  @0
   7331   |          |  D=A
   7332   |    1     |  @1
   7333   |          |  A=M
   7334   |          |  A=A+D
   7335   |          |  D=M
   7336   |    0     |  @0
   7337   |          |  A=M
   7338   |          |  M=D
   7339   |    0     |  @0
   7340   |          |  M=M+1
          |          |        // push constant 0
   7341   |    0     |  @0
   7342   |          |  D=A
   7343   |    0     |  @0
   7344   |          |  A=M
   7345   |          |  M=D
   7346   |    0     |  @0
   7347   |          |  M=M+1
          |          |        // eq
   7348   |    0     |  @0
   7349   |          |  AM=M-1
   7350   |          |  D=M
   7351   |          |  A=A-1
   7352   |          |  D=M-D
   7353   |          |  M=-1
   7354   |RAM[7358] |  @T19
   7355   |          |  D;JEQ
   7356   |    0     |  @0
   7357   |          |  A=M-1
   7358   |          |  M=0
   7359   |ROM[7358] |  (T19)
          |          |        // not
   7359   |    0     |  @0
   7360   |          |  A=M-1
   7361   |          |  M=!M
          |          |        // not
   7362   |    0     |  @0
   7363   |          |  A=M-1
   7364   |          |  M=!M
          |          |        // if-goto SquareGame.run_LOOP_END_3
   7365   |    0     |  @0
   7366   |          |  AM=M-1
   7367   |          |  D=M
   7368   |RAM[7500] |  @SquareGame.run_LOOP_END_3
   7369   |          |  D;JNE
          |          |        // call Keyboard.keyPressed 0
   7370   |RAM[7418] |  @Keyboard.keyPressed$ret.62
   7371   |          |  D=A
   7372   |    0     |  @0
   7373   |          |  A=M
   7374   |          |  M=D
   7375   |    0     |  @0
   7376   |          |  M=M+1
   7377   |    1     |  @1
   7378   |          |  D=M
   7379   |    0     |  @0
   7380   |          |  A=M
   7381   |          |  M=D
   7382   |    0     |  @0
   7383   |          |  M=M+1
   7384   |    2     |  @2
   7385   |          |  D=M
   7386   |    0     |  @0
   7387   |          |  A=M
   7388   |          |  M=D
   7389   |    0     |  @0
   7390   |          |  M=M+1
   7391   |    3     |  @3
   7392   |          |  D=M
   7393   |    0     |  @0
   7394   |          |  A=M
   7395   |          |  M=D
   7396   |    0     |  @0
   7397   |          |  M=M+1
   7398   |    4     |  @4
   7399   |          |  D=M
   7400   |    0     |  @0
   7401   |          |  A=M
   7402   |          |  M=D
   7403   |    0     |  @0
   7404   |          |  M=M+1
   7405   |    0     |  @0
   7406   |          |  D=M
   7407   |    2     |  @2
   7408   |          |  M=D
   7409   |    5     |  @5
   7410   |          |  D=A
   7411   |    2     |  @2
   7412   |          |  M=M-D
   7413   |    0     |  @0
   7414   |          |  D=M
   7415   |    1     |  @1
   7416   |          |  M=D
   7417   | RAM[26]  |  @Keyboard.keyPressed
   7418   |          |  0;JMP
   7419   |ROM[7418] |  (Keyboard.keyPressed$ret.62)
          |          |        // pop local 0
   7419   |    0     |  @0
   7420   |          |  D=A
   7421   |    1     |  @1
   7422   |          |  D=D+M
   7423   | RAM[13]  |  @R13
   7424   |          |  M=D
   7425   |    0     |  @0
   7426   |          |  AM=M-1
   7427   |          |  D=M
   7428   | RAM[13]  |  @R13
   7429   |          |  A=M
   7430   |          |  M=D
          |          |        // push pointer 0
   7431   |    3     |  @3
   7432   |          |  D=M
   7433   |    0     |  @0
   7434   |          |  A=M
   7435   |          |  M=D
   7436   |    0     |  @0
   7437   |          |  M=M+1
          |          |        // call SquareGame.moveSquare 1
   7438   |RAM[7486] |  @SquareGame.moveSquare$ret.63
   7439   |          |  D=A
   7440   |    0     |  @0
   7441   |          |  A=M
   7442   |          |  M=D
   7443   |    0     |  @0
   7444   |          |  M=M+1
   7445   |    1     |  @1
   7446   |          |  D=M
   7447   |    0     |  @0
   7448   |          |  A=M
   7449   |          |  M=D
   7450   |    0     |  @0
   7451   |          |  M=M+1
   7452   |    2     |  @2
   7453   |          |  D=M
   7454   |    0     |  @0
   7455   |          |  A=M
   7456   |          |  M=D
   7457   |    0     |  @0
   7458   |          |  M=M+1
   7459   |    3     |  @3
   7460   |          |  D=M
   7461   |    0     |  @0
   7462   |          |  A=M
   7463   |          |  M=D
   7464   |    0     |  @0
   7465   |          |  M=M+1
   7466   |    4     |  @4
   7467   |          |  D=M
   7468   |    0     |  @0
   7469   |          |  A=M
   7470   |          |  M=D
   7471   |    0     |  @0
   7472   |          |  M=M+1
   7473   |    0     |  @0
   7474   |          |  D=M
   7475   |    2     |  @2
   7476   |          |  M=D
   7477   |    6     |  @6
   7478   |          |  D=A
   7479   |    2     |  @2
   7480   |          |  M=M-D
   7481   |    0     |  @0
   7482   |          |  D=M
   7483   |    1     |  @1
   7484   |          |  M=D
   7485   |RAM[5987] |  @SquareGame.moveSquare
   7486   |          |  0;JMP
   7487   |ROM[7486] |  (SquareGame.moveSquare$ret.63)
          |          |        // pop temp 0
   7487   |    0     |  @0
   7488   |          |  D=A
   7489   |    5     |  @5
   7490   |          |  D=D+A
   7491   | RAM[13]  |  @R13
   7492   |          |  M=D
   7493   |    0     |  @0
   7494   |          |  AM=M-1
   7495   |          |  D=M
   7496   | RAM[13]  |  @R13
   7497   |          |  A=M
   7498   |          |  M=D
          |          |        // goto SquareGame.run_LOOP_START_3
   7499   |RAM[7329] |  @SquareGame.run_LOOP_START_3
   7500   |          |  0;JMP
          |          |        // label SquareGame.run_LOOP_END_3
   7501   |ROM[7500] |  (SquareGame.run_LOOP_END_3)
          |          |        // goto SquareGame.run_LOOP_START_0
   7501   |RAM[6624] |  @SquareGame.run_LOOP_START_0
   7502   |          |  0;JMP
          |          |        // label SquareGame.run_LOOP_END_0
   7503   |ROM[7502] |  (SquareGame.run_LOOP_END_0)
          |          |        // push constant 0
   7503   |    0     |  @0
   7504   |          |  D=A
   7505   |    0     |  @0
   7506   |          |  A=M
   7507   |          |  M=D
   7508   |    0     |  @0
   7509   |          |  M=M+1
          |          |  
          |          |  
          |          |  
          |          |  
          |          |  
